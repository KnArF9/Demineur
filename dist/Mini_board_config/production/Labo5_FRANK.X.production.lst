

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 19 19:29:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1,minocg
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F45K20 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  001B54                     __pidataBANK0:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _randx
    93  001B54  0001               	dw	1
    94  001B56  0000               	dw	0
    95                           
    96                           ;initializer for _m_niveau
    97  001B58  0001               	dw	1
    98                           
    99                           	psect	idataBANK1
   100  001418                     __pidataBANK1:
   101                           	opt callstack 0
   102                           
   103                           ;initializer for _matCGRAM
   104  001418  00                 	db	0
   105  001419  00                 	db	0
   106  00141A  11                 	db	17
   107  00141B  15                 	db	21
   108  00141C  15                 	db	21
   109  00141D  1B                 	db	27
   110  00141E  1B                 	db	27
   111  00141F  0E                 	db	14
   112  001420  04                 	db	4
   113  001421  0E                 	db	14
   114  001422  15                 	db	21
   115  001423  1B                 	db	27
   116  001424  0A                 	db	10
   117  001425  0E                 	db	14
   118  001426  15                 	db	21
   119  001427  15                 	db	21
   120  001428  1B                 	db	27
   121  001429  11                 	db	17
   122  00142A  0A                 	db	10
   123  00142B  15                 	db	21
   124  00142C  15                 	db	21
   125  00142D  1B                 	db	27
   126  00142E  0A                 	db	10
   127  00142F  0A                 	db	10
   128  001430  0E                 	db	14
   129  001431  1B                 	db	27
   130  001432  0A                 	db	10
   131  001433  1F                 	db	31
   132  001434  11                 	db	17
   133  001435  1F                 	db	31
   134  001436  0A                 	db	10
   135  001437  0A                 	db	10
   136  001438  08                 	db	8
   137  001439  04                 	db	4
   138  00143A  1F                 	db	31
   139  00143B  10                 	db	16
   140  00143C  1E                 	db	30
   141  00143D  10                 	db	16
   142  00143E  1F                 	db	31
   143  00143F  00                 	db	0
   144  001440  04                 	db	4
   145  001441  0A                 	db	10
   146  001442  0E                 	db	14
   147  001443  11                 	db	17
   148  001444  1F                 	db	31
   149  001445  10                 	db	16
   150  001446  0E                 	db	14
   151  001447  00                 	db	0
   152  001448  08                 	db	8
   153  001449  04                 	db	4
   154  00144A  0E                 	db	14
   155  00144B  01                 	db	1
   156  00144C  0F                 	db	15
   157  00144D  11                 	db	17
   158  00144E  0F                 	db	15
   159  00144F  00                 	db	0
   160  001450  04                 	db	4
   161  001451  0A                 	db	10
   162  001452  0E                 	db	14
   163  001453  01                 	db	1
   164  001454  0F                 	db	15
   165  001455  11                 	db	17
   166  001456  0F                 	db	15
   167  001457  00                 	db	0
   168                           
   169                           ;initializer for _m_aliens
   170  001458  20                 	db	32
   171  001459  20                 	db	32
   172  00145A  20                 	db	32
   173  00145B  20                 	db	32
   174  00145C  20                 	db	32
   175  00145D  20                 	db	32
   176  00145E  20                 	db	32
   177  00145F  20                 	db	32
   178  001460  20                 	db	32
   179  001461  20                 	db	32
   180  001462  20                 	db	32
   181  001463  20                 	db	32
   182  001464  20                 	db	32
   183  001465  20                 	db	32
   184  001466  20                 	db	32
   185  001467  20                 	db	32
   186  001468  20                 	db	32
   187  001469  20                 	db	32
   188  00146A  20                 	db	32
   189  00146B  20                 	db	32
   190  00146C  00                 	db	0
   191  00146D  20                 	db	32
   192  00146E  20                 	db	32
   193  00146F  20                 	db	32
   194  001470  20                 	db	32
   195  001471  20                 	db	32
   196  001472  20                 	db	32
   197  001473  20                 	db	32
   198  001474  20                 	db	32
   199  001475  20                 	db	32
   200  001476  20                 	db	32
   201  001477  20                 	db	32
   202  001478  20                 	db	32
   203  001479  20                 	db	32
   204  00147A  20                 	db	32
   205  00147B  20                 	db	32
   206  00147C  20                 	db	32
   207  00147D  20                 	db	32
   208  00147E  20                 	db	32
   209  00147F  20                 	db	32
   210  001480  20                 	db	32
   211  001481  00                 	db	0
   212  001482  20                 	db	32
   213  001483  20                 	db	32
   214  001484  20                 	db	32
   215  001485  20                 	db	32
   216  001486  20                 	db	32
   217  001487  20                 	db	32
   218  001488  20                 	db	32
   219  001489  20                 	db	32
   220  00148A  20                 	db	32
   221  00148B  20                 	db	32
   222  00148C  20                 	db	32
   223  00148D  20                 	db	32
   224  00148E  20                 	db	32
   225  00148F  20                 	db	32
   226  001490  20                 	db	32
   227  001491  20                 	db	32
   228  001492  20                 	db	32
   229  001493  20                 	db	32
   230  001494  20                 	db	32
   231  001495  20                 	db	32
   232  001496  00                 	db	0
   233  001497  20                 	db	32
   234  001498  20                 	db	32
   235  001499  20                 	db	32
   236  00149A  20                 	db	32
   237  00149B  20                 	db	32
   238  00149C  20                 	db	32
   239  00149D  20                 	db	32
   240  00149E  20                 	db	32
   241  00149F  20                 	db	32
   242  0014A0  20                 	db	32
   243  0014A1  20                 	db	32
   244  0014A2  20                 	db	32
   245  0014A3  20                 	db	32
   246  0014A4  20                 	db	32
   247  0014A5  20                 	db	32
   248  0014A6  20                 	db	32
   249  0014A7  20                 	db	32
   250  0014A8  20                 	db	32
   251  0014A9  20                 	db	32
   252  0014AA  20                 	db	32
   253  0014AB  00                 	db	0
   254                           
   255                           	psect	smallconst
   256  000600                     __psmallconst:
   257                           	opt callstack 0
   258  000600  00                 	db	0
   259  000601                     _jeuPerdu:
   260                           	opt callstack 0
   261  000601  70                 	db	112
   262  000602  65                 	db	101
   263  000603  72                 	db	114
   264  000604  64                 	db	100
   265  000605  75                 	db	117
   266  000606  2E                 	db	46
   267  000607  2E                 	db	46
   268  000608  2E                 	db	46
   269  000609  20                 	db	32
   270  00060A  73                 	db	115
   271  00060B  63                 	db	99
   272  00060C  6F                 	db	111
   273  00060D  72                 	db	114
   274  00060E  65                 	db	101
   275  00060F  20                 	db	32
   276  000610  00                 	db	0
   277  000611                     __end_of_jeuPerdu:
   278                           	opt callstack 0
   279  000611                     _dpowers:
   280                           	opt callstack 0
   281  000611  0001               	dw	1
   282  000613  000A               	dw	10
   283  000615  0064               	dw	100
   284  000617  03E8               	dw	1000
   285  000619  2710               	dw	10000
   286  00061B                     __end_of_dpowers:
   287                           	opt callstack 0
   288  00061B                     _accueil:
   289                           	opt callstack 0
   290  00061B  4C                 	db	76
   291  00061C  61                 	db	97
   292  00061D  62                 	db	98
   293  00061E  6F                 	db	111
   294  00061F  35                 	db	53
   295  000620  20                 	db	32
   296  000621  64                 	db	100
   297  000622  65                 	db	101
   298  000623  20                 	db	32
   299  000624  46                 	db	70
   300  000625  72                 	db	114
   301  000626  61                 	db	97
   302  000627  6E                 	db	110
   303  000628  6B                 	db	107
   304  000629  00                 	db	0
   305  00062A                     __end_of_accueil:
   306                           	opt callstack 0
   307  00062A                     _niveau1:
   308                           	opt callstack 0
   309  00062A  4E                 	db	78
   310  00062B  69                 	db	105
   311  00062C  76                 	db	118
   312  00062D  65                 	db	101
   313  00062E  61                 	db	97
   314  00062F  75                 	db	117
   315  000630  20                 	db	32
   316  000631  23                 	db	35
   317  000632  31                 	db	49
   318  000633  00                 	db	0
   319  000634                     __end_of_niveau1:
   320                           	opt callstack 0
   321  0000                     _TMR0	set	4054
   322  0000                     _TMR1	set	4046
   323  0000                     _PORTAbits	set	3968
   324  0000                     _PORTD	set	3971
   325  0000                     _RCREG	set	4014
   326  0000                     _TXREG	set	4013
   327  0000                     _RCSTAbits	set	4011
   328  0000                     _TXSTAbits	set	4012
   329  0000                     _BAUDCONbits	set	4024
   330  0000                     _SPBRG	set	4015
   331  0000                     _SPBRGH	set	4016
   332  0000                     _TRISCbits	set	3988
   333  0000                     _INTCONbits	set	4082
   334  0000                     _T0CONbits	set	4053
   335  0000                     _ADCON2bits	set	4032
   336  0000                     _ADCON1	set	4033
   337  0000                     _ANSELbits	set	3966
   338  0000                     _T1CONbits	set	4045
   339  0000                     _TRISA	set	3986
   340  0000                     _ANSEL	set	3966
   341  0000                     _TRISB	set	3987
   342  0000                     _ANSELH	set	3967
   343  0000                     _TRISD	set	3989
   344  0000                     _ADRESH	set	4036
   345  0000                     _ADCON0bits	set	4034
   346  0000                     _PORTBbits	set	3969
   347  0000                     _RCIF	set	31989
   348  000634                     STR_2:
   349  000634  50                 	db	80	;'P'
   350  000635  65                 	db	101	;'e'
   351  000636  72                 	db	114	;'r'
   352  000637  64                 	db	100	;'d'
   353  000638  75                 	db	117	;'u'
   354  000639  2E                 	db	46
   355  00063A  2E                 	db	46
   356  00063B  2E                 	db	46
   357  00063C  20                 	db	32
   358  00063D  73                 	db	115	;'s'
   359  00063E  63                 	db	99	;'c'
   360  00063F  6F                 	db	111	;'o'
   361  000640  72                 	db	114	;'r'
   362  000641  65                 	db	101	;'e'
   363  000642  3A                 	db	58	;':'
   364  000643  20                 	db	32
   365  000644  25                 	db	37
   366  000645  64                 	db	100	;'d'
   367  000646  00                 	db	0
   368  000647                     STR_1:
   369  000647  4E                 	db	78	;'N'
   370  000648  69                 	db	105	;'i'
   371  000649  76                 	db	118	;'v'
   372  00064A  65                 	db	101	;'e'
   373  00064B  61                 	db	97	;'a'
   374  00064C  75                 	db	117	;'u'
   375  00064D  20                 	db	32
   376  00064E  23                 	db	35
   377  00064F  25                 	db	37
   378  000650  64                 	db	100	;'d'
   379  000651  00                 	db	0
   380                           
   381                           ; #config settings
   382  000652  00                 	db	0	; dummy byte at the end
   383  0000                     
   384                           	psect	cinit
   385  00197E                     __pcinit:
   386                           	opt callstack 0
   387  00197E                     start_initialization:
   388                           	opt callstack 0
   389  00197E                     __initialization:
   390                           	opt callstack 0
   391                           
   392                           ; Initialize objects allocated to BANK1 (148 bytes)
   393                           ; load TBLPTR registers with __pidataBANK1
   394  00197E  0E18               	movlw	low __pidataBANK1
   395  001980  6EF6               	movwf	tblptrl,c
   396  001982  0E14               	movlw	high __pidataBANK1
   397  001984  6EF7               	movwf	tblptrh,c
   398  001986  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   399  001988  6EF8               	movwf	tblptru,c
   400  00198A  EE01  F000         	lfsr	0,__pdataBANK1
   401  00198E  EE10 F094          	lfsr	1,148
   402  001992                     copy_data0:
   403  001992  0009               	tblrd		*+
   404  001994  CFF5 FFEE          	movff	tablat,postinc0
   405  001998  50E5               	movf	postdec1,w,c
   406  00199A  50E1               	movf	fsr1l,w,c
   407  00199C  E1FA               	bnz	copy_data0
   408                           
   409                           ; Initialize objects allocated to BANK0 (6 bytes)
   410                           ; load TBLPTR registers with __pidataBANK0
   411  00199E  0E54               	movlw	low __pidataBANK0
   412  0019A0  6EF6               	movwf	tblptrl,c
   413  0019A2  0E1B               	movlw	high __pidataBANK0
   414  0019A4  6EF7               	movwf	tblptrh,c
   415  0019A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   416  0019A8  6EF8               	movwf	tblptru,c
   417  0019AA  EE00  F0EA         	lfsr	0,__pdataBANK0
   418  0019AE  EE10 F006          	lfsr	1,6
   419  0019B2                     copy_data1:
   420  0019B2  0009               	tblrd		*+
   421  0019B4  CFF5 FFEE          	movff	tablat,postinc0
   422  0019B8  50E5               	movf	postdec1,w,c
   423  0019BA  50E1               	movf	fsr1l,w,c
   424  0019BC  E1FA               	bnz	copy_data1
   425                           
   426                           ; Clear objects allocated to BANK0 (1 bytes)
   427  0019BE  0100               	movlb	0
   428  0019C0  6BF0               	clrf	__pbssBANK0& (0+255),b
   429  0019C2                     end_of_initialization:
   430                           	opt callstack 0
   431  0019C2                     __end_of__initialization:
   432                           	opt callstack 0
   433  0019C2  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   434  0019C4  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   435  0019C6  0100               	movlb	0
   436  0019C8  EFF3  F004         	goto	_main	;jump to C main() function
   437                           
   438                           	psect	bssBANK0
   439  0000F0                     __pbssBANK0:
   440                           	opt callstack 0
   441  0000F0                     _m_tempsDAfficher:
   442                           	opt callstack 0
   443  0000F0                     	ds	1
   444                           
   445                           	psect	dataBANK0
   446  0000EA                     __pdataBANK0:
   447                           	opt callstack 0
   448  0000EA                     _randx:
   449                           	opt callstack 0
   450  0000EA                     	ds	4
   451  0000EE                     _m_niveau:
   452                           	opt callstack 0
   453  0000EE                     	ds	2
   454                           
   455                           	psect	dataBANK1
   456  000100                     __pdataBANK1:
   457                           	opt callstack 0
   458  000100                     _matCGRAM:
   459                           	opt callstack 0
   460  000100                     	ds	64
   461  000140                     _m_aliens:
   462                           	opt callstack 0
   463  000140                     	ds	84
   464                           
   465                           	psect	cstackBANK0
   466  000060                     __pcstackBANK0:
   467                           	opt callstack 0
   468  000060                     ??_getAnalog:
   469  000060                     ??_lcd_ecrireDonnees:
   470  000060                     ??_lcd_busy:
   471  000060                     ?_strcpy:
   472                           	opt callstack 0
   473  000060                     ?___wmul:
   474                           	opt callstack 0
   475  000060                     ?___awdiv:
   476                           	opt callstack 0
   477  000060                     ?___lwdiv:
   478                           	opt callstack 0
   479  000060                     ?___lmul:
   480                           	opt callstack 0
   481  000060                     ___wmul@multiplier:
   482                           	opt callstack 0
   483  000060                     ___awdiv@dividend:
   484                           	opt callstack 0
   485  000060                     ___lwdiv@dividend:
   486                           	opt callstack 0
   487  000060                     srand@x:
   488                           	opt callstack 0
   489  000060                     strcpy@to:
   490                           	opt callstack 0
   491  000060                     ___lmul@multiplier:
   492                           	opt callstack 0
   493                           
   494                           ; 4 bytes @ 0x0
   495  000060                     	ds	1
   496  000061                     getAnalog@canal:
   497                           	opt callstack 0
   498  000061                     lcd_ecrireDonnees@donnee:
   499                           	opt callstack 0
   500  000061                     lcd_busy@adresse:
   501                           	opt callstack 0
   502  000061                     perdu@i:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1
   506  000061                     	ds	1
   507  000062                     ??_lcd_resetSequence:
   508  000062                     lcd_wrCom@commande:
   509                           	opt callstack 0
   510  000062                     lcd_wrData@caractere:
   511                           	opt callstack 0
   512  000062                     ___wmul@multiplicand:
   513                           	opt callstack 0
   514  000062                     ___awdiv@divisor:
   515                           	opt callstack 0
   516  000062                     ___lwdiv@divisor:
   517                           	opt callstack 0
   518  000062                     strcpy@from:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522  000062                     	ds	1
   523  000063                     ??_lcd_initCGRam:
   524  000063                     lcd_gotoXY@y:
   525                           	opt callstack 0
   526  000063                     lcd_ecritChar@car:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x3
   530  000063                     	ds	1
   531  000064                     lcd_gotoXY@x:
   532                           	opt callstack 0
   533  000064                     lcd_ecritChar@posRam:
   534                           	opt callstack 0
   535  000064                     ___awdiv@counter:
   536                           	opt callstack 0
   537  000064                     ___wmul@product:
   538                           	opt callstack 0
   539  000064                     ___lwdiv@quotient:
   540                           	opt callstack 0
   541  000064                     strcpy@cp:
   542                           	opt callstack 0
   543  000064                     ___lmul@multiplicand:
   544                           	opt callstack 0
   545                           
   546                           ; 4 bytes @ 0x4
   547  000064                     	ds	1
   548  000065                     lcd_initCGRam@i:
   549                           	opt callstack 0
   550  000065                     ___awdiv@sign:
   551                           	opt callstack 0
   552  000065                     deplace@x:
   553                           	opt callstack 0
   554  000065                     lcd_putMessage@chaine:
   555                           	opt callstack 0
   556                           
   557                           ; 3 bytes @ 0x5
   558  000065                     	ds	1
   559  000066                     ??_videAliens:
   560  000066                     lcd_initCGRam@j:
   561                           	opt callstack 0
   562  000066                     ___lwdiv@counter:
   563                           	opt callstack 0
   564  000066                     feu@pts:
   565                           	opt callstack 0
   566  000066                     ___awdiv@quotient:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570  000066                     	ds	1
   571  000067                     ??_deplace:
   572  000067                     ?___lwmod:
   573                           	opt callstack 0
   574  000067                     ___lwmod@dividend:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x7
   578  000067                     	ds	1
   579  000068                     ??_lcd_putMessage:
   580  000068                     ??_feu:
   581  000068                     videAliens@i:
   582                           	opt callstack 0
   583  000068                     ___lmul@product:
   584                           	opt callstack 0
   585                           
   586                           ; 4 bytes @ 0x8
   587  000068                     	ds	1
   588  000069                     ___lwmod@divisor:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x9
   592  000069                     	ds	1
   593  00006A                     videAliens@j:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0xA
   597  00006A                     	ds	1
   598  00006B                     ___lwmod@counter:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0xB
   602  00006B                     	ds	1
   603  00006C                     ?_sprintf:
   604                           	opt callstack 0
   605  00006C                     ?_rand:
   606                           	opt callstack 0
   607  00006C                     sprintf@sp:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0xC
   611  00006C                     	ds	1
   612  00006D                     lcd_putMessage@j:
   613                           	opt callstack 0
   614  00006D                     feu@i:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xD
   618  00006D                     	ds	1
   619  00006E                     ?___awmod:
   620                           	opt callstack 0
   621  00006E                     sprintf@f:
   622                           	opt callstack 0
   623  00006E                     ___awmod@dividend:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0xE
   627  00006E                     	ds	1
   628  00006F                     feu@x:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0xF
   632  00006F                     	ds	1
   633  000070                     ___awmod@divisor:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x10
   637  000070                     	ds	2
   638  000072                     ??_sprintf:
   639  000072                     ___awmod@counter:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0x12
   643  000072                     	ds	1
   644  000073                     ___awmod@sign:
   645                           	opt callstack 0
   646  000073                     sprintf@ap:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x13
   650  000073                     	ds	1
   651  000074                     ??_nouveauxAliens:
   652                           
   653                           ; 1 bytes @ 0x14
   654  000074                     	ds	1
   655  000075                     sprintf@flag:
   656                           	opt callstack 0
   657  000075                     nouveauxAliens@i:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x15
   661  000075                     	ds	1
   662  000076                     sprintf@prec:
   663                           	opt callstack 0
   664                           
   665                           ; 1 bytes @ 0x16
   666  000076                     	ds	1
   667  000077                     nouveauxAliens@j:
   668                           	opt callstack 0
   669  000077                     sprintf@val:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x17
   673  000077                     	ds	2
   674  000079                     nouveauxAliens@endroitAliens:
   675                           	opt callstack 0
   676  000079                     sprintf@c:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x19
   680  000079                     	ds	1
   681  00007A                     nouveauxAliens@sorteAliens:
   682                           	opt callstack 0
   683  00007A                     affichePerdu@pts:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x1A
   687  00007A                     	ds	2
   688  00007C                     ??_affichePerdu:
   689                           
   690                           ; 1 bytes @ 0x1C
   691  00007C                     	ds	2
   692  00007E                     affichePerdu@buffer:
   693                           	opt callstack 0
   694                           
   695                           ; 50 bytes @ 0x1E
   696  00007E                     	ds	50
   697  0000B0                     ??_main:
   698                           
   699                           ; 1 bytes @ 0x50
   700  0000B0                     	ds	2
   701  0000B2                     main@bufferNiveau:
   702                           	opt callstack 0
   703                           
   704                           ; 50 bytes @ 0x52
   705  0000B2                     	ds	50
   706  0000E4                     main@dizaine:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x84
   710  0000E4                     	ds	2
   711  0000E6                     main@pts:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x86
   715  0000E6                     	ds	2
   716  0000E8                     main@posX:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x88
   720  0000E8                     	ds	2
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 72 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  bufferNiveau   50   82[BANK0 ] unsigned char [50]
   732 ;;  posX            2  136[BANK0 ] int 
   733 ;;  pts             2  134[BANK0 ] int 
   734 ;;  dizaine         2  132[BANK0 ] int 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         0       0       0       0       0       0       0
   745 ;;      Locals:         0      56       0       0       0       0       0
   746 ;;      Temps:          0       2       0       0       0       0       0
   747 ;;      Totals:         0      58       0       0       0       0       0
   748 ;;Total ram usage:       58 bytes
   749 ;; Hardware stack levels required when called:    7
   750 ;; This function calls:
   751 ;;		___awdiv
   752 ;;		___awmod
   753 ;;		_afficheAliens
   754 ;;		_affichePerdu
   755 ;;		_deplace
   756 ;;		_feu
   757 ;;		_initialisation
   758 ;;		_lcd_cacheCurseur
   759 ;;		_lcd_effaceAffichage
   760 ;;		_lcd_gotoXY
   761 ;;		_lcd_init
   762 ;;		_lcd_putMessage
   763 ;;		_nouveauxAliens
   764 ;;		_perdu
   765 ;;		_sprintf
   766 ;;		_videAliens
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text0
   773  0009E6                     __ptext0:
   774                           	opt callstack 0
   775  0009E6                     _main:
   776                           	opt callstack 24
   777  0009E6                     
   778                           ;main.c: 74: int posX = 10;
   779  0009E6  0E00               	movlw	0
   780  0009E8  0100               	movlb	0	; force () banked
   781  0009EA  6FE9               	movwf	(main@posX+1)& (0+255),b
   782  0009EC  0E0A               	movlw	10
   783  0009EE  6FE8               	movwf	main@posX& (0+255),b
   784                           
   785                           ;main.c: 75: int pts=0;
   786  0009F0  0E00               	movlw	0
   787  0009F2  0100               	movlb	0	; force () banked
   788  0009F4  6FE7               	movwf	(main@pts+1)& (0+255),b
   789  0009F6  0E00               	movlw	0
   790  0009F8  6FE6               	movwf	main@pts& (0+255),b
   791                           
   792                           ;main.c: 76: int dizaine =0;
   793  0009FA  0E00               	movlw	0
   794  0009FC  0100               	movlb	0	; force () banked
   795  0009FE  6FE5               	movwf	(main@dizaine+1)& (0+255),b
   796  000A00  0E00               	movlw	0
   797  000A02  6FE4               	movwf	main@dizaine& (0+255),b
   798  000A04                     
   799                           ; BSR set to: 0
   800                           ;main.c: 77: char bufferNiveau[50];;main.c: 78: initialisation();
   801  000A04  EC6B  F00C         	call	_initialisation	;wreg free
   802  000A08                     
   803                           ;main.c: 79: lcd_init();
   804  000A08  EC59  F00D         	call	_lcd_init	;wreg free
   805  000A0C                     
   806                           ;main.c: 80: lcd_effaceAffichage();
   807  000A0C  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
   808  000A10                     
   809                           ;main.c: 81: lcd_cacheCurseur();
   810  000A10  ECA2  F00D         	call	_lcd_cacheCurseur	;wreg free
   811  000A14                     
   812                           ;main.c: 82: lcd_gotoXY(1,1);
   813  000A14  0E01               	movlw	1
   814  000A16  0100               	movlb	0	; force () banked
   815  000A18  6F63               	movwf	lcd_gotoXY@y& (0+255),b
   816  000A1A  0E01               	movlw	1
   817  000A1C  ECD1  F00A         	call	_lcd_gotoXY
   818  000A20                     
   819                           ;main.c: 83: lcd_putMessage(accueil);
   820  000A20  0E1B               	movlw	low _accueil
   821  000A22  0100               	movlb	0	; force () banked
   822  000A24  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
   823  000A26  0E06               	movlw	high _accueil
   824  000A28  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   825  000A2A  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
   826  000A2C  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   827  000A2E  A4D8               	btfss	status,2,c
   828  000A30  0E00               	movlw	low (__mediumconst shr (0+16))
   829  000A32  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   830  000A34  EC08  F009         	call	_lcd_putMessage	;wreg free
   831  000A38                     
   832                           ;main.c: 85: _delay((unsigned long)((1000)*(1000000/4000.0)));
   833  000A38  0E02               	movlw	2
   834  000A3A  0100               	movlb	0	; force () banked
   835  000A3C  6FB1               	movwf	(??_main+1)& (0+255),b
   836  000A3E  0E45               	movlw	69
   837  000A40  6FB0               	movwf	??_main& (0+255),b
   838  000A42  0EA9               	movlw	169
   839  000A44                     u1387:
   840  000A44  2EE8               	decfsz	wreg,f,c
   841  000A46  D7FE               	bra	u1387
   842  000A48  2FB0               	decfsz	??_main& (0+255),f,b
   843  000A4A  D7FC               	bra	u1387
   844  000A4C  2FB1               	decfsz	(??_main+1)& (0+255),f,b
   845  000A4E  D7FA               	bra	u1387
   846  000A50  F000 F000          	nop2	
   847  000A54                     
   848                           ;main.c: 86: lcd_effaceAffichage();
   849  000A54  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
   850  000A58                     l2557:
   851                           
   852                           ;main.c: 88: {;main.c: 89: if(m_tempsDAfficher == 1)
   853  000A58  0100               	movlb	0	; force () banked
   854  000A5A  05F0               	decf	_m_tempsDAfficher& (0+255),w,b
   855  000A5C  A4D8               	btfss	status,2,c
   856  000A5E  EF33  F005         	goto	u1351
   857  000A62  EF35  F005         	goto	u1350
   858  000A66                     u1351:
   859  000A66  EF83  F005         	goto	l2585
   860  000A6A                     u1350:
   861  000A6A                     
   862                           ; BSR set to: 0
   863                           ;main.c: 90: {;main.c: 91: nouveauxAliens();
   864  000A6A  ECFC  F006         	call	_nouveauxAliens	;wreg free
   865  000A6E                     
   866                           ;main.c: 92: afficheAliens();
   867  000A6E  ECDE  F00B         	call	_afficheAliens	;wreg free
   868  000A72                     
   869                           ;main.c: 93: if(perdu() == 0)
   870  000A72  EC56  F00A         	call	_perdu	;wreg free
   871  000A76  0900               	iorlw	0
   872  000A78  A4D8               	btfss	status,2,c
   873  000A7A  EF41  F005         	goto	u1361
   874  000A7E  EF43  F005         	goto	u1360
   875  000A82                     u1361:
   876  000A82  EF79  F005         	goto	l2581
   877  000A86                     u1360:
   878  000A86                     
   879                           ;main.c: 94: {;main.c: 95: affichePerdu(pts);
   880  000A86  C0E6  F07A         	movff	main@pts,affichePerdu@pts
   881  000A8A  C0E7  F07B         	movff	main@pts+1,affichePerdu@pts+1
   882  000A8E  EC11  F00C         	call	_affichePerdu	;wreg free
   883  000A92                     
   884                           ;main.c: 96: posX =10;
   885  000A92  0E00               	movlw	0
   886  000A94  0100               	movlb	0	; force () banked
   887  000A96  6FE9               	movwf	(main@posX+1)& (0+255),b
   888  000A98  0E0A               	movlw	10
   889  000A9A  6FE8               	movwf	main@posX& (0+255),b
   890  000A9C                     
   891                           ; BSR set to: 0
   892                           ;main.c: 97: videAliens();
   893  000A9C  ECA4  F007         	call	_videAliens	;wreg free
   894  000AA0                     
   895                           ;main.c: 98: pts=0;
   896  000AA0  0E00               	movlw	0
   897  000AA2  0100               	movlb	0	; force () banked
   898  000AA4  6FE7               	movwf	(main@pts+1)& (0+255),b
   899  000AA6  0E00               	movlw	0
   900  000AA8  6FE6               	movwf	main@pts& (0+255),b
   901  000AAA                     
   902                           ; BSR set to: 0
   903                           ;main.c: 99: m_niveau =1;
   904  000AAA  0E00               	movlw	0
   905  000AAC  0100               	movlb	0	; force () banked
   906  000AAE  6FEF               	movwf	(_m_niveau+1)& (0+255),b
   907  000AB0  0E01               	movlw	1
   908  000AB2  6FEE               	movwf	_m_niveau& (0+255),b
   909  000AB4                     
   910                           ; BSR set to: 0
   911                           ;main.c: 100: dizaine=0;
   912  000AB4  0E00               	movlw	0
   913  000AB6  0100               	movlb	0	; force () banked
   914  000AB8  6FE5               	movwf	(main@dizaine+1)& (0+255),b
   915  000ABA  0E00               	movlw	0
   916  000ABC  6FE4               	movwf	main@dizaine& (0+255),b
   917  000ABE                     
   918                           ; BSR set to: 0
   919                           ;main.c: 101: lcd_putMessage(niveau1);
   920  000ABE  0E2A               	movlw	low _niveau1
   921  000AC0  0100               	movlb	0	; force () banked
   922  000AC2  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
   923  000AC4  0E06               	movlw	high _niveau1
   924  000AC6  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   925  000AC8  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
   926  000ACA  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   927  000ACC  A4D8               	btfss	status,2,c
   928  000ACE  0E00               	movlw	low (__mediumconst shr (0+16))
   929  000AD0  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   930  000AD2  EC08  F009         	call	_lcd_putMessage	;wreg free
   931  000AD6                     
   932                           ;main.c: 102: _delay((unsigned long)((900)*(1000000/4000.0)));
   933  000AD6  0E02               	movlw	2
   934  000AD8  0100               	movlb	0	; force () banked
   935  000ADA  6FB1               	movwf	(??_main+1)& (0+255),b
   936  000ADC  0E25               	movlw	37
   937  000ADE  6FB0               	movwf	??_main& (0+255),b
   938  000AE0  0E31               	movlw	49
   939  000AE2                     u1397:
   940  000AE2  2EE8               	decfsz	wreg,f,c
   941  000AE4  D7FE               	bra	u1397
   942  000AE6  2FB0               	decfsz	??_main& (0+255),f,b
   943  000AE8  D7FC               	bra	u1397
   944  000AEA  2FB1               	decfsz	(??_main+1)& (0+255),f,b
   945  000AEC  D7FA               	bra	u1397
   946  000AEE  F000 F000          	nop2	
   947  000AF2                     l2581:
   948                           
   949                           ;main.c: 103: };main.c: 104: lcd_gotoXY(posX,4);
   950  000AF2  0E04               	movlw	4
   951  000AF4  0100               	movlb	0	; force () banked
   952  000AF6  6F63               	movwf	lcd_gotoXY@y& (0+255),b
   953  000AF8  0100               	movlb	0	; force () banked
   954  000AFA  51E8               	movf	main@posX& (0+255),w,b
   955  000AFC  ECD1  F00A         	call	_lcd_gotoXY
   956  000B00                     
   957                           ;main.c: 105: m_tempsDAfficher = 0;
   958  000B00  0E00               	movlw	0
   959  000B02  0100               	movlb	0	; force () banked
   960  000B04  6FF0               	movwf	_m_tempsDAfficher& (0+255),b
   961  000B06                     l2585:
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 106: };main.c: 107: deplace(&posX);
   965  000B06  0EE8               	movlw	low main@posX
   966  000B08  0100               	movlb	0	; force () banked
   967  000B0A  6F65               	movwf	deplace@x& (0+255),b
   968  000B0C  0E00               	movlw	high main@posX
   969  000B0E  6F66               	movwf	(deplace@x+1)& (0+255),b
   970  000B10  EC25  F008         	call	_deplace	;wreg free
   971  000B14                     
   972                           ;main.c: 108: feu(posX, &pts);
   973  000B14  0EE6               	movlw	low main@pts
   974  000B16  0100               	movlb	0	; force () banked
   975  000B18  6F66               	movwf	feu@pts& (0+255),b
   976  000B1A  0E00               	movlw	high main@pts
   977  000B1C  6F67               	movwf	(feu@pts+1)& (0+255),b
   978  000B1E  0100               	movlb	0	; force () banked
   979  000B20  51E8               	movf	main@posX& (0+255),w,b
   980  000B22  EC2A  F003         	call	_feu
   981  000B26                     
   982                           ;main.c: 109: if((pts/ 10 % 10) != dizaine)
   983  000B26  0E00               	movlw	0
   984  000B28  0100               	movlb	0	; force () banked
   985  000B2A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   986  000B2C  0E0A               	movlw	10
   987  000B2E  6F62               	movwf	___awdiv@divisor& (0+255),b
   988  000B30  C0E6  F060         	movff	main@pts,___awdiv@dividend
   989  000B34  C0E7  F061         	movff	main@pts+1,___awdiv@dividend+1
   990  000B38  ECA5  F008         	call	___awdiv	;wreg free
   991  000B3C  C060  F06E         	movff	?___awdiv,___awmod@dividend
   992  000B40  C061  F06F         	movff	?___awdiv+1,___awmod@dividend+1
   993  000B44  0E00               	movlw	0
   994  000B46  0100               	movlb	0	; force () banked
   995  000B48  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
   996  000B4A  0E0A               	movlw	10
   997  000B4C  6F70               	movwf	___awmod@divisor& (0+255),b
   998  000B4E  EC62  F009         	call	___awmod	;wreg free
   999  000B52  0100               	movlb	0	; force () banked
  1000  000B54  51E4               	movf	main@dizaine& (0+255),w,b
  1001  000B56  0100               	movlb	0	; force () banked
  1002  000B58  196E               	xorwf	?___awmod& (0+255),w,b
  1003  000B5A  E10B               	bnz	u1370
  1004  000B5C  0100               	movlb	0	; force () banked
  1005  000B5E  51E5               	movf	(main@dizaine+1)& (0+255),w,b
  1006  000B60  0100               	movlb	0	; force () banked
  1007  000B62  196F               	xorwf	(?___awmod+1)& (0+255),w,b
  1008  000B64  B4D8               	btfsc	status,2,c
  1009  000B66  EFB7  F005         	goto	u1371
  1010  000B6A  EFB9  F005         	goto	u1370
  1011  000B6E                     u1371:
  1012  000B6E  EFED  F005         	goto	l2603
  1013  000B72                     u1370:
  1014  000B72                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 110: {;main.c: 111: m_niveau++;
  1017  000B72  0100               	movlb	0	; force () banked
  1018  000B74  4BEE               	infsnz	_m_niveau& (0+255),f,b
  1019  000B76  2BEF               	incf	(_m_niveau+1)& (0+255),f,b
  1020                           
  1021                           ;main.c: 112: dizaine++;
  1022  000B78  0100               	movlb	0	; force () banked
  1023  000B7A  4BE4               	infsnz	main@dizaine& (0+255),f,b
  1024  000B7C  2BE5               	incf	(main@dizaine+1)& (0+255),f,b
  1025  000B7E                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 113: lcd_effaceAffichage();
  1028  000B7E  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
  1029  000B82                     
  1030                           ;main.c: 114: sprintf(bufferNiveau, "Niveau #%d", m_niveau);
  1031  000B82  0EB2               	movlw	low main@bufferNiveau
  1032  000B84  0100               	movlb	0	; force () banked
  1033  000B86  6F6C               	movwf	sprintf@sp& (0+255),b
  1034  000B88  0E00               	movlw	high main@bufferNiveau
  1035  000B8A  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  1036  000B8C  0E47               	movlw	low STR_1
  1037  000B8E  0100               	movlb	0	; force () banked
  1038  000B90  6F6E               	movwf	sprintf@f& (0+255),b
  1039  000B92  0E06               	movlw	high STR_1
  1040  000B94  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  1041  000B96  C0EE  F070         	movff	_m_niveau,?_sprintf+4
  1042  000B9A  C0EF  F071         	movff	_m_niveau+1,?_sprintf+5
  1043  000B9E  ECFA  F005         	call	_sprintf	;wreg free
  1044  000BA2                     
  1045                           ;main.c: 115: lcd_putMessage(bufferNiveau);
  1046  000BA2  0EB2               	movlw	low main@bufferNiveau
  1047  000BA4  0100               	movlb	0	; force () banked
  1048  000BA6  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  1049  000BA8  0E00               	movlw	high main@bufferNiveau
  1050  000BAA  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  1051  000BAC  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  1052  000BAE  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  1053  000BB0  A4D8               	btfss	status,2,c
  1054  000BB2  0E20               	movlw	32
  1055  000BB4  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  1056  000BB6  EC08  F009         	call	_lcd_putMessage	;wreg free
  1057  000BBA                     
  1058                           ;main.c: 116: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1059  000BBA  0E02               	movlw	2
  1060  000BBC  0100               	movlb	0	; force () banked
  1061  000BBE  6FB1               	movwf	(??_main+1)& (0+255),b
  1062  000BC0  0E45               	movlw	69
  1063  000BC2  6FB0               	movwf	??_main& (0+255),b
  1064  000BC4  0EA9               	movlw	169
  1065  000BC6                     u1407:
  1066  000BC6  2EE8               	decfsz	wreg,f,c
  1067  000BC8  D7FE               	bra	u1407
  1068  000BCA  2FB0               	decfsz	??_main& (0+255),f,b
  1069  000BCC  D7FC               	bra	u1407
  1070  000BCE  2FB1               	decfsz	(??_main+1)& (0+255),f,b
  1071  000BD0  D7FA               	bra	u1407
  1072  000BD2  F000 F000          	nop2	
  1073  000BD6                     
  1074                           ;main.c: 117: videAliens();
  1075  000BD6  ECA4  F007         	call	_videAliens	;wreg free
  1076  000BDA                     l2603:
  1077                           
  1078                           ;main.c: 118: };main.c: 119: _delay((unsigned long)((100)*(1000000/4000.0)));
  1079  000BDA  0E21               	movlw	33
  1080  000BDC  0100               	movlb	0	; force () banked
  1081  000BDE  6FB0               	movwf	??_main& (0+255),b
  1082  000BE0  0E76               	movlw	118
  1083  000BE2                     u1417:
  1084  000BE2  2EE8               	decfsz	wreg,f,c
  1085  000BE4  D7FE               	bra	u1417
  1086  000BE6  2FB0               	decfsz	??_main& (0+255),f,b
  1087  000BE8  D7FC               	bra	u1417
  1088  000BEA  F000               	nop	
  1089  000BEC  EF2C  F005         	goto	l2557
  1090  000BF0  EF16  F000         	goto	start
  1091  000BF4                     __end_of_main:
  1092                           	opt callstack 0
  1093                           
  1094 ;; *************** function _videAliens *****************
  1095 ;; Defined at:
  1096 ;;		line 282 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  j               2   10[BANK0 ] int 
  1101 ;;  i               2    8[BANK0 ] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         0       4       0       0       0       0       0
  1113 ;;      Temps:          0       2       0       0       0       0       0
  1114 ;;      Totals:         0       6       0       0       0       0       0
  1115 ;;Total ram usage:        6 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    5
  1118 ;; This function calls:
  1119 ;;		___wmul
  1120 ;;		_lcd_effaceAffichage
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text1
  1127  000F48                     __ptext1:
  1128                           	opt callstack 0
  1129  000F48                     _videAliens:
  1130                           	opt callstack 25
  1131  000F48                     
  1132                           ;main.c: 284: int i=0;
  1133  000F48  0E00               	movlw	0
  1134  000F4A  0100               	movlb	0	; force () banked
  1135  000F4C  6F69               	movwf	(videAliens@i+1)& (0+255),b
  1136  000F4E  0E00               	movlw	0
  1137  000F50  6F68               	movwf	videAliens@i& (0+255),b
  1138                           
  1139                           ;main.c: 285: int j=0;
  1140  000F52  0E00               	movlw	0
  1141  000F54  0100               	movlb	0	; force () banked
  1142  000F56  6F6B               	movwf	(videAliens@j+1)& (0+255),b
  1143  000F58  0E00               	movlw	0
  1144  000F5A  6F6A               	movwf	videAliens@j& (0+255),b
  1145  000F5C                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 286: lcd_effaceAffichage();
  1148  000F5C  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
  1149  000F60                     
  1150                           ;main.c: 287: for(i=0;i<4;i++)
  1151  000F60  0E00               	movlw	0
  1152  000F62  0100               	movlb	0	; force () banked
  1153  000F64  6F69               	movwf	(videAliens@i+1)& (0+255),b
  1154  000F66  0E00               	movlw	0
  1155  000F68  6F68               	movwf	videAliens@i& (0+255),b
  1156  000F6A                     
  1157                           ; BSR set to: 0
  1158  000F6A  0100               	movlb	0	; force () banked
  1159  000F6C  BF69               	btfsc	(videAliens@i+1)& (0+255),7,b
  1160  000F6E  EFC2  F007         	goto	u1131
  1161  000F72  5169               	movf	(videAliens@i+1)& (0+255),w,b
  1162  000F74  E109               	bnz	u1130
  1163  000F76  0E04               	movlw	4
  1164  000F78  5D68               	subwf	videAliens@i& (0+255),w,b
  1165  000F7A  A0D8               	btfss	status,0,c
  1166  000F7C  EFC2  F007         	goto	u1131
  1167  000F80  EFC4  F007         	goto	u1130
  1168  000F84                     u1131:
  1169  000F84  EFC6  F007         	goto	l2387
  1170  000F88                     u1130:
  1171  000F88  EF24  F008         	goto	l145
  1172  000F8C                     l2387:
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 288: {;main.c: 289: for(j=0;j<20;j++)
  1176  000F8C  0E00               	movlw	0
  1177  000F8E  0100               	movlb	0	; force () banked
  1178  000F90  6F6B               	movwf	(videAliens@j+1)& (0+255),b
  1179  000F92  0E00               	movlw	0
  1180  000F94  6F6A               	movwf	videAliens@j& (0+255),b
  1181  000F96                     
  1182                           ; BSR set to: 0
  1183  000F96  0100               	movlb	0	; force () banked
  1184  000F98  BF6B               	btfsc	(videAliens@j+1)& (0+255),7,b
  1185  000F9A  EFD8  F007         	goto	u1141
  1186  000F9E  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1187  000FA0  E109               	bnz	u1140
  1188  000FA2  0E14               	movlw	20
  1189  000FA4  5D6A               	subwf	videAliens@j& (0+255),w,b
  1190  000FA6  A0D8               	btfss	status,0,c
  1191  000FA8  EFD8  F007         	goto	u1141
  1192  000FAC  EFDA  F007         	goto	u1140
  1193  000FB0                     u1141:
  1194  000FB0  EFDC  F007         	goto	l2393
  1195  000FB4                     u1140:
  1196  000FB4  EF12  F008         	goto	l2399
  1197  000FB8                     l2393:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 290: {;main.c: 291: m_aliens[i][j]=' ';
  1201  000FB8  C068  F060         	movff	videAliens@i,___wmul@multiplier
  1202  000FBC  C069  F061         	movff	videAliens@i+1,___wmul@multiplier+1
  1203  000FC0  0E00               	movlw	0
  1204  000FC2  0100               	movlb	0	; force () banked
  1205  000FC4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1206  000FC6  0E15               	movlw	21
  1207  000FC8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1208  000FCA  EC6D  F00D         	call	___wmul	;wreg free
  1209  000FCE  0E40               	movlw	low _m_aliens
  1210  000FD0  0100               	movlb	0	; force () banked
  1211  000FD2  6F66               	movwf	??_videAliens& (0+255),b
  1212  000FD4  0E01               	movlw	high _m_aliens
  1213  000FD6  6F67               	movwf	(??_videAliens+1)& (0+255),b
  1214  000FD8  0100               	movlb	0	; force () banked
  1215  000FDA  5160               	movf	?___wmul& (0+255),w,b
  1216  000FDC  0100               	movlb	0	; force () banked
  1217  000FDE  2766               	addwf	??_videAliens& (0+255),f,b
  1218  000FE0  0100               	movlb	0	; force () banked
  1219  000FE2  5161               	movf	(?___wmul+1)& (0+255),w,b
  1220  000FE4  0100               	movlb	0	; force () banked
  1221  000FE6  2367               	addwfc	(??_videAliens+1)& (0+255),f,b
  1222  000FE8  0100               	movlb	0	; force () banked
  1223  000FEA  516A               	movf	videAliens@j& (0+255),w,b
  1224  000FEC  0100               	movlb	0	; force () banked
  1225  000FEE  2566               	addwf	??_videAliens& (0+255),w,b
  1226  000FF0  6ED9               	movwf	fsr2l,c
  1227  000FF2  0100               	movlb	0	; force () banked
  1228  000FF4  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1229  000FF6  0100               	movlb	0	; force () banked
  1230  000FF8  2167               	addwfc	(??_videAliens+1)& (0+255),w,b
  1231  000FFA  6EDA               	movwf	fsr2h,c
  1232  000FFC  0E20               	movlw	32
  1233  000FFE  6EDF               	movwf	indf2,c
  1234  001000                     
  1235                           ; BSR set to: 0
  1236  001000  0100               	movlb	0	; force () banked
  1237  001002  4B6A               	infsnz	videAliens@j& (0+255),f,b
  1238  001004  2B6B               	incf	(videAliens@j+1)& (0+255),f,b
  1239  001006                     
  1240                           ; BSR set to: 0
  1241  001006  0100               	movlb	0	; force () banked
  1242  001008  BF6B               	btfsc	(videAliens@j+1)& (0+255),7,b
  1243  00100A  EF10  F008         	goto	u1151
  1244  00100E  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1245  001010  E109               	bnz	u1150
  1246  001012  0E14               	movlw	20
  1247  001014  5D6A               	subwf	videAliens@j& (0+255),w,b
  1248  001016  A0D8               	btfss	status,0,c
  1249  001018  EF10  F008         	goto	u1151
  1250  00101C  EF12  F008         	goto	u1150
  1251  001020                     u1151:
  1252  001020  EFDC  F007         	goto	l2393
  1253  001024                     u1150:
  1254  001024                     l2399:
  1255                           
  1256                           ; BSR set to: 0
  1257  001024  0100               	movlb	0	; force () banked
  1258  001026  4B68               	infsnz	videAliens@i& (0+255),f,b
  1259  001028  2B69               	incf	(videAliens@i+1)& (0+255),f,b
  1260  00102A                     
  1261                           ; BSR set to: 0
  1262  00102A  0100               	movlb	0	; force () banked
  1263  00102C  BF69               	btfsc	(videAliens@i+1)& (0+255),7,b
  1264  00102E  EF22  F008         	goto	u1161
  1265  001032  5169               	movf	(videAliens@i+1)& (0+255),w,b
  1266  001034  E109               	bnz	u1160
  1267  001036  0E04               	movlw	4
  1268  001038  5D68               	subwf	videAliens@i& (0+255),w,b
  1269  00103A  A0D8               	btfss	status,0,c
  1270  00103C  EF22  F008         	goto	u1161
  1271  001040  EF24  F008         	goto	u1160
  1272  001044                     u1161:
  1273  001044  EFC6  F007         	goto	l2387
  1274  001048                     u1160:
  1275  001048                     l145:
  1276                           
  1277                           ; BSR set to: 0
  1278  001048  0012               	return		;funcret
  1279  00104A                     __end_of_videAliens:
  1280                           	opt callstack 0
  1281                           
  1282 ;; *************** function _perdu *****************
  1283 ;; Defined at:
  1284 ;;		line 254 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  i               2    1[BANK0 ] int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1298 ;;      Params:         0       0       0       0       0       0       0
  1299 ;;      Locals:         0       2       0       0       0       0       0
  1300 ;;      Temps:          0       1       0       0       0       0       0
  1301 ;;      Totals:         0       3       0       0       0       0       0
  1302 ;;Total ram usage:        3 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text2
  1313  0014AC                     __ptext2:
  1314                           	opt callstack 0
  1315  0014AC                     _perdu:
  1316                           	opt callstack 29
  1317  0014AC                     
  1318                           ;main.c: 256: int i=0;
  1319  0014AC  0E00               	movlw	0
  1320  0014AE  0100               	movlb	0	; force () banked
  1321  0014B0  6F62               	movwf	(perdu@i+1)& (0+255),b
  1322  0014B2  0E00               	movlw	0
  1323  0014B4  6F61               	movwf	perdu@i& (0+255),b
  1324                           
  1325                           ;main.c: 257: for(i=0;i<20;i++)
  1326  0014B6  0E00               	movlw	0
  1327  0014B8  6F62               	movwf	(perdu@i+1)& (0+255),b
  1328  0014BA  0E00               	movlw	0
  1329  0014BC  6F61               	movwf	perdu@i& (0+255),b
  1330  0014BE                     
  1331                           ; BSR set to: 0
  1332  0014BE  0100               	movlb	0	; force () banked
  1333  0014C0  BF62               	btfsc	(perdu@i+1)& (0+255),7,b
  1334  0014C2  EF6C  F00A         	goto	u1101
  1335  0014C6  5162               	movf	(perdu@i+1)& (0+255),w,b
  1336  0014C8  E109               	bnz	u1100
  1337  0014CA  0E14               	movlw	20
  1338  0014CC  5D61               	subwf	perdu@i& (0+255),w,b
  1339  0014CE  A0D8               	btfss	status,0,c
  1340  0014D0  EF6C  F00A         	goto	u1101
  1341  0014D4  EF6E  F00A         	goto	u1100
  1342  0014D8                     u1101:
  1343  0014D8  EF70  F00A         	goto	l2355
  1344  0014DC                     u1100:
  1345  0014DC  EF94  F00A         	goto	l2365
  1346  0014E0                     l2355:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 258: {;main.c: 259: if(m_aliens[3][i] == 1)
  1350  0014E0  0E7F               	movlw	low (_m_aliens+63)
  1351  0014E2  0100               	movlb	0	; force () banked
  1352  0014E4  2561               	addwf	perdu@i& (0+255),w,b
  1353  0014E6  6ED9               	movwf	fsr2l,c
  1354  0014E8  0E01               	movlw	high (_m_aliens+63)
  1355  0014EA  2162               	addwfc	(perdu@i+1)& (0+255),w,b
  1356  0014EC  6EDA               	movwf	fsr2h,c
  1357  0014EE  04DE               	decf	postinc2,w,c
  1358  0014F0  A4D8               	btfss	status,2,c
  1359  0014F2  EF7D  F00A         	goto	u1111
  1360  0014F6  EF7F  F00A         	goto	u1110
  1361  0014FA                     u1111:
  1362  0014FA  EF82  F00A         	goto	l2361
  1363  0014FE                     u1110:
  1364  0014FE                     
  1365                           ; BSR set to: 0
  1366                           ;main.c: 260: {;main.c: 261: return 0;
  1367  0014FE  0E00               	movlw	0
  1368  001500  EF95  F00A         	goto	l135
  1369  001504                     l2361:
  1370                           
  1371                           ; BSR set to: 0
  1372  001504  0100               	movlb	0	; force () banked
  1373  001506  4B61               	infsnz	perdu@i& (0+255),f,b
  1374  001508  2B62               	incf	(perdu@i+1)& (0+255),f,b
  1375  00150A                     
  1376                           ; BSR set to: 0
  1377  00150A  0100               	movlb	0	; force () banked
  1378  00150C  BF62               	btfsc	(perdu@i+1)& (0+255),7,b
  1379  00150E  EF92  F00A         	goto	u1121
  1380  001512  5162               	movf	(perdu@i+1)& (0+255),w,b
  1381  001514  E109               	bnz	u1120
  1382  001516  0E14               	movlw	20
  1383  001518  5D61               	subwf	perdu@i& (0+255),w,b
  1384  00151A  A0D8               	btfss	status,0,c
  1385  00151C  EF92  F00A         	goto	u1121
  1386  001520  EF94  F00A         	goto	u1120
  1387  001524                     u1121:
  1388  001524  EF70  F00A         	goto	l2355
  1389  001528                     u1120:
  1390  001528                     l2365:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 262: };main.c: 263: };main.c: 265: return 1;
  1394  001528  0E01               	movlw	1
  1395  00152A                     l135:
  1396                           
  1397                           ; BSR set to: 0
  1398  00152A  0012               	return		;funcret
  1399  00152C                     __end_of_perdu:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _nouveauxAliens *****************
  1403 ;; Defined at:
  1404 ;;		line 132 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  j               2   23[BANK0 ] int 
  1409 ;;  i               2   21[BANK0 ] int 
  1410 ;;  sorteAliens     1   26[BANK0 ] unsigned char 
  1411 ;;  endroitAlien    1   25[BANK0 ] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1421 ;;      Params:         0       0       0       0       0       0       0
  1422 ;;      Locals:         0       6       0       0       0       0       0
  1423 ;;      Temps:          0       1       0       0       0       0       0
  1424 ;;      Totals:         0       7       0       0       0       0       0
  1425 ;;Total ram usage:        7 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    3
  1428 ;; This function calls:
  1429 ;;		___awmod
  1430 ;;		_rand
  1431 ;;		_strcpy
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text3
  1438  000DF8                     __ptext3:
  1439                           	opt callstack 0
  1440  000DF8                     _nouveauxAliens:
  1441                           	opt callstack 27
  1442  000DF8                     
  1443                           ;main.c: 134: char sorteAliens =1;
  1444  000DF8  0E01               	movlw	1
  1445  000DFA  0100               	movlb	0	; force () banked
  1446  000DFC  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1447                           
  1448                           ;main.c: 135: int i=0;
  1449  000DFE  0E00               	movlw	0
  1450  000E00  0100               	movlb	0	; force () banked
  1451  000E02  6F76               	movwf	(nouveauxAliens@i+1)& (0+255),b
  1452  000E04  0E00               	movlw	0
  1453  000E06  6F75               	movwf	nouveauxAliens@i& (0+255),b
  1454                           
  1455                           ;main.c: 136: int j=0;
  1456  000E08  0E00               	movlw	0
  1457  000E0A  0100               	movlb	0	; force () banked
  1458  000E0C  6F78               	movwf	(nouveauxAliens@j+1)& (0+255),b
  1459  000E0E  0E00               	movlw	0
  1460  000E10  6F77               	movwf	nouveauxAliens@j& (0+255),b
  1461                           
  1462                           ;main.c: 137: char endroitAliens=0;
  1463  000E12  0E00               	movlw	0
  1464  000E14  0100               	movlb	0	; force () banked
  1465  000E16  6F79               	movwf	nouveauxAliens@endroitAliens& (0+255),b
  1466  000E18                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 139: strcpy(m_aliens[3],m_aliens[2]);
  1469  000E18  0E7F               	movlw	low (_m_aliens+63)
  1470  000E1A  0100               	movlb	0	; force () banked
  1471  000E1C  6F60               	movwf	strcpy@to& (0+255),b
  1472  000E1E  0E01               	movlw	high (_m_aliens+63)
  1473  000E20  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1474  000E22  0E6A               	movlw	low (_m_aliens+42)
  1475  000E24  0100               	movlb	0	; force () banked
  1476  000E26  6F62               	movwf	strcpy@from& (0+255),b
  1477  000E28  0E01               	movlw	high (_m_aliens+42)
  1478  000E2A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1479  000E2C  ECE6  F00C         	call	_strcpy	;wreg free
  1480  000E30                     
  1481                           ;main.c: 140: strcpy(m_aliens[2],m_aliens[1]);
  1482  000E30  0E6A               	movlw	low (_m_aliens+42)
  1483  000E32  0100               	movlb	0	; force () banked
  1484  000E34  6F60               	movwf	strcpy@to& (0+255),b
  1485  000E36  0E01               	movlw	high (_m_aliens+42)
  1486  000E38  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1487  000E3A  0E55               	movlw	low (_m_aliens+21)
  1488  000E3C  0100               	movlb	0	; force () banked
  1489  000E3E  6F62               	movwf	strcpy@from& (0+255),b
  1490  000E40  0E01               	movlw	high (_m_aliens+21)
  1491  000E42  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1492  000E44  ECE6  F00C         	call	_strcpy	;wreg free
  1493  000E48                     
  1494                           ;main.c: 141: strcpy(m_aliens[1],m_aliens[0]);
  1495  000E48  0E55               	movlw	low (_m_aliens+21)
  1496  000E4A  0100               	movlb	0	; force () banked
  1497  000E4C  6F60               	movwf	strcpy@to& (0+255),b
  1498  000E4E  0E01               	movlw	high (_m_aliens+21)
  1499  000E50  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1500  000E52  0E40               	movlw	low _m_aliens
  1501  000E54  0100               	movlb	0	; force () banked
  1502  000E56  6F62               	movwf	strcpy@from& (0+255),b
  1503  000E58  0E01               	movlw	high _m_aliens
  1504  000E5A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1505  000E5C  ECE6  F00C         	call	_strcpy	;wreg free
  1506                           
  1507                           ;main.c: 143: while(j<20)
  1508  000E60  EF3E  F007         	goto	l2321
  1509  000E64                     l2317:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 144: {;main.c: 145: m_aliens[0][j]= ' ';
  1513  000E64  0E40               	movlw	low _m_aliens
  1514  000E66  0100               	movlb	0	; force () banked
  1515  000E68  2577               	addwf	nouveauxAliens@j& (0+255),w,b
  1516  000E6A  6ED9               	movwf	fsr2l,c
  1517  000E6C  0E01               	movlw	high _m_aliens
  1518  000E6E  2178               	addwfc	(nouveauxAliens@j+1)& (0+255),w,b
  1519  000E70  6EDA               	movwf	fsr2h,c
  1520  000E72  0E20               	movlw	32
  1521  000E74  6EDF               	movwf	indf2,c
  1522  000E76                     
  1523                           ; BSR set to: 0
  1524                           ;main.c: 146: j++;
  1525  000E76  0100               	movlb	0	; force () banked
  1526  000E78  4B77               	infsnz	nouveauxAliens@j& (0+255),f,b
  1527  000E7A  2B78               	incf	(nouveauxAliens@j+1)& (0+255),f,b
  1528  000E7C                     l2321:
  1529  000E7C  0100               	movlb	0	; force () banked
  1530  000E7E  BF78               	btfsc	(nouveauxAliens@j+1)& (0+255),7,b
  1531  000E80  EF4B  F007         	goto	u1061
  1532  000E84  5178               	movf	(nouveauxAliens@j+1)& (0+255),w,b
  1533  000E86  E109               	bnz	u1060
  1534  000E88  0E14               	movlw	20
  1535  000E8A  5D77               	subwf	nouveauxAliens@j& (0+255),w,b
  1536  000E8C  A0D8               	btfss	status,0,c
  1537  000E8E  EF4B  F007         	goto	u1061
  1538  000E92  EF4D  F007         	goto	u1060
  1539  000E96                     u1061:
  1540  000E96  EF32  F007         	goto	l2317
  1541  000E9A                     u1060:
  1542  000E9A  EF8F  F007         	goto	l2337
  1543  000E9E                     l2323:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;main.c: 151: {;main.c: 152: endroitAliens = rand()%20;
  1547  000E9E  EC40  F00C         	call	_rand	;wreg free
  1548  000EA2  C06C  F06E         	movff	?_rand,___awmod@dividend
  1549  000EA6  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  1550  000EAA  0E00               	movlw	0
  1551  000EAC  0100               	movlb	0	; force () banked
  1552  000EAE  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1553  000EB0  0E14               	movlw	20
  1554  000EB2  6F70               	movwf	___awmod@divisor& (0+255),b
  1555  000EB4  EC62  F009         	call	___awmod	;wreg free
  1556  000EB8  0100               	movlb	0	; force () banked
  1557  000EBA  516E               	movf	?___awmod& (0+255),w,b
  1558  000EBC  0100               	movlb	0	; force () banked
  1559  000EBE  6F79               	movwf	nouveauxAliens@endroitAliens& (0+255),b
  1560  000EC0                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 153: };main.c: 154: while(m_aliens[0][endroitAliens] != ' ');
  1563  000EC0  0E40               	movlw	low _m_aliens
  1564  000EC2  0100               	movlb	0	; force () banked
  1565  000EC4  2579               	addwf	nouveauxAliens@endroitAliens& (0+255),w,b
  1566  000EC6  6ED9               	movwf	fsr2l,c
  1567  000EC8  6ADA               	clrf	fsr2h,c
  1568  000ECA  0E01               	movlw	high _m_aliens
  1569  000ECC  22DA               	addwfc	fsr2h,f,c
  1570  000ECE  0E20               	movlw	32
  1571  000ED0  18DE               	xorwf	postinc2,w,c
  1572  000ED2  A4D8               	btfss	status,2,c
  1573  000ED4  EF6E  F007         	goto	u1071
  1574  000ED8  EF70  F007         	goto	u1070
  1575  000EDC                     u1071:
  1576  000EDC  EF4F  F007         	goto	l2323
  1577  000EE0                     u1070:
  1578  000EE0                     
  1579                           ; BSR set to: 0
  1580                           ;main.c: 155: sorteAliens = rand()%4;
  1581  000EE0  EC40  F00C         	call	_rand	;wreg free
  1582  000EE4  0100               	movlb	0	; force () banked
  1583  000EE6  516C               	movf	?_rand& (0+255),w,b
  1584  000EE8  0B03               	andlw	3
  1585  000EEA  0100               	movlb	0	; force () banked
  1586  000EEC  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1587  000EEE                     
  1588                           ; BSR set to: 0
  1589                           ;main.c: 156: if(sorteAliens == 0)
  1590  000EEE  0100               	movlb	0	; force () banked
  1591  000EF0  517A               	movf	nouveauxAliens@sorteAliens& (0+255),w,b
  1592  000EF2  A4D8               	btfss	status,2,c
  1593  000EF4  EF7E  F007         	goto	u1081
  1594  000EF8  EF80  F007         	goto	u1080
  1595  000EFC                     u1081:
  1596  000EFC  EF83  F007         	goto	l2333
  1597  000F00                     u1080:
  1598  000F00                     
  1599                           ; BSR set to: 0
  1600                           ;main.c: 157: {;main.c: 158: sorteAliens = sorteAliens+1;
  1601  000F00  0100               	movlb	0	; force () banked
  1602  000F02  297A               	incf	nouveauxAliens@sorteAliens& (0+255),w,b
  1603  000F04  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1604  000F06                     l2333:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 159: };main.c: 160: m_aliens[0][endroitAliens]= sorteAliens;
  1608  000F06  0E40               	movlw	low _m_aliens
  1609  000F08  0100               	movlb	0	; force () banked
  1610  000F0A  2579               	addwf	nouveauxAliens@endroitAliens& (0+255),w,b
  1611  000F0C  6ED9               	movwf	fsr2l,c
  1612  000F0E  6ADA               	clrf	fsr2h,c
  1613  000F10  0E01               	movlw	high _m_aliens
  1614  000F12  22DA               	addwfc	fsr2h,f,c
  1615  000F14  C07A  FFDF         	movff	nouveauxAliens@sorteAliens,indf2
  1616  000F18                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 163: i++;
  1619  000F18  0100               	movlb	0	; force () banked
  1620  000F1A  4B75               	infsnz	nouveauxAliens@i& (0+255),f,b
  1621  000F1C  2B76               	incf	(nouveauxAliens@i+1)& (0+255),f,b
  1622  000F1E                     l2337:
  1623                           
  1624                           ; BSR set to: 0
  1625  000F1E  0100               	movlb	0	; force () banked
  1626  000F20  51EE               	movf	_m_niveau& (0+255),w,b
  1627  000F22  0100               	movlb	0	; force () banked
  1628  000F24  5D75               	subwf	nouveauxAliens@i& (0+255),w,b
  1629  000F26  5176               	movf	(nouveauxAliens@i+1)& (0+255),w,b
  1630  000F28  0A80               	xorlw	128
  1631  000F2A  0100               	movlb	0	; force () banked
  1632  000F2C  6F74               	movwf	??_nouveauxAliens& (0+255),b
  1633  000F2E  0100               	movlb	0	; force () banked
  1634  000F30  51EF               	movf	(_m_niveau+1)& (0+255),w,b
  1635  000F32  0A80               	xorlw	128
  1636  000F34  0100               	movlb	0	; force () banked
  1637  000F36  5974               	subwfb	??_nouveauxAliens& (0+255),w,b
  1638  000F38  A0D8               	btfss	status,0,c
  1639  000F3A  EFA1  F007         	goto	u1091
  1640  000F3E  EFA3  F007         	goto	u1090
  1641  000F42                     u1091:
  1642  000F42  EF4F  F007         	goto	l2323
  1643  000F46                     u1090:
  1644  000F46                     
  1645                           ; BSR set to: 0
  1646  000F46  0012               	return		;funcret
  1647  000F48                     __end_of_nouveauxAliens:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function _strcpy *****************
  1651 ;; Defined at:
  1652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  to              2    0[BANK0 ] PTR unsigned char 
  1655 ;;		 -> m_aliens(84), 
  1656 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  1657 ;;		 -> m_aliens(84), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  1660 ;;		 -> m_aliens(84), 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    0[BANK0 ] PTR unsigned char 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       4       0       0       0       0       0
  1671 ;;      Locals:         0       2       0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0
  1673 ;;      Totals:         0       6       0       0       0       0       0
  1674 ;;Total ram usage:        6 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_nouveauxAliens
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text4
  1685  0019CC                     __ptext4:
  1686                           	opt callstack 0
  1687  0019CC                     _strcpy:
  1688                           	opt callstack 28
  1689  0019CC  C060  F064         	movff	strcpy@to,strcpy@cp
  1690  0019D0  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  1691  0019D4  EFF1  F00C         	goto	l2147
  1692  0019D8                     l2145:
  1693  0019D8  0100               	movlb	0	; () banked
  1694  0019DA  4B64               	infsnz	strcpy@cp& (0+255),f,b
  1695  0019DC  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  1696  0019DE  4B62               	infsnz	strcpy@from& (0+255),f,b
  1697  0019E0  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  1698  0019E2                     l2147:
  1699  0019E2  C062  FFD9         	movff	strcpy@from,fsr2l
  1700  0019E6  C063  FFDA         	movff	strcpy@from+1,fsr2h
  1701  0019EA  C064  FFE1         	movff	strcpy@cp,fsr1l
  1702  0019EE  C065  FFE2         	movff	strcpy@cp+1,fsr1h
  1703  0019F2  CFDF FFE7          	movff	indf2,indf1
  1704  0019F6  50E7               	movf	indf1,w,c
  1705  0019F8  A4D8               	btfss	status,2,c
  1706  0019FA  EF01  F00D         	goto	u951
  1707  0019FE  EF03  F00D         	goto	u950
  1708  001A02                     u951:
  1709  001A02  EFEC  F00C         	goto	l2145
  1710  001A06                     u950:
  1711  001A06  C060  F060         	movff	strcpy@to,?_strcpy
  1712  001A0A  C061  F061         	movff	strcpy@to+1,?_strcpy+1
  1713  001A0E  0012               	return		;funcret
  1714  001A10                     __end_of_strcpy:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _rand *****************
  1718 ;; Defined at:
  1719 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   12[BANK0 ] int 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       2       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         0       2       0       0       0       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    2
  1740 ;; This function calls:
  1741 ;;		___lmul
  1742 ;; This function is called by:
  1743 ;;		_nouveauxAliens
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text5
  1748  001880                     __ptext5:
  1749                           	opt callstack 0
  1750  001880                     _rand:
  1751                           	opt callstack 27
  1752  001880  C0EA  F060         	movff	_randx,___lmul@multiplier
  1753  001884  C0EB  F061         	movff	_randx+1,___lmul@multiplier+1
  1754  001888  C0EC  F062         	movff	_randx+2,___lmul@multiplier+2
  1755  00188C  C0ED  F063         	movff	_randx+3,___lmul@multiplier+3
  1756  001890  0E6D               	movlw	109
  1757  001892  0100               	movlb	0	; () banked
  1758  001894  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1759  001896  0E4E               	movlw	78
  1760  001898  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1761  00189A  0EC6               	movlw	198
  1762  00189C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1763  00189E  0E41               	movlw	65
  1764  0018A0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1765  0018A2  EC0A  F00B         	call	___lmul	;wreg free
  1766  0018A6  C060  F0EA         	movff	?___lmul,_randx
  1767  0018AA  C061  F0EB         	movff	?___lmul+1,_randx+1
  1768  0018AE  C062  F0EC         	movff	?___lmul+2,_randx+2
  1769  0018B2  C063  F0ED         	movff	?___lmul+3,_randx+3
  1770  0018B6  0E39               	movlw	57
  1771  0018B8  0100               	movlb	0	; () banked
  1772  0018BA  27EA               	addwf	_randx& (0+255),f,b
  1773  0018BC  0E30               	movlw	48
  1774  0018BE  23EB               	addwfc	(_randx+1)& (0+255),f,b
  1775  0018C0  0E00               	movlw	0
  1776  0018C2  23EC               	addwfc	(_randx+2)& (0+255),f,b
  1777  0018C4  0E00               	movlw	0
  1778  0018C6  23ED               	addwfc	(_randx+3)& (0+255),f,b
  1779  0018C8                     
  1780                           ; BSR set to: 0
  1781  0018C8  0EFF               	movlw	255
  1782  0018CA  15EC               	andwf	(_randx+2)& (0+255),w,b
  1783  0018CC  6F6C               	movwf	?_rand& (0+255),b
  1784  0018CE  0E7F               	movlw	127
  1785  0018D0  15ED               	andwf	(_randx+3)& (0+255),w,b
  1786  0018D2  6F6D               	movwf	(?_rand+1)& (0+255),b
  1787  0018D4                     
  1788                           ; BSR set to: 0
  1789  0018D4  0012               	return		;funcret
  1790  0018D6                     __end_of_rand:
  1791                           	opt callstack 0
  1792                           
  1793 ;; *************** function ___lmul *****************
  1794 ;; Defined at:
  1795 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1798 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  product         4    8[BANK0 ] unsigned long 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  4    0[BANK0 ] unsigned long 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         0       8       0       0       0       0       0
  1811 ;;      Locals:         0       4       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0
  1813 ;;      Totals:         0      12       0       0       0       0       0
  1814 ;;Total ram usage:       12 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_rand
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text6
  1825  001614                     __ptext6:
  1826                           	opt callstack 0
  1827  001614                     ___lmul:
  1828                           	opt callstack 27
  1829  001614  0E00               	movlw	0
  1830  001616  0100               	movlb	0	; () banked
  1831  001618  6F68               	movwf	___lmul@product& (0+255),b
  1832  00161A  0E00               	movlw	0
  1833  00161C  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1834  00161E  0E00               	movlw	0
  1835  001620  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1836  001622  0E00               	movlw	0
  1837  001624  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1838  001626                     l2009:
  1839                           
  1840                           ; BSR set to: 0
  1841  001626  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1842  001628  EF18  F00B         	goto	u761
  1843  00162C  EF1A  F00B         	goto	u760
  1844  001630                     u761:
  1845  001630  EF22  F00B         	goto	l2013
  1846  001634                     u760:
  1847  001634                     
  1848                           ; BSR set to: 0
  1849  001634  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1850  001636  2768               	addwf	___lmul@product& (0+255),f,b
  1851  001638  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1852  00163A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1853  00163C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1854  00163E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1855  001640  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1856  001642  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1857  001644                     l2013:
  1858                           
  1859                           ; BSR set to: 0
  1860  001644  90D8               	bcf	status,0,c
  1861  001646  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1862  001648  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1863  00164A  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1864  00164C  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1865  00164E                     
  1866                           ; BSR set to: 0
  1867  00164E  90D8               	bcf	status,0,c
  1868  001650  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1869  001652  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1870  001654  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1871  001656  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1872  001658  5160               	movf	___lmul@multiplier& (0+255),w,b
  1873  00165A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1874  00165C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1875  00165E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1876  001660  A4D8               	btfss	status,2,c
  1877  001662  EF35  F00B         	goto	u771
  1878  001666  EF37  F00B         	goto	u770
  1879  00166A                     u771:
  1880  00166A  EF13  F00B         	goto	l2009
  1881  00166E                     u770:
  1882  00166E                     
  1883                           ; BSR set to: 0
  1884  00166E  C068  F060         	movff	___lmul@product,?___lmul
  1885  001672  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1886  001676  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1887  00167A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1888  00167E                     
  1889                           ; BSR set to: 0
  1890  00167E  0012               	return		;funcret
  1891  001680                     __end_of___lmul:
  1892                           	opt callstack 0
  1893                           
  1894 ;; *************** function ___awmod *****************
  1895 ;; Defined at:
  1896 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  dividend        2   14[BANK0 ] int 
  1899 ;;  divisor         2   16[BANK0 ] int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  sign            1   19[BANK0 ] unsigned char 
  1902 ;;  counter         1   18[BANK0 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2   14[BANK0 ] int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1912 ;;      Params:         0       4       0       0       0       0       0
  1913 ;;      Locals:         0       2       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0
  1915 ;;      Totals:         0       6       0       0       0       0       0
  1916 ;;Total ram usage:        6 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;;		_nouveauxAliens
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text7
  1928  0012C4                     __ptext7:
  1929                           	opt callstack 0
  1930  0012C4                     ___awmod:
  1931                           	opt callstack 28
  1932  0012C4  0E00               	movlw	0
  1933  0012C6  0100               	movlb	0	; () banked
  1934  0012C8  6F73               	movwf	___awmod@sign& (0+255),b
  1935  0012CA                     
  1936                           ; BSR set to: 0
  1937  0012CA  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1938  0012CC  EF6C  F009         	goto	u1000
  1939  0012D0  EF6A  F009         	goto	u1001
  1940  0012D4                     u1001:
  1941  0012D4  EF72  F009         	goto	l2237
  1942  0012D8                     u1000:
  1943  0012D8                     
  1944                           ; BSR set to: 0
  1945  0012D8  6D6E               	negf	___awmod@dividend& (0+255),b
  1946  0012DA  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  1947  0012DC  B0D8               	btfsc	status,0,c
  1948  0012DE  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  1949  0012E0                     
  1950                           ; BSR set to: 0
  1951  0012E0  0E01               	movlw	1
  1952  0012E2  6F73               	movwf	___awmod@sign& (0+255),b
  1953  0012E4                     l2237:
  1954                           
  1955                           ; BSR set to: 0
  1956  0012E4  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1957  0012E6  EF79  F009         	goto	u1010
  1958  0012EA  EF77  F009         	goto	u1011
  1959  0012EE                     u1011:
  1960  0012EE  EF7D  F009         	goto	l2241
  1961  0012F2                     u1010:
  1962  0012F2                     
  1963                           ; BSR set to: 0
  1964  0012F2  6D70               	negf	___awmod@divisor& (0+255),b
  1965  0012F4  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  1966  0012F6  B0D8               	btfsc	status,0,c
  1967  0012F8  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  1968  0012FA                     l2241:
  1969                           
  1970                           ; BSR set to: 0
  1971  0012FA  5170               	movf	___awmod@divisor& (0+255),w,b
  1972  0012FC  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1973  0012FE  B4D8               	btfsc	status,2,c
  1974  001300  EF84  F009         	goto	u1021
  1975  001304  EF86  F009         	goto	u1020
  1976  001308                     u1021:
  1977  001308  EFAA  F009         	goto	l2257
  1978  00130C                     u1020:
  1979  00130C                     
  1980                           ; BSR set to: 0
  1981  00130C  0E01               	movlw	1
  1982  00130E  6F72               	movwf	___awmod@counter& (0+255),b
  1983  001310  EF8E  F009         	goto	l2247
  1984  001314                     l2245:
  1985                           
  1986                           ; BSR set to: 0
  1987  001314  90D8               	bcf	status,0,c
  1988  001316  3770               	rlcf	___awmod@divisor& (0+255),f,b
  1989  001318  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1990  00131A  2B72               	incf	___awmod@counter& (0+255),f,b
  1991  00131C                     l2247:
  1992                           
  1993                           ; BSR set to: 0
  1994  00131C  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1995  00131E  EF93  F009         	goto	u1031
  1996  001322  EF95  F009         	goto	u1030
  1997  001326                     u1031:
  1998  001326  EF8A  F009         	goto	l2245
  1999  00132A                     u1030:
  2000  00132A                     l2249:
  2001                           
  2002                           ; BSR set to: 0
  2003  00132A  5170               	movf	___awmod@divisor& (0+255),w,b
  2004  00132C  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  2005  00132E  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2006  001330  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2007  001332  A0D8               	btfss	status,0,c
  2008  001334  EF9E  F009         	goto	u1041
  2009  001338  EFA0  F009         	goto	u1040
  2010  00133C                     u1041:
  2011  00133C  EFA4  F009         	goto	l2253
  2012  001340                     u1040:
  2013  001340                     
  2014                           ; BSR set to: 0
  2015  001340  5170               	movf	___awmod@divisor& (0+255),w,b
  2016  001342  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  2017  001344  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2018  001346  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2019  001348                     l2253:
  2020                           
  2021                           ; BSR set to: 0
  2022  001348  90D8               	bcf	status,0,c
  2023  00134A  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2024  00134C  3370               	rrcf	___awmod@divisor& (0+255),f,b
  2025  00134E                     
  2026                           ; BSR set to: 0
  2027  00134E  2F72               	decfsz	___awmod@counter& (0+255),f,b
  2028  001350  EF95  F009         	goto	l2249
  2029  001354                     l2257:
  2030                           
  2031                           ; BSR set to: 0
  2032  001354  5173               	movf	___awmod@sign& (0+255),w,b
  2033  001356  B4D8               	btfsc	status,2,c
  2034  001358  EFB0  F009         	goto	u1051
  2035  00135C  EFB2  F009         	goto	u1050
  2036  001360                     u1051:
  2037  001360  EFB6  F009         	goto	l2261
  2038  001364                     u1050:
  2039  001364                     
  2040                           ; BSR set to: 0
  2041  001364  6D6E               	negf	___awmod@dividend& (0+255),b
  2042  001366  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2043  001368  B0D8               	btfsc	status,0,c
  2044  00136A  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2045  00136C                     l2261:
  2046                           
  2047                           ; BSR set to: 0
  2048  00136C  C06E  F06E         	movff	___awmod@dividend,?___awmod
  2049  001370  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  2050  001374                     
  2051                           ; BSR set to: 0
  2052  001374  0012               	return		;funcret
  2053  001376                     __end_of___awmod:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _lcd_init *****************
  2057 ;; Defined at:
  2058 ;;		line 258 in file "Lcd4Lignes.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2072 ;;      Params:         0       0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    6
  2079 ;; This function calls:
  2080 ;;		_lcd_initCGRam
  2081 ;;		_lcd_resetSequence
  2082 ;;		_lcd_wrCom
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text8
  2089  001AB2                     __ptext8:
  2090                           	opt callstack 0
  2091  001AB2                     _lcd_init:
  2092                           	opt callstack 24
  2093  001AB2                     
  2094                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2095  001AB2  EC76  F00B         	call	_lcd_resetSequence	;wreg free
  2096                           
  2097                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2098  001AB6  0E28               	movlw	40
  2099  001AB8  EC40  F00B         	call	_lcd_wrCom
  2100                           
  2101                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2102  001ABC  0E0F               	movlw	15
  2103  001ABE  EC40  F00B         	call	_lcd_wrCom
  2104                           
  2105                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2106  001AC2  0E01               	movlw	1
  2107  001AC4  EC40  F00B         	call	_lcd_wrCom
  2108                           
  2109                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2110  001AC8  0E06               	movlw	6
  2111  001ACA  EC40  F00B         	call	_lcd_wrCom
  2112                           
  2113                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2114  001ACE  0E80               	movlw	128
  2115  001AD0  EC40  F00B         	call	_lcd_wrCom
  2116  001AD4                     
  2117                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2118  001AD4  ECBB  F009         	call	_lcd_initCGRam	;wreg free
  2119  001AD8  0012               	return		;funcret
  2120  001ADA                     __end_of_lcd_init:
  2121                           	opt callstack 0
  2122                           
  2123 ;; *************** function _lcd_resetSequence *****************
  2124 ;; Defined at:
  2125 ;;		line 221 in file "Lcd4Lignes.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2139 ;;      Params:         0       0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0
  2141 ;;      Temps:          0       1       0       0       0       0       0
  2142 ;;      Totals:         0       1       0       0       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_lcd_ecrireDonnees
  2148 ;;		_lcd_strobeEnableBit
  2149 ;; This function is called by:
  2150 ;;		_lcd_init
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text9
  2155  0016EC                     __ptext9:
  2156                           	opt callstack 0
  2157  0016EC                     _lcd_resetSequence:
  2158                           	opt callstack 27
  2159  0016EC                     
  2160                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2161  0016EC  0E00               	movlw	0
  2162  0016EE  6E95               	movwf	149,c	;volatile
  2163  0016F0                     
  2164                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2165  0016F0  0E0D               	movlw	13
  2166  0016F2  0100               	movlb	0	; force () banked
  2167  0016F4  6F62               	movwf	??_lcd_resetSequence& (0+255),b
  2168  0016F6  0EFB               	movlw	251
  2169  0016F8                     u1427:
  2170  0016F8  2EE8               	decfsz	wreg,f,c
  2171  0016FA  D7FE               	bra	u1427
  2172  0016FC  2F62               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2173  0016FE  D7FC               	bra	u1427
  2174  001700  F000 F000          	nop2	
  2175  001704                     
  2176                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2177  001704  9080               	bcf	128,0,c	;volatile
  2178  001706                     
  2179                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2180  001706  9280               	bcf	128,1,c	;volatile
  2181  001708                     
  2182                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2183  001708  0E03               	movlw	3
  2184  00170A  EC81  F00D         	call	_lcd_ecrireDonnees
  2185  00170E                     
  2186                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2187  00170E  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2188  001712                     
  2189                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2190  001712  0E03               	movlw	3
  2191  001714                     u1437:
  2192  001714  2EE8               	decfsz	wreg,f,c
  2193  001716  D7FE               	bra	u1437
  2194  001718  F000               	nop	
  2195  00171A                     
  2196                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2197  00171A  0E03               	movlw	3
  2198  00171C  EC81  F00D         	call	_lcd_ecrireDonnees
  2199  001720                     
  2200                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2201  001720  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2202  001724                     
  2203                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2204  001724  0E03               	movlw	3
  2205  001726                     u1447:
  2206  001726  2EE8               	decfsz	wreg,f,c
  2207  001728  D7FE               	bra	u1447
  2208  00172A  F000               	nop	
  2209  00172C                     
  2210                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2211  00172C  0E03               	movlw	3
  2212  00172E  EC81  F00D         	call	_lcd_ecrireDonnees
  2213  001732                     
  2214                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2215  001732  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2216  001736                     
  2217                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2218  001736  0E03               	movlw	3
  2219  001738                     u1457:
  2220  001738  2EE8               	decfsz	wreg,f,c
  2221  00173A  D7FE               	bra	u1457
  2222  00173C  F000               	nop	
  2223  00173E                     
  2224                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2225  00173E  0E02               	movlw	2
  2226  001740  EC81  F00D         	call	_lcd_ecrireDonnees
  2227  001744                     
  2228                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2229  001744  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2230  001748                     
  2231                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2232  001748  0E03               	movlw	3
  2233  00174A                     u1467:
  2234  00174A  2EE8               	decfsz	wreg,f,c
  2235  00174C  D7FE               	bra	u1467
  2236  00174E  F000               	nop	
  2237  001750                     
  2238                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2239  001750  0E0F               	movlw	15
  2240  001752  6E95               	movwf	149,c	;volatile
  2241  001754  0012               	return		;funcret
  2242  001756                     __end_of_lcd_resetSequence:
  2243                           	opt callstack 0
  2244                           
  2245 ;; *************** function _lcd_initCGRam *****************
  2246 ;; Defined at:
  2247 ;;		line 417 in file "Lcd4Lignes.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  j               1    6[BANK0 ] unsigned char 
  2252 ;;  i               1    5[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2262 ;;      Params:         0       0       0       0       0       0       0
  2263 ;;      Locals:         0       2       0       0       0       0       0
  2264 ;;      Temps:          0       2       0       0       0       0       0
  2265 ;;      Totals:         0       4       0       0       0       0       0
  2266 ;;Total ram usage:        4 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    5
  2269 ;; This function calls:
  2270 ;;		_lcd_curseurHome
  2271 ;;		_lcd_wrCom
  2272 ;;		_lcd_wrData
  2273 ;; This function is called by:
  2274 ;;		_lcd_init
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text10
  2279  001376                     __ptext10:
  2280                           	opt callstack 0
  2281  001376                     _lcd_initCGRam:
  2282                           	opt callstack 24
  2283  001376                     
  2284                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2285  001376  0E40               	movlw	64
  2286  001378  EC40  F00B         	call	_lcd_wrCom
  2287  00137C                     
  2288                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2289  00137C  0E00               	movlw	0
  2290  00137E  0100               	movlb	0	; force () banked
  2291  001380  6F65               	movwf	lcd_initCGRam@i& (0+255),b
  2292  001382                     
  2293                           ; BSR set to: 0
  2294  001382  0E07               	movlw	7
  2295  001384  0100               	movlb	0	; force () banked
  2296  001386  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2297  001388  EFC8  F009         	goto	u961
  2298  00138C  EFCA  F009         	goto	u960
  2299  001390                     u961:
  2300  001390  EFCC  F009         	goto	l2205
  2301  001394                     u960:
  2302  001394  EF09  F00A         	goto	l2221
  2303  001398                     l2205:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2307  001398  0E00               	movlw	0
  2308  00139A  0100               	movlb	0	; force () banked
  2309  00139C  6F66               	movwf	lcd_initCGRam@j& (0+255),b
  2310  00139E                     
  2311                           ; BSR set to: 0
  2312  00139E  0E07               	movlw	7
  2313  0013A0  0100               	movlb	0	; force () banked
  2314  0013A2  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2315  0013A4  EFD6  F009         	goto	u971
  2316  0013A8  EFD8  F009         	goto	u970
  2317  0013AC                     u971:
  2318  0013AC  EFDA  F009         	goto	l2211
  2319  0013B0                     u970:
  2320  0013B0  EFFE  F009         	goto	l2217
  2321  0013B4                     l2211:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2325  0013B4  0100               	movlb	0	; force () banked
  2326  0013B6  5165               	movf	lcd_initCGRam@i& (0+255),w,b
  2327  0013B8  0D08               	mullw	8
  2328  0013BA  0E00               	movlw	low _matCGRAM
  2329  0013BC  0100               	movlb	0	; force () banked
  2330  0013BE  6F63               	movwf	??_lcd_initCGRam& (0+255),b
  2331  0013C0  0E01               	movlw	high _matCGRAM
  2332  0013C2  6F64               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2333  0013C4  50F3               	movf	243,w,c
  2334  0013C6  2763               	addwf	??_lcd_initCGRam& (0+255),f,b
  2335  0013C8  50F4               	movf	244,w,c
  2336  0013CA  2364               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2337  0013CC  0100               	movlb	0	; force () banked
  2338  0013CE  5166               	movf	lcd_initCGRam@j& (0+255),w,b
  2339  0013D0  0100               	movlb	0	; force () banked
  2340  0013D2  2563               	addwf	??_lcd_initCGRam& (0+255),w,b
  2341  0013D4  6ED9               	movwf	fsr2l,c
  2342  0013D6  0100               	movlb	0	; force () banked
  2343  0013D8  0E00               	movlw	0
  2344  0013DA  0100               	movlb	0	; force () banked
  2345  0013DC  2164               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2346  0013DE  6EDA               	movwf	fsr2h,c
  2347  0013E0  50DF               	movf	indf2,w,c
  2348  0013E2  EC29  F00D         	call	_lcd_wrData
  2349  0013E6  0100               	movlb	0	; force () banked
  2350  0013E8  2B66               	incf	lcd_initCGRam@j& (0+255),f,b
  2351  0013EA                     
  2352                           ; BSR set to: 0
  2353  0013EA  0E07               	movlw	7
  2354  0013EC  0100               	movlb	0	; force () banked
  2355  0013EE  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2356  0013F0  EFFC  F009         	goto	u981
  2357  0013F4  EFFE  F009         	goto	u980
  2358  0013F8                     u981:
  2359  0013F8  EFDA  F009         	goto	l2211
  2360  0013FC                     u980:
  2361  0013FC                     l2217:
  2362                           
  2363                           ; BSR set to: 0
  2364  0013FC  0100               	movlb	0	; force () banked
  2365  0013FE  2B65               	incf	lcd_initCGRam@i& (0+255),f,b
  2366  001400                     
  2367                           ; BSR set to: 0
  2368  001400  0E07               	movlw	7
  2369  001402  0100               	movlb	0	; force () banked
  2370  001404  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2371  001406  EF07  F00A         	goto	u991
  2372  00140A  EF09  F00A         	goto	u990
  2373  00140E                     u991:
  2374  00140E  EFCC  F009         	goto	l2205
  2375  001412                     u990:
  2376  001412                     l2221:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2380  001412  EC9E  F00D         	call	_lcd_curseurHome	;wreg free
  2381  001416  0012               	return		;funcret
  2382  001418                     __end_of_lcd_initCGRam:
  2383                           	opt callstack 0
  2384                           
  2385 ;; *************** function _lcd_curseurHome *****************
  2386 ;; Defined at:
  2387 ;;		line 288 in file "Lcd4Lignes.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2401 ;;      Params:         0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    4
  2408 ;; This function calls:
  2409 ;;		_lcd_wrCom
  2410 ;; This function is called by:
  2411 ;;		_lcd_initCGRam
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text11
  2416  001B3C                     __ptext11:
  2417                           	opt callstack 0
  2418  001B3C                     _lcd_curseurHome:
  2419                           	opt callstack 24
  2420  001B3C                     
  2421                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2422  001B3C  0E02               	movlw	2
  2423  001B3E  EC40  F00B         	call	_lcd_wrCom
  2424  001B42  0012               	return		;funcret
  2425  001B44                     __end_of_lcd_curseurHome:
  2426                           	opt callstack 0
  2427                           
  2428 ;; *************** function _initialisation *****************
  2429 ;; Defined at:
  2430 ;;		line 315 in file "main.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2444 ;;      Params:         0       0       0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    2
  2451 ;; This function calls:
  2452 ;;		_srand
  2453 ;; This function is called by:
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text12
  2459  0018D6                     __ptext12:
  2460                           	opt callstack 0
  2461  0018D6                     _initialisation:
  2462                           	opt callstack 28
  2463  0018D6                     
  2464                           ;main.c: 317: TRISD = 0;
  2465  0018D6  0E00               	movlw	0
  2466  0018D8  6E95               	movwf	149,c	;volatile
  2467                           
  2468                           ;main.c: 319: ANSELH = 0;
  2469  0018DA  0E00               	movlw	0
  2470  0018DC  6E7F               	movwf	127,c	;volatile
  2471  0018DE                     
  2472                           ;main.c: 320: TRISB = 0xFF;
  2473  0018DE  6893               	setf	147,c	;volatile
  2474                           
  2475                           ;main.c: 322: ANSEL = 0;
  2476  0018E0  0E00               	movlw	0
  2477  0018E2  6E7E               	movwf	126,c	;volatile
  2478                           
  2479                           ;main.c: 323: TRISA = 0;
  2480  0018E4  0E00               	movlw	0
  2481  0018E6  6E92               	movwf	146,c	;volatile
  2482  0018E8                     
  2483                           ;main.c: 327: T1CONbits.TMR1ON = 1;
  2484  0018E8  80CD               	bsf	205,0,c	;volatile
  2485  0018EA                     
  2486                           ;main.c: 328: srand(TMR1);
  2487  0018EA  CFCE F060          	movff	4046,srand@x	;volatile
  2488  0018EE  CFCF F061          	movff	4047,srand@x+1	;volatile
  2489  0018F2  EC8F  F00D         	call	_srand	;wreg free
  2490  0018F6                     
  2491                           ;main.c: 331: ANSELbits.ANS7 = 1;
  2492  0018F6  8E7E               	bsf	126,7,c	;volatile
  2493  0018F8                     
  2494                           ;main.c: 333: ADCON0bits.ADON = 1;
  2495  0018F8  80C2               	bsf	194,0,c	;volatile
  2496  0018FA                     
  2497                           ;main.c: 334: ADCON1 = 0;
  2498  0018FA  0E00               	movlw	0
  2499  0018FC  6EC1               	movwf	193,c	;volatile
  2500  0018FE                     
  2501                           ;main.c: 336: ADCON2bits.ADFM = 0;
  2502  0018FE  9EC0               	bcf	192,7,c	;volatile
  2503  001900                     
  2504                           ;main.c: 337: ADCON2bits.ACQT = 0;
  2505  001900  0EC7               	movlw	-57
  2506  001902  16C0               	andwf	192,f,c	;volatile
  2507  001904                     
  2508                           ;main.c: 338: ADCON2bits.ADCS = 0;
  2509  001904  0EF8               	movlw	-8
  2510  001906  16C0               	andwf	192,f,c	;volatile
  2511  001908                     
  2512                           ;main.c: 342: T0CONbits.TMR0ON = 1;
  2513  001908  8ED5               	bsf	213,7,c	;volatile
  2514  00190A                     
  2515                           ;main.c: 343: T0CONbits.T08BIT = 0;
  2516  00190A  9CD5               	bcf	213,6,c	;volatile
  2517  00190C                     
  2518                           ;main.c: 344: T0CONbits.T0CS = 0;
  2519  00190C  9AD5               	bcf	213,5,c	;volatile
  2520  00190E                     
  2521                           ;main.c: 345: T0CONbits.PSA = 0;
  2522  00190E  96D5               	bcf	213,3,c	;volatile
  2523  001910                     
  2524                           ;main.c: 346: T0CONbits.T0PS = 0b010;
  2525  001910  50D5               	movf	213,w,c	;volatile
  2526  001912  0BF8               	andlw	-8
  2527  001914  0902               	iorlw	2
  2528  001916  6ED5               	movwf	213,c	;volatile
  2529  001918                     
  2530                           ;main.c: 347: TMR0 = 0x0BDC;
  2531  001918  0E0B               	movlw	11
  2532  00191A  6ED7               	movwf	215,c	;volatile
  2533  00191C  0EDC               	movlw	220
  2534  00191E  6ED6               	movwf	214,c	;volatile
  2535  001920                     
  2536                           ;main.c: 348: INTCONbits.TMR0IE = 1;
  2537  001920  8AF2               	bsf	242,5,c	;volatile
  2538  001922                     
  2539                           ;main.c: 349: INTCONbits.TMR0IF = 0;
  2540  001922  94F2               	bcf	242,2,c	;volatile
  2541  001924                     
  2542                           ;main.c: 350: INTCONbits.PEIE = 1;
  2543  001924  8CF2               	bsf	242,6,c	;volatile
  2544  001926                     
  2545                           ;main.c: 351: INTCONbits.GIE = 1;
  2546  001926  8EF2               	bsf	242,7,c	;volatile
  2547  001928  0012               	return		;funcret
  2548  00192A                     __end_of_initialisation:
  2549                           	opt callstack 0
  2550                           
  2551 ;; *************** function _srand *****************
  2552 ;; Defined at:
  2553 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  x               2    0[BANK0 ] unsigned int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;		None
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		status,2
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2567 ;;      Params:         0       2       0       0       0       0       0
  2568 ;;      Locals:         0       0       0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0
  2570 ;;      Totals:         0       2       0       0       0       0       0
  2571 ;;Total ram usage:        2 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_initialisation
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text13
  2582  001B1E                     __ptext13:
  2583                           	opt callstack 0
  2584  001B1E                     _srand:
  2585                           	opt callstack 28
  2586  001B1E  C060  F0EA         	movff	srand@x,_randx
  2587  001B22  C061  F0EB         	movff	srand@x+1,_randx+1
  2588  001B26  0100               	movlb	0	; () banked
  2589  001B28  6BEC               	clrf	(_randx+2)& (0+255),b
  2590  001B2A  6BED               	clrf	(_randx+3)& (0+255),b
  2591  001B2C                     
  2592                           ; BSR set to: 0
  2593  001B2C  0012               	return		;funcret
  2594  001B2E                     __end_of_srand:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _feu *****************
  2598 ;; Defined at:
  2599 ;;		line 207 in file "main.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  x               1    wreg     unsigned char 
  2602 ;;  pts             2    6[BANK0 ] PTR int 
  2603 ;;		 -> main@pts(2), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  x               1   15[BANK0 ] unsigned char 
  2606 ;;  i               2   13[BANK0 ] int 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2616 ;;      Params:         0       2       0       0       0       0       0
  2617 ;;      Locals:         0       3       0       0       0       0       0
  2618 ;;      Temps:          0       5       0       0       0       0       0
  2619 ;;      Totals:         0      10       0       0       0       0       0
  2620 ;;Total ram usage:       10 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    5
  2623 ;; This function calls:
  2624 ;;		___wmul
  2625 ;;		_lcd_ecritChar
  2626 ;;		_lcd_gotoXY
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text14
  2633  000654                     __ptext14:
  2634                           	opt callstack 0
  2635  000654                     _feu:
  2636                           	opt callstack 25
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;incstack = 0
  2640                           ;feu@x stored from wreg
  2641  000654  0100               	movlb	0	; force () banked
  2642  000656  6F6F               	movwf	feu@x& (0+255),b
  2643  000658                     
  2644                           ;main.c: 209: int i;;main.c: 210: if(PORTBbits.RB1 == 0)
  2645  000658  B281               	btfsc	129,1,c	;volatile
  2646  00065A  EF31  F003         	goto	u1211
  2647  00065E  EF33  F003         	goto	u1210
  2648  000662                     u1211:
  2649  000662  EFF2  F004         	goto	l127
  2650  000666                     u1210:
  2651  000666                     l121:
  2652  000666  A281               	btfss	129,1,c	;volatile
  2653  000668  EF38  F003         	goto	u1221
  2654  00066C  EF3A  F003         	goto	u1220
  2655  000670                     u1221:
  2656  000670  EF33  F003         	goto	l121
  2657  000674                     u1220:
  2658  000674                     
  2659                           ;main.c: 213: for(i=3;i>0;i--)
  2660  000674  0E00               	movlw	0
  2661  000676  0100               	movlb	0	; force () banked
  2662  000678  6F6E               	movwf	(feu@i+1)& (0+255),b
  2663  00067A  0E03               	movlw	3
  2664  00067C  6F6D               	movwf	feu@i& (0+255),b
  2665  00067E                     
  2666                           ; BSR set to: 0
  2667  00067E  0100               	movlb	0	; force () banked
  2668  000680  BF6E               	btfsc	(feu@i+1)& (0+255),7,b
  2669  000682  EF4D  F003         	goto	u1230
  2670  000686  516E               	movf	(feu@i+1)& (0+255),w,b
  2671  000688  E106               	bnz	u1231
  2672  00068A  056D               	decf	feu@i& (0+255),w,b
  2673  00068C  B0D8               	btfsc	status,0,c
  2674  00068E  EF4B  F003         	goto	u1231
  2675  000692  EF4D  F003         	goto	u1230
  2676  000696                     u1231:
  2677  000696  EF4F  F003         	goto	l2441
  2678  00069A                     u1230:
  2679  00069A  EFF2  F004         	goto	l127
  2680  00069E                     l2441:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 214: {;main.c: 215: if(m_aliens[(i-1)][x-1] == 1)
  2684  00069E  C06D  F060         	movff	feu@i,___wmul@multiplier
  2685  0006A2  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2686  0006A6  0E00               	movlw	0
  2687  0006A8  0100               	movlb	0	; force () banked
  2688  0006AA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2689  0006AC  0E15               	movlw	21
  2690  0006AE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2691  0006B0  EC6D  F00D         	call	___wmul	;wreg free
  2692  0006B4  0EEA               	movlw	234
  2693  0006B6  0100               	movlb	0	; force () banked
  2694  0006B8  6F68               	movwf	??_feu& (0+255),b
  2695  0006BA  0EFF               	movlw	255
  2696  0006BC  6F69               	movwf	(??_feu+1)& (0+255),b
  2697  0006BE  0E40               	movlw	low _m_aliens
  2698  0006C0  6F6A               	movwf	(??_feu+2)& (0+255),b
  2699  0006C2  0E01               	movlw	high _m_aliens
  2700  0006C4  6F6B               	movwf	(??_feu+3)& (0+255),b
  2701  0006C6  5168               	movf	??_feu& (0+255),w,b
  2702  0006C8  276A               	addwf	(??_feu+2)& (0+255),f,b
  2703  0006CA  5169               	movf	(??_feu+1)& (0+255),w,b
  2704  0006CC  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2705  0006CE  0100               	movlb	0	; force () banked
  2706  0006D0  5160               	movf	?___wmul& (0+255),w,b
  2707  0006D2  0100               	movlb	0	; force () banked
  2708  0006D4  276A               	addwf	(??_feu+2)& (0+255),f,b
  2709  0006D6  0100               	movlb	0	; force () banked
  2710  0006D8  5161               	movf	(?___wmul+1)& (0+255),w,b
  2711  0006DA  0100               	movlb	0	; force () banked
  2712  0006DC  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2713  0006DE  0100               	movlb	0	; force () banked
  2714  0006E0  516F               	movf	feu@x& (0+255),w,b
  2715  0006E2  0100               	movlb	0	; force () banked
  2716  0006E4  256A               	addwf	(??_feu+2)& (0+255),w,b
  2717  0006E6  6ED9               	movwf	fsr2l,c
  2718  0006E8  0100               	movlb	0	; force () banked
  2719  0006EA  0E00               	movlw	0
  2720  0006EC  0100               	movlb	0	; force () banked
  2721  0006EE  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2722  0006F0  6EDA               	movwf	fsr2h,c
  2723  0006F2  04DE               	decf	postinc2,w,c
  2724  0006F4  A4D8               	btfss	status,2,c
  2725  0006F6  EF7F  F003         	goto	u1241
  2726  0006FA  EF81  F003         	goto	u1240
  2727  0006FE                     u1241:
  2728  0006FE  EFD4  F003         	goto	l2455
  2729  000702                     u1240:
  2730  000702                     
  2731                           ; BSR set to: 0
  2732                           ;main.c: 216: {;main.c: 217: m_aliens[(i-1)][x-1] = ' ';
  2733  000702  C06D  F060         	movff	feu@i,___wmul@multiplier
  2734  000706  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2735  00070A  0E00               	movlw	0
  2736  00070C  0100               	movlb	0	; force () banked
  2737  00070E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2738  000710  0E15               	movlw	21
  2739  000712  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2740  000714  EC6D  F00D         	call	___wmul	;wreg free
  2741  000718  0EEA               	movlw	234
  2742  00071A  0100               	movlb	0	; force () banked
  2743  00071C  6F68               	movwf	??_feu& (0+255),b
  2744  00071E  0EFF               	movlw	255
  2745  000720  6F69               	movwf	(??_feu+1)& (0+255),b
  2746  000722  0E40               	movlw	low _m_aliens
  2747  000724  6F6A               	movwf	(??_feu+2)& (0+255),b
  2748  000726  0E01               	movlw	high _m_aliens
  2749  000728  6F6B               	movwf	(??_feu+3)& (0+255),b
  2750  00072A  5168               	movf	??_feu& (0+255),w,b
  2751  00072C  276A               	addwf	(??_feu+2)& (0+255),f,b
  2752  00072E  5169               	movf	(??_feu+1)& (0+255),w,b
  2753  000730  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2754  000732  0100               	movlb	0	; force () banked
  2755  000734  5160               	movf	?___wmul& (0+255),w,b
  2756  000736  0100               	movlb	0	; force () banked
  2757  000738  276A               	addwf	(??_feu+2)& (0+255),f,b
  2758  00073A  0100               	movlb	0	; force () banked
  2759  00073C  5161               	movf	(?___wmul+1)& (0+255),w,b
  2760  00073E  0100               	movlb	0	; force () banked
  2761  000740  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2762  000742  0100               	movlb	0	; force () banked
  2763  000744  516F               	movf	feu@x& (0+255),w,b
  2764  000746  0100               	movlb	0	; force () banked
  2765  000748  256A               	addwf	(??_feu+2)& (0+255),w,b
  2766  00074A  6ED9               	movwf	fsr2l,c
  2767  00074C  0100               	movlb	0	; force () banked
  2768  00074E  0E00               	movlw	0
  2769  000750  0100               	movlb	0	; force () banked
  2770  000752  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2771  000754  6EDA               	movwf	fsr2h,c
  2772  000756  0E20               	movlw	32
  2773  000758  6EDF               	movwf	indf2,c
  2774  00075A                     
  2775                           ; BSR set to: 0
  2776                           ;main.c: 218: lcd_gotoXY(x,i);
  2777  00075A  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  2778  00075E  0100               	movlb	0	; force () banked
  2779  000760  516F               	movf	feu@x& (0+255),w,b
  2780  000762  ECD1  F00A         	call	_lcd_gotoXY
  2781  000766                     
  2782                           ;main.c: 219: lcd_ecritChar(' ');
  2783  000766  0E20               	movlw	32
  2784  000768  EC95  F00C         	call	_lcd_ecritChar
  2785  00076C                     
  2786                           ;main.c: 220: lcd_gotoXY(x,4);
  2787  00076C  0E04               	movlw	4
  2788  00076E  0100               	movlb	0	; force () banked
  2789  000770  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  2790  000772  0100               	movlb	0	; force () banked
  2791  000774  516F               	movf	feu@x& (0+255),w,b
  2792  000776  ECD1  F00A         	call	_lcd_gotoXY
  2793  00077A                     
  2794                           ;main.c: 221: (*pts) = (*pts)+1;
  2795  00077A  C066  FFD9         	movff	feu@pts,fsr2l
  2796  00077E  C067  FFDA         	movff	feu@pts+1,fsr2h
  2797  000782  CFDE F068          	movff	postinc2,??_feu
  2798  000786  CFDD F069          	movff	postdec2,??_feu+1
  2799  00078A  0E01               	movlw	1
  2800  00078C  0100               	movlb	0	; force () banked
  2801  00078E  2768               	addwf	??_feu& (0+255),f,b
  2802  000790  0E00               	movlw	0
  2803  000792  2369               	addwfc	(??_feu+1)& (0+255),f,b
  2804  000794  C066  FFD9         	movff	feu@pts,fsr2l
  2805  000798  C067  FFDA         	movff	feu@pts+1,fsr2h
  2806  00079C  C068  FFDE         	movff	??_feu,postinc2
  2807  0007A0  C069  FFDD         	movff	??_feu+1,postdec2
  2808  0007A4  EFF2  F004         	goto	l127
  2809  0007A8                     l2455:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;main.c: 223: };main.c: 224: if(m_aliens[(i-1)][x-1] == 2)
  2813  0007A8  C06D  F060         	movff	feu@i,___wmul@multiplier
  2814  0007AC  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2815  0007B0  0E00               	movlw	0
  2816  0007B2  0100               	movlb	0	; force () banked
  2817  0007B4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2818  0007B6  0E15               	movlw	21
  2819  0007B8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2820  0007BA  EC6D  F00D         	call	___wmul	;wreg free
  2821  0007BE  0EEA               	movlw	234
  2822  0007C0  0100               	movlb	0	; force () banked
  2823  0007C2  6F68               	movwf	??_feu& (0+255),b
  2824  0007C4  0EFF               	movlw	255
  2825  0007C6  6F69               	movwf	(??_feu+1)& (0+255),b
  2826  0007C8  0E40               	movlw	low _m_aliens
  2827  0007CA  6F6A               	movwf	(??_feu+2)& (0+255),b
  2828  0007CC  0E01               	movlw	high _m_aliens
  2829  0007CE  6F6B               	movwf	(??_feu+3)& (0+255),b
  2830  0007D0  5168               	movf	??_feu& (0+255),w,b
  2831  0007D2  276A               	addwf	(??_feu+2)& (0+255),f,b
  2832  0007D4  5169               	movf	(??_feu+1)& (0+255),w,b
  2833  0007D6  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2834  0007D8  0100               	movlb	0	; force () banked
  2835  0007DA  5160               	movf	?___wmul& (0+255),w,b
  2836  0007DC  0100               	movlb	0	; force () banked
  2837  0007DE  276A               	addwf	(??_feu+2)& (0+255),f,b
  2838  0007E0  0100               	movlb	0	; force () banked
  2839  0007E2  5161               	movf	(?___wmul+1)& (0+255),w,b
  2840  0007E4  0100               	movlb	0	; force () banked
  2841  0007E6  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2842  0007E8  0100               	movlb	0	; force () banked
  2843  0007EA  516F               	movf	feu@x& (0+255),w,b
  2844  0007EC  0100               	movlb	0	; force () banked
  2845  0007EE  256A               	addwf	(??_feu+2)& (0+255),w,b
  2846  0007F0  6ED9               	movwf	fsr2l,c
  2847  0007F2  0100               	movlb	0	; force () banked
  2848  0007F4  0E00               	movlw	0
  2849  0007F6  0100               	movlb	0	; force () banked
  2850  0007F8  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2851  0007FA  6EDA               	movwf	fsr2h,c
  2852  0007FC  0E02               	movlw	2
  2853  0007FE  18DE               	xorwf	postinc2,w,c
  2854  000800  A4D8               	btfss	status,2,c
  2855  000802  EF05  F004         	goto	u1251
  2856  000806  EF07  F004         	goto	u1250
  2857  00080A                     u1251:
  2858  00080A  EF5A  F004         	goto	l2469
  2859  00080E                     u1250:
  2860  00080E                     
  2861                           ; BSR set to: 0
  2862                           ;main.c: 225: {;main.c: 226: m_aliens[(i-1)][x-1] = ' ';
  2863  00080E  C06D  F060         	movff	feu@i,___wmul@multiplier
  2864  000812  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2865  000816  0E00               	movlw	0
  2866  000818  0100               	movlb	0	; force () banked
  2867  00081A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2868  00081C  0E15               	movlw	21
  2869  00081E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2870  000820  EC6D  F00D         	call	___wmul	;wreg free
  2871  000824  0EEA               	movlw	234
  2872  000826  0100               	movlb	0	; force () banked
  2873  000828  6F68               	movwf	??_feu& (0+255),b
  2874  00082A  0EFF               	movlw	255
  2875  00082C  6F69               	movwf	(??_feu+1)& (0+255),b
  2876  00082E  0E40               	movlw	low _m_aliens
  2877  000830  6F6A               	movwf	(??_feu+2)& (0+255),b
  2878  000832  0E01               	movlw	high _m_aliens
  2879  000834  6F6B               	movwf	(??_feu+3)& (0+255),b
  2880  000836  5168               	movf	??_feu& (0+255),w,b
  2881  000838  276A               	addwf	(??_feu+2)& (0+255),f,b
  2882  00083A  5169               	movf	(??_feu+1)& (0+255),w,b
  2883  00083C  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2884  00083E  0100               	movlb	0	; force () banked
  2885  000840  5160               	movf	?___wmul& (0+255),w,b
  2886  000842  0100               	movlb	0	; force () banked
  2887  000844  276A               	addwf	(??_feu+2)& (0+255),f,b
  2888  000846  0100               	movlb	0	; force () banked
  2889  000848  5161               	movf	(?___wmul+1)& (0+255),w,b
  2890  00084A  0100               	movlb	0	; force () banked
  2891  00084C  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2892  00084E  0100               	movlb	0	; force () banked
  2893  000850  516F               	movf	feu@x& (0+255),w,b
  2894  000852  0100               	movlb	0	; force () banked
  2895  000854  256A               	addwf	(??_feu+2)& (0+255),w,b
  2896  000856  6ED9               	movwf	fsr2l,c
  2897  000858  0100               	movlb	0	; force () banked
  2898  00085A  0E00               	movlw	0
  2899  00085C  0100               	movlb	0	; force () banked
  2900  00085E  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2901  000860  6EDA               	movwf	fsr2h,c
  2902  000862  0E20               	movlw	32
  2903  000864  6EDF               	movwf	indf2,c
  2904  000866                     
  2905                           ; BSR set to: 0
  2906                           ;main.c: 227: lcd_gotoXY(x,i);
  2907  000866  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  2908  00086A  0100               	movlb	0	; force () banked
  2909  00086C  516F               	movf	feu@x& (0+255),w,b
  2910  00086E  ECD1  F00A         	call	_lcd_gotoXY
  2911  000872                     
  2912                           ;main.c: 228: lcd_ecritChar(' ');
  2913  000872  0E20               	movlw	32
  2914  000874  EC95  F00C         	call	_lcd_ecritChar
  2915  000878                     
  2916                           ;main.c: 229: lcd_gotoXY(x,4);
  2917  000878  0E04               	movlw	4
  2918  00087A  0100               	movlb	0	; force () banked
  2919  00087C  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  2920  00087E  0100               	movlb	0	; force () banked
  2921  000880  516F               	movf	feu@x& (0+255),w,b
  2922  000882  ECD1  F00A         	call	_lcd_gotoXY
  2923  000886                     
  2924                           ;main.c: 230: (*pts) = (*pts)+2;
  2925  000886  C066  FFD9         	movff	feu@pts,fsr2l
  2926  00088A  C067  FFDA         	movff	feu@pts+1,fsr2h
  2927  00088E  CFDE F068          	movff	postinc2,??_feu
  2928  000892  CFDD F069          	movff	postdec2,??_feu+1
  2929  000896  0E02               	movlw	2
  2930  000898  0100               	movlb	0	; force () banked
  2931  00089A  2768               	addwf	??_feu& (0+255),f,b
  2932  00089C  0E00               	movlw	0
  2933  00089E  2369               	addwfc	(??_feu+1)& (0+255),f,b
  2934  0008A0  C066  FFD9         	movff	feu@pts,fsr2l
  2935  0008A4  C067  FFDA         	movff	feu@pts+1,fsr2h
  2936  0008A8  C068  FFDE         	movff	??_feu,postinc2
  2937  0008AC  C069  FFDD         	movff	??_feu+1,postdec2
  2938  0008B0  EFF2  F004         	goto	l127
  2939  0008B4                     l2469:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;main.c: 232: };main.c: 233: if(m_aliens[(i-1)][x-1] == 3)
  2943  0008B4  C06D  F060         	movff	feu@i,___wmul@multiplier
  2944  0008B8  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2945  0008BC  0E00               	movlw	0
  2946  0008BE  0100               	movlb	0	; force () banked
  2947  0008C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2948  0008C2  0E15               	movlw	21
  2949  0008C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2950  0008C6  EC6D  F00D         	call	___wmul	;wreg free
  2951  0008CA  0EEA               	movlw	234
  2952  0008CC  0100               	movlb	0	; force () banked
  2953  0008CE  6F68               	movwf	??_feu& (0+255),b
  2954  0008D0  0EFF               	movlw	255
  2955  0008D2  6F69               	movwf	(??_feu+1)& (0+255),b
  2956  0008D4  0E40               	movlw	low _m_aliens
  2957  0008D6  6F6A               	movwf	(??_feu+2)& (0+255),b
  2958  0008D8  0E01               	movlw	high _m_aliens
  2959  0008DA  6F6B               	movwf	(??_feu+3)& (0+255),b
  2960  0008DC  5168               	movf	??_feu& (0+255),w,b
  2961  0008DE  276A               	addwf	(??_feu+2)& (0+255),f,b
  2962  0008E0  5169               	movf	(??_feu+1)& (0+255),w,b
  2963  0008E2  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2964  0008E4  0100               	movlb	0	; force () banked
  2965  0008E6  5160               	movf	?___wmul& (0+255),w,b
  2966  0008E8  0100               	movlb	0	; force () banked
  2967  0008EA  276A               	addwf	(??_feu+2)& (0+255),f,b
  2968  0008EC  0100               	movlb	0	; force () banked
  2969  0008EE  5161               	movf	(?___wmul+1)& (0+255),w,b
  2970  0008F0  0100               	movlb	0	; force () banked
  2971  0008F2  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2972  0008F4  0100               	movlb	0	; force () banked
  2973  0008F6  516F               	movf	feu@x& (0+255),w,b
  2974  0008F8  0100               	movlb	0	; force () banked
  2975  0008FA  256A               	addwf	(??_feu+2)& (0+255),w,b
  2976  0008FC  6ED9               	movwf	fsr2l,c
  2977  0008FE  0100               	movlb	0	; force () banked
  2978  000900  0E00               	movlw	0
  2979  000902  0100               	movlb	0	; force () banked
  2980  000904  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2981  000906  6EDA               	movwf	fsr2h,c
  2982  000908  0E03               	movlw	3
  2983  00090A  18DE               	xorwf	postinc2,w,c
  2984  00090C  A4D8               	btfss	status,2,c
  2985  00090E  EF8B  F004         	goto	u1261
  2986  000912  EF8D  F004         	goto	u1260
  2987  000916                     u1261:
  2988  000916  EFE0  F004         	goto	l2483
  2989  00091A                     u1260:
  2990  00091A                     
  2991                           ; BSR set to: 0
  2992                           ;main.c: 234: {;main.c: 235: m_aliens[(i-1)][x-1] = ' ';
  2993  00091A  C06D  F060         	movff	feu@i,___wmul@multiplier
  2994  00091E  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2995  000922  0E00               	movlw	0
  2996  000924  0100               	movlb	0	; force () banked
  2997  000926  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2998  000928  0E15               	movlw	21
  2999  00092A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3000  00092C  EC6D  F00D         	call	___wmul	;wreg free
  3001  000930  0EEA               	movlw	234
  3002  000932  0100               	movlb	0	; force () banked
  3003  000934  6F68               	movwf	??_feu& (0+255),b
  3004  000936  0EFF               	movlw	255
  3005  000938  6F69               	movwf	(??_feu+1)& (0+255),b
  3006  00093A  0E40               	movlw	low _m_aliens
  3007  00093C  6F6A               	movwf	(??_feu+2)& (0+255),b
  3008  00093E  0E01               	movlw	high _m_aliens
  3009  000940  6F6B               	movwf	(??_feu+3)& (0+255),b
  3010  000942  5168               	movf	??_feu& (0+255),w,b
  3011  000944  276A               	addwf	(??_feu+2)& (0+255),f,b
  3012  000946  5169               	movf	(??_feu+1)& (0+255),w,b
  3013  000948  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3014  00094A  0100               	movlb	0	; force () banked
  3015  00094C  5160               	movf	?___wmul& (0+255),w,b
  3016  00094E  0100               	movlb	0	; force () banked
  3017  000950  276A               	addwf	(??_feu+2)& (0+255),f,b
  3018  000952  0100               	movlb	0	; force () banked
  3019  000954  5161               	movf	(?___wmul+1)& (0+255),w,b
  3020  000956  0100               	movlb	0	; force () banked
  3021  000958  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3022  00095A  0100               	movlb	0	; force () banked
  3023  00095C  516F               	movf	feu@x& (0+255),w,b
  3024  00095E  0100               	movlb	0	; force () banked
  3025  000960  256A               	addwf	(??_feu+2)& (0+255),w,b
  3026  000962  6ED9               	movwf	fsr2l,c
  3027  000964  0100               	movlb	0	; force () banked
  3028  000966  0E00               	movlw	0
  3029  000968  0100               	movlb	0	; force () banked
  3030  00096A  216B               	addwfc	(??_feu+3)& (0+255),w,b
  3031  00096C  6EDA               	movwf	fsr2h,c
  3032  00096E  0E20               	movlw	32
  3033  000970  6EDF               	movwf	indf2,c
  3034  000972                     
  3035                           ; BSR set to: 0
  3036                           ;main.c: 236: lcd_gotoXY(x,i);
  3037  000972  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  3038  000976  0100               	movlb	0	; force () banked
  3039  000978  516F               	movf	feu@x& (0+255),w,b
  3040  00097A  ECD1  F00A         	call	_lcd_gotoXY
  3041  00097E                     
  3042                           ;main.c: 237: lcd_ecritChar(' ');
  3043  00097E  0E20               	movlw	32
  3044  000980  EC95  F00C         	call	_lcd_ecritChar
  3045  000984                     
  3046                           ;main.c: 238: lcd_gotoXY(x,4);
  3047  000984  0E04               	movlw	4
  3048  000986  0100               	movlb	0	; force () banked
  3049  000988  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3050  00098A  0100               	movlb	0	; force () banked
  3051  00098C  516F               	movf	feu@x& (0+255),w,b
  3052  00098E  ECD1  F00A         	call	_lcd_gotoXY
  3053  000992                     
  3054                           ;main.c: 239: (*pts) = (*pts)+3;
  3055  000992  C066  FFD9         	movff	feu@pts,fsr2l
  3056  000996  C067  FFDA         	movff	feu@pts+1,fsr2h
  3057  00099A  CFDE F068          	movff	postinc2,??_feu
  3058  00099E  CFDD F069          	movff	postdec2,??_feu+1
  3059  0009A2  0E03               	movlw	3
  3060  0009A4  0100               	movlb	0	; force () banked
  3061  0009A6  2768               	addwf	??_feu& (0+255),f,b
  3062  0009A8  0E00               	movlw	0
  3063  0009AA  2369               	addwfc	(??_feu+1)& (0+255),f,b
  3064  0009AC  C066  FFD9         	movff	feu@pts,fsr2l
  3065  0009B0  C067  FFDA         	movff	feu@pts+1,fsr2h
  3066  0009B4  C068  FFDE         	movff	??_feu,postinc2
  3067  0009B8  C069  FFDD         	movff	??_feu+1,postdec2
  3068  0009BC  EFF2  F004         	goto	l127
  3069  0009C0                     l2483:
  3070                           
  3071                           ; BSR set to: 0
  3072  0009C0  0100               	movlb	0	; force () banked
  3073  0009C2  076D               	decf	feu@i& (0+255),f,b
  3074  0009C4  A0D8               	btfss	status,0,c
  3075  0009C6  076E               	decf	(feu@i+1)& (0+255),f,b
  3076  0009C8                     
  3077                           ; BSR set to: 0
  3078  0009C8  0100               	movlb	0	; force () banked
  3079  0009CA  BF6E               	btfsc	(feu@i+1)& (0+255),7,b
  3080  0009CC  EFF2  F004         	goto	u1270
  3081  0009D0  516E               	movf	(feu@i+1)& (0+255),w,b
  3082  0009D2  E106               	bnz	u1271
  3083  0009D4  056D               	decf	feu@i& (0+255),w,b
  3084  0009D6  B0D8               	btfsc	status,0,c
  3085  0009D8  EFF0  F004         	goto	u1271
  3086  0009DC  EFF2  F004         	goto	u1270
  3087  0009E0                     u1271:
  3088  0009E0  EF4F  F003         	goto	l2441
  3089  0009E4                     u1270:
  3090  0009E4                     l127:
  3091  0009E4  0012               	return		;funcret
  3092  0009E6                     __end_of_feu:
  3093                           	opt callstack 0
  3094                           
  3095 ;; *************** function ___wmul *****************
  3096 ;; Defined at:
  3097 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3100 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  product         2    4[BANK0 ] unsigned int 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    0[BANK0 ] unsigned int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, prodl, prodh
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         0       4       0       0       0       0       0
  3113 ;;      Locals:         0       2       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0
  3115 ;;      Totals:         0       6       0       0       0       0       0
  3116 ;;Total ram usage:        6 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_feu
  3123 ;;		_videAliens
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text15
  3128  001ADA                     __ptext15:
  3129                           	opt callstack 0
  3130  001ADA                     ___wmul:
  3131                           	opt callstack 28
  3132  001ADA  0100               	movlb	0	; () banked
  3133  001ADC  5160               	movf	___wmul@multiplier& (0+255),w,b
  3134  001ADE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3135  001AE0  CFF3 F064          	movff	prodl,___wmul@product
  3136  001AE4  CFF4 F065          	movff	prodh,___wmul@product+1
  3137  001AE8  5160               	movf	___wmul@multiplier& (0+255),w,b
  3138  001AEA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3139  001AEC  50F3               	movf	243,w,c
  3140  001AEE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3141  001AF0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3142  001AF2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3143  001AF4  50F3               	movf	243,w,c
  3144  001AF6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3145  001AF8                     
  3146                           ; BSR set to: 0
  3147  001AF8  C064  F060         	movff	___wmul@product,?___wmul
  3148  001AFC  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3149  001B00                     
  3150                           ; BSR set to: 0
  3151  001B00  0012               	return		;funcret
  3152  001B02                     __end_of___wmul:
  3153                           	opt callstack 0
  3154                           
  3155 ;; *************** function _deplace *****************
  3156 ;; Defined at:
  3157 ;;		line 172 in file "main.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3160 ;;		 -> main@posX(2), 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         0       2       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0
  3174 ;;      Temps:          0       1       0       0       0       0       0
  3175 ;;      Totals:         0       3       0       0       0       0       0
  3176 ;;Total ram usage:        3 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    5
  3179 ;; This function calls:
  3180 ;;		_getAnalog
  3181 ;;		_lcd_ecritChar
  3182 ;;		_lcd_gotoXY
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text16
  3189  00104A                     __ptext16:
  3190                           	opt callstack 0
  3191  00104A                     _deplace:
  3192                           	opt callstack 25
  3193  00104A                     
  3194                           ;main.c: 175: if((getAnalog(7) > 200))
  3195  00104A  0E07               	movlw	7
  3196  00104C  EC43  F00D         	call	_getAnalog
  3197  001050  0100               	movlb	0	; force () banked
  3198  001052  6F67               	movwf	??_deplace& (0+255),b
  3199  001054  0EC8               	movlw	200
  3200  001056  6567               	cpfsgt	??_deplace& (0+255),b
  3201  001058  EF30  F008         	goto	u1171
  3202  00105C  EF32  F008         	goto	u1170
  3203  001060                     u1171:
  3204  001060  EF5E  F008         	goto	l2415
  3205  001064                     u1170:
  3206  001064                     
  3207                           ; BSR set to: 0
  3208                           ;main.c: 176: {;main.c: 177: lcd_gotoXY(((*x)),4);
  3209  001064  0E04               	movlw	4
  3210  001066  0100               	movlb	0	; force () banked
  3211  001068  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3212  00106A  C065  FFD9         	movff	deplace@x,fsr2l
  3213  00106E  C066  FFDA         	movff	deplace@x+1,fsr2h
  3214  001072  50DF               	movf	indf2,w,c
  3215  001074  ECD1  F00A         	call	_lcd_gotoXY
  3216  001078                     
  3217                           ;main.c: 178: lcd_ecritChar(' ');
  3218  001078  0E20               	movlw	32
  3219  00107A  EC95  F00C         	call	_lcd_ecritChar
  3220  00107E                     
  3221                           ;main.c: 179: (*x) = (*x) +1;
  3222  00107E  C065  FFD9         	movff	deplace@x,fsr2l
  3223  001082  C066  FFDA         	movff	deplace@x+1,fsr2h
  3224  001086  50DF               	movf	indf2,w,c
  3225  001088  0100               	movlb	0	; force () banked
  3226  00108A  6F67               	movwf	??_deplace& (0+255),b
  3227  00108C  2967               	incf	??_deplace& (0+255),w,b
  3228  00108E  C065  FFD9         	movff	deplace@x,fsr2l
  3229  001092  C066  FFDA         	movff	deplace@x+1,fsr2h
  3230  001096  6EDF               	movwf	indf2,c
  3231  001098                     
  3232                           ; BSR set to: 0
  3233                           ;main.c: 180: if(*x > 20)
  3234  001098  C065  FFD9         	movff	deplace@x,fsr2l
  3235  00109C  C066  FFDA         	movff	deplace@x+1,fsr2h
  3236  0010A0  0E14               	movlw	20
  3237  0010A2  64DF               	cpfsgt	indf2,c
  3238  0010A4  EF56  F008         	goto	u1181
  3239  0010A8  EF58  F008         	goto	u1180
  3240  0010AC                     u1181:
  3241  0010AC  EF5E  F008         	goto	l2415
  3242  0010B0                     u1180:
  3243  0010B0                     
  3244                           ; BSR set to: 0
  3245                           ;main.c: 181: {;main.c: 182: *x=1;
  3246  0010B0  C065  FFD9         	movff	deplace@x,fsr2l
  3247  0010B4  C066  FFDA         	movff	deplace@x+1,fsr2h
  3248  0010B8  0E01               	movlw	1
  3249  0010BA  6EDF               	movwf	indf2,c
  3250  0010BC                     l2415:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 183: };main.c: 186: };main.c: 187: if(getAnalog(7) < 100)
  3254  0010BC  0E07               	movlw	7
  3255  0010BE  EC43  F00D         	call	_getAnalog
  3256  0010C2  0100               	movlb	0	; force () banked
  3257  0010C4  6F67               	movwf	??_deplace& (0+255),b
  3258  0010C6  0E64               	movlw	100
  3259  0010C8  6167               	cpfslt	??_deplace& (0+255),b
  3260  0010CA  EF69  F008         	goto	u1191
  3261  0010CE  EF6B  F008         	goto	u1190
  3262  0010D2                     u1191:
  3263  0010D2  EF97  F008         	goto	l2427
  3264  0010D6                     u1190:
  3265  0010D6                     
  3266                           ; BSR set to: 0
  3267                           ;main.c: 188: {;main.c: 189: lcd_gotoXY(((*x)),4);
  3268  0010D6  0E04               	movlw	4
  3269  0010D8  0100               	movlb	0	; force () banked
  3270  0010DA  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3271  0010DC  C065  FFD9         	movff	deplace@x,fsr2l
  3272  0010E0  C066  FFDA         	movff	deplace@x+1,fsr2h
  3273  0010E4  50DF               	movf	indf2,w,c
  3274  0010E6  ECD1  F00A         	call	_lcd_gotoXY
  3275  0010EA                     
  3276                           ;main.c: 190: lcd_ecritChar(' ');
  3277  0010EA  0E20               	movlw	32
  3278  0010EC  EC95  F00C         	call	_lcd_ecritChar
  3279  0010F0                     
  3280                           ;main.c: 191: (*x) = (*x) -1;
  3281  0010F0  C065  FFD9         	movff	deplace@x,fsr2l
  3282  0010F4  C066  FFDA         	movff	deplace@x+1,fsr2h
  3283  0010F8  50DF               	movf	indf2,w,c
  3284  0010FA  0100               	movlb	0	; force () banked
  3285  0010FC  6F67               	movwf	??_deplace& (0+255),b
  3286  0010FE  0567               	decf	??_deplace& (0+255),w,b
  3287  001100  C065  FFD9         	movff	deplace@x,fsr2l
  3288  001104  C066  FFDA         	movff	deplace@x+1,fsr2h
  3289  001108  6EDF               	movwf	indf2,c
  3290  00110A                     
  3291                           ; BSR set to: 0
  3292                           ;main.c: 192: if(*x < 1)
  3293  00110A  C065  FFD9         	movff	deplace@x,fsr2l
  3294  00110E  C066  FFDA         	movff	deplace@x+1,fsr2h
  3295  001112  50DF               	movf	indf2,w,c
  3296  001114  A4D8               	btfss	status,2,c
  3297  001116  EF8F  F008         	goto	u1201
  3298  00111A  EF91  F008         	goto	u1200
  3299  00111E                     u1201:
  3300  00111E  EF97  F008         	goto	l2427
  3301  001122                     u1200:
  3302  001122                     
  3303                           ; BSR set to: 0
  3304                           ;main.c: 193: {;main.c: 194: *x=20;
  3305  001122  C065  FFD9         	movff	deplace@x,fsr2l
  3306  001126  C066  FFDA         	movff	deplace@x+1,fsr2h
  3307  00112A  0E14               	movlw	20
  3308  00112C  6EDF               	movwf	indf2,c
  3309  00112E                     l2427:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;main.c: 195: };main.c: 196: };main.c: 197: lcd_gotoXY((*x),4);
  3313  00112E  0E04               	movlw	4
  3314  001130  0100               	movlb	0	; force () banked
  3315  001132  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3316  001134  C065  FFD9         	movff	deplace@x,fsr2l
  3317  001138  C066  FFDA         	movff	deplace@x+1,fsr2h
  3318  00113C  50DF               	movf	indf2,w,c
  3319  00113E  ECD1  F00A         	call	_lcd_gotoXY
  3320  001142                     
  3321                           ;main.c: 198: lcd_ecritChar(0);
  3322  001142  0E00               	movlw	0
  3323  001144  EC95  F00C         	call	_lcd_ecritChar
  3324  001148  0012               	return		;funcret
  3325  00114A                     __end_of_deplace:
  3326                           	opt callstack 0
  3327                           
  3328 ;; *************** function _getAnalog *****************
  3329 ;; Defined at:
  3330 ;;		line 301 in file "main.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  canal           1    wreg     unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  canal           1    1[BANK0 ] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      unsigned char 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3344 ;;      Params:         0       0       0       0       0       0       0
  3345 ;;      Locals:         0       1       0       0       0       0       0
  3346 ;;      Temps:          0       1       0       0       0       0       0
  3347 ;;      Totals:         0       2       0       0       0       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_deplace
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text17
  3359  001A86                     __ptext17:
  3360                           	opt callstack 0
  3361  001A86                     _getAnalog:
  3362                           	opt callstack 28
  3363                           
  3364                           ;incstack = 0
  3365                           ;getAnalog@canal stored from wreg
  3366  001A86  0100               	movlb	0	; force () banked
  3367  001A88  6F61               	movwf	getAnalog@canal& (0+255),b
  3368  001A8A                     
  3369                           ;main.c: 303: ADCON0bits.CHS = canal;
  3370  001A8A  C061  F060         	movff	getAnalog@canal,??_getAnalog
  3371  001A8E  0100               	movlb	0	; force () banked
  3372  001A90  4760               	rlncf	??_getAnalog& (0+255),f,b
  3373  001A92  4760               	rlncf	??_getAnalog& (0+255),f,b
  3374  001A94  50C2               	movf	194,w,c	;volatile
  3375  001A96  1960               	xorwf	??_getAnalog& (0+255),w,b
  3376  001A98  0BC3               	andlw	-61
  3377  001A9A  1960               	xorwf	??_getAnalog& (0+255),w,b
  3378  001A9C  6EC2               	movwf	194,c	;volatile
  3379  001A9E                     
  3380                           ;main.c: 305: ADCON0bits.GO_DONE = 1;
  3381  001A9E  82C2               	bsf	194,1,c	;volatile
  3382  001AA0                     l148:
  3383  001AA0  B2C2               	btfsc	194,1,c	;volatile
  3384  001AA2  EF55  F00D         	goto	u241
  3385  001AA6  EF57  F00D         	goto	u240
  3386  001AAA                     u241:
  3387  001AAA  EF50  F00D         	goto	l148
  3388  001AAE                     u240:
  3389  001AAE                     
  3390                           ;main.c: 308: return ADRESH;
  3391  001AAE  50C4               	movf	196,w,c	;volatile
  3392  001AB0  0012               	return		;funcret
  3393  001AB2                     __end_of_getAnalog:
  3394                           	opt callstack 0
  3395                           
  3396 ;; *************** function _affichePerdu *****************
  3397 ;; Defined at:
  3398 ;;		line 273 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  pts             2   26[BANK0 ] int 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  buffer         50   30[BANK0 ] unsigned char [50]
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3412 ;;      Params:         0       2       0       0       0       0       0
  3413 ;;      Locals:         0      50       0       0       0       0       0
  3414 ;;      Temps:          0       2       0       0       0       0       0
  3415 ;;      Totals:         0      54       0       0       0       0       0
  3416 ;;Total ram usage:       54 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    6
  3419 ;; This function calls:
  3420 ;;		_lcd_cacheCurseur
  3421 ;;		_lcd_effaceAffichage
  3422 ;;		_lcd_putMessage
  3423 ;;		_sprintf
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text18
  3430  001822                     __ptext18:
  3431                           	opt callstack 0
  3432  001822                     _affichePerdu:
  3433                           	opt callstack 24
  3434  001822                     
  3435                           ;main.c: 275: char buffer[50];;main.c: 276: lcd_cacheCurseur();
  3436  001822  ECA2  F00D         	call	_lcd_cacheCurseur	;wreg free
  3437                           
  3438                           ;main.c: 277: lcd_effaceAffichage();
  3439  001826  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
  3440  00182A                     
  3441                           ;main.c: 278: sprintf(buffer, "Perdu... score: %d", pts);
  3442  00182A  0E7E               	movlw	low affichePerdu@buffer
  3443  00182C  0100               	movlb	0	; force () banked
  3444  00182E  6F6C               	movwf	sprintf@sp& (0+255),b
  3445  001830  0E00               	movlw	high affichePerdu@buffer
  3446  001832  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3447  001834  0E34               	movlw	low STR_2
  3448  001836  0100               	movlb	0	; force () banked
  3449  001838  6F6E               	movwf	sprintf@f& (0+255),b
  3450  00183A  0E06               	movlw	high STR_2
  3451  00183C  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3452  00183E  C07A  F070         	movff	affichePerdu@pts,?_sprintf+4
  3453  001842  C07B  F071         	movff	affichePerdu@pts+1,?_sprintf+5
  3454  001846  ECFA  F005         	call	_sprintf	;wreg free
  3455  00184A                     
  3456                           ;main.c: 279: lcd_putMessage(buffer);
  3457  00184A  0E7E               	movlw	low affichePerdu@buffer
  3458  00184C  0100               	movlb	0	; force () banked
  3459  00184E  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  3460  001850  0E00               	movlw	high affichePerdu@buffer
  3461  001852  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3462  001854  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  3463  001856  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3464  001858  A4D8               	btfss	status,2,c
  3465  00185A  0E20               	movlw	32
  3466  00185C  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3467  00185E  EC08  F009         	call	_lcd_putMessage	;wreg free
  3468  001862                     
  3469                           ;main.c: 280: _delay((unsigned long)((4000)*(1000000/4000.0)));
  3470  001862  0E06               	movlw	6
  3471  001864  0100               	movlb	0	; force () banked
  3472  001866  6F7D               	movwf	(??_affichePerdu+1)& (0+255),b
  3473  001868  0E13               	movlw	19
  3474  00186A  6F7C               	movwf	??_affichePerdu& (0+255),b
  3475  00186C  0EAD               	movlw	173
  3476  00186E                     u1477:
  3477  00186E  2EE8               	decfsz	wreg,f,c
  3478  001870  D7FE               	bra	u1477
  3479  001872  2F7C               	decfsz	??_affichePerdu& (0+255),f,b
  3480  001874  D7FC               	bra	u1477
  3481  001876  2F7D               	decfsz	(??_affichePerdu+1)& (0+255),f,b
  3482  001878  D7FA               	bra	u1477
  3483  00187A  F000 F000          	nop2	
  3484  00187E  0012               	return		;funcret
  3485  001880                     __end_of_affichePerdu:
  3486                           	opt callstack 0
  3487                           
  3488 ;; *************** function _sprintf *****************
  3489 ;; Defined at:
  3490 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3493 ;;		 -> affichePerdu@buffer(50), main@bufferNiveau(50), 
  3494 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3495 ;;		 -> STR_2(19), STR_1(11), 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  tmpval          4    0        struct .
  3498 ;;  cp              3    0        PTR const unsigned char 
  3499 ;;  val             2   23[BANK0 ] unsigned int 
  3500 ;;  ap              2   19[BANK0 ] PTR void [1]
  3501 ;;		 -> ?_sprintf(2), 
  3502 ;;  len             2    0        unsigned int 
  3503 ;;  c               1   25[BANK0 ] unsigned char 
  3504 ;;  prec            1   22[BANK0 ] char 
  3505 ;;  flag            1   21[BANK0 ] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  2   12[BANK0 ] int 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         0       6       0       0       0       0       0
  3516 ;;      Locals:         0       7       0       0       0       0       0
  3517 ;;      Temps:          0       1       0       0       0       0       0
  3518 ;;      Totals:         0      14       0       0       0       0       0
  3519 ;;Total ram usage:       14 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		___lwdiv
  3524 ;;		___lwmod
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;;		_affichePerdu
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text19
  3532  000BF4                     __ptext19:
  3533                           	opt callstack 0
  3534  000BF4                     _sprintf:
  3535                           	opt callstack 28
  3536  000BF4                     
  3537                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3538  000BF4  0E70               	movlw	low (?_sprintf+4)
  3539  000BF6  0100               	movlb	0	; force () banked
  3540  000BF8  6F73               	movwf	sprintf@ap& (0+255),b
  3541  000BFA  0E00               	movlw	high (?_sprintf+4)
  3542  000BFC  6F74               	movwf	(sprintf@ap+1)& (0+255),b
  3543                           
  3544                           ;doprnt.c: 553: while((c = *f++)) {
  3545  000BFE  EFDC  F006         	goto	l2135
  3546  000C02                     l2083:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;doprnt.c: 555: if(c != '%')
  3550  000C02  0E25               	movlw	37
  3551  000C04  0100               	movlb	0	; force () banked
  3552  000C06  1979               	xorwf	sprintf@c& (0+255),w,b
  3553  000C08  B4D8               	btfsc	status,2,c
  3554  000C0A  EF09  F006         	goto	u871
  3555  000C0E  EF0B  F006         	goto	u870
  3556  000C12                     u871:
  3557  000C12  EF16  F006         	goto	l2089
  3558  000C16                     u870:
  3559  000C16                     
  3560                           ; BSR set to: 0
  3561                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3562  000C16  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3563  000C1A  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3564  000C1E  C079  FFDF         	movff	sprintf@c,indf2
  3565  000C22                     
  3566                           ; BSR set to: 0
  3567  000C22  0100               	movlb	0	; force () banked
  3568  000C24  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3569  000C26  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3570                           
  3571                           ;doprnt.c: 559: continue;
  3572  000C28  EFDC  F006         	goto	l2135
  3573  000C2C                     l2089:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3577  000C2C  0E00               	movlw	0
  3578  000C2E  0100               	movlb	0	; force () banked
  3579  000C30  6F75               	movwf	sprintf@flag& (0+255),b
  3580  000C32                     
  3581                           ; BSR set to: 0
  3582  000C32  C06E  FFF6         	movff	sprintf@f,tblptrl
  3583  000C36  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3584  000C3A  0100               	movlb	0	; force () banked
  3585  000C3C  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3586  000C3E  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3587  000C40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3588  000C40  6AF8               	clrf	tblptru,c
  3589  000C42                     	endif
  3590  000C42                     	if	0	;tblptru may be non-zero
  3591  000C42                     	endif
  3592  000C42  0008               	tblrd		*
  3593  000C44  CFF5 F079          	movff	tablat,sprintf@c
  3594  000C48  0100               	movlb	0	; force () banked
  3595  000C4A  5179               	movf	sprintf@c& (0+255),w,b
  3596                           
  3597                           ; Switch size 1, requested type "simple"
  3598                           ; Number of cases is 3, Range of values is 0 to 105
  3599                           ; switch strategies available:
  3600                           ; Name         Instructions Cycles
  3601                           ; simple_byte           10     6 (average)
  3602                           ;	Chosen strategy is simple_byte
  3603  000C4C  0A00               	xorlw	0	; case 0
  3604  000C4E  B4D8               	btfsc	status,2,c
  3605  000C50  EFF0  F006         	goto	l2137
  3606  000C54  0A64               	xorlw	100	; case 100
  3607  000C56  B4D8               	btfsc	status,2,c
  3608  000C58  EF34  F006         	goto	l2095
  3609  000C5C  0A0D               	xorlw	13	; case 105
  3610  000C5E  B4D8               	btfsc	status,2,c
  3611  000C60  EF34  F006         	goto	l2095
  3612  000C64  EFDC  F006         	goto	l2135
  3613  000C68                     l2095:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3617  000C68  C073  FFD9         	movff	sprintf@ap,fsr2l
  3618  000C6C  C074  FFDA         	movff	sprintf@ap+1,fsr2h
  3619  000C70  CFDE F077          	movff	postinc2,sprintf@val
  3620  000C74  CFDD F078          	movff	postdec2,sprintf@val+1
  3621  000C78                     
  3622                           ; BSR set to: 0
  3623  000C78  0E02               	movlw	2
  3624  000C7A  0100               	movlb	0	; force () banked
  3625  000C7C  2773               	addwf	sprintf@ap& (0+255),f,b
  3626  000C7E  0E00               	movlw	0
  3627  000C80  2374               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3628  000C82                     
  3629                           ; BSR set to: 0
  3630                           ;doprnt.c: 1287: if((int)val < 0) {
  3631  000C82  0100               	movlb	0	; force () banked
  3632  000C84  BF78               	btfsc	(sprintf@val+1)& (0+255),7,b
  3633  000C86  EF49  F006         	goto	u880
  3634  000C8A  EF47  F006         	goto	u881
  3635  000C8E                     u881:
  3636  000C8E  EF51  F006         	goto	l2105
  3637  000C92                     u880:
  3638  000C92                     
  3639                           ; BSR set to: 0
  3640                           ;doprnt.c: 1288: flag |= 0x03;
  3641  000C92  0E03               	movlw	3
  3642  000C94  0100               	movlb	0	; force () banked
  3643  000C96  1375               	iorwf	sprintf@flag& (0+255),f,b
  3644  000C98                     
  3645                           ; BSR set to: 0
  3646                           ;doprnt.c: 1289: val = -val;
  3647  000C98  0100               	movlb	0	; force () banked
  3648  000C9A  6D77               	negf	sprintf@val& (0+255),b
  3649  000C9C  1F78               	comf	(sprintf@val+1)& (0+255),f,b
  3650  000C9E  B0D8               	btfsc	status,0,c
  3651  000CA0  2B78               	incf	(sprintf@val+1)& (0+255),f,b
  3652  000CA2                     l2105:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3656  000CA2  0E01               	movlw	1
  3657  000CA4  0100               	movlb	0	; force () banked
  3658  000CA6  6F79               	movwf	sprintf@c& (0+255),b
  3659  000CA8                     
  3660                           ; BSR set to: 0
  3661  000CA8  0E05               	movlw	5
  3662  000CAA  0100               	movlb	0	; force () banked
  3663  000CAC  1979               	xorwf	sprintf@c& (0+255),w,b
  3664  000CAE  A4D8               	btfss	status,2,c
  3665  000CB0  EF5C  F006         	goto	u891
  3666  000CB4  EF5E  F006         	goto	u890
  3667  000CB8                     u891:
  3668  000CB8  EF60  F006         	goto	l2111
  3669  000CBC                     u890:
  3670  000CBC  EF88  F006         	goto	l2119
  3671  000CC0                     l2111:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;doprnt.c: 1332: if(val < dpowers[c])
  3675  000CC0  0100               	movlb	0	; force () banked
  3676  000CC2  5179               	movf	sprintf@c& (0+255),w,b
  3677  000CC4  0D02               	mullw	2
  3678  000CC6  0E11               	movlw	low _dpowers
  3679  000CC8  24F3               	addwf	243,w,c
  3680  000CCA  6EF6               	movwf	tblptrl,c
  3681  000CCC  0E06               	movlw	high _dpowers
  3682  000CCE  20F4               	addwfc	244,w,c
  3683  000CD0  6EF7               	movwf	tblptrh,c
  3684  000CD2                     	if	1	;There are 3 active tblptr bytes
  3685  000CD2  6AF8               	clrf	tblptru,c
  3686  000CD4  0E00               	movlw	low (__mediumconst shr (0+16))
  3687  000CD6  22F8               	addwfc	tblptru,f,c
  3688  000CD8                     	endif
  3689  000CD8  0009               	tblrd		*+
  3690  000CDA  50F5               	movf	tablat,w,c
  3691  000CDC  0100               	movlb	0	; force () banked
  3692  000CDE  5D77               	subwf	sprintf@val& (0+255),w,b
  3693  000CE0  0009               	tblrd		*+
  3694  000CE2  50F5               	movf	tablat,w,c
  3695  000CE4  5978               	subwfb	(sprintf@val+1)& (0+255),w,b
  3696  000CE6  B0D8               	btfsc	status,0,c
  3697  000CE8  EF78  F006         	goto	u901
  3698  000CEC  EF7A  F006         	goto	u900
  3699  000CF0                     u901:
  3700  000CF0  EF7C  F006         	goto	l2115
  3701  000CF4                     u900:
  3702  000CF4  EF88  F006         	goto	l2119
  3703  000CF8                     l2115:
  3704                           
  3705                           ; BSR set to: 0
  3706  000CF8  0100               	movlb	0	; force () banked
  3707  000CFA  2B79               	incf	sprintf@c& (0+255),f,b
  3708  000CFC                     
  3709                           ; BSR set to: 0
  3710  000CFC  0E05               	movlw	5
  3711  000CFE  0100               	movlb	0	; force () banked
  3712  000D00  1979               	xorwf	sprintf@c& (0+255),w,b
  3713  000D02  A4D8               	btfss	status,2,c
  3714  000D04  EF86  F006         	goto	u911
  3715  000D08  EF88  F006         	goto	u910
  3716  000D0C                     u911:
  3717  000D0C  EF60  F006         	goto	l2111
  3718  000D10                     u910:
  3719  000D10                     l2119:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3723  000D10  C075  F072         	movff	sprintf@flag,??_sprintf
  3724  000D14  0E03               	movlw	3
  3725  000D16  0100               	movlb	0	; force () banked
  3726  000D18  1772               	andwf	??_sprintf& (0+255),f,b
  3727  000D1A  B4D8               	btfsc	status,2,c
  3728  000D1C  EF92  F006         	goto	u921
  3729  000D20  EF94  F006         	goto	u920
  3730  000D24                     u921:
  3731  000D24  EF9D  F006         	goto	l2125
  3732  000D28                     u920:
  3733  000D28                     
  3734                           ; BSR set to: 0
  3735                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3736  000D28  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3737  000D2C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3738  000D30  0E2D               	movlw	45
  3739  000D32  6EDF               	movwf	indf2,c
  3740  000D34                     
  3741                           ; BSR set to: 0
  3742  000D34  0100               	movlb	0	; force () banked
  3743  000D36  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3744  000D38  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3745  000D3A                     l2125:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3749  000D3A  C079  F076         	movff	sprintf@c,sprintf@prec
  3750                           
  3751                           ;doprnt.c: 1500: while(prec--) {
  3752  000D3E  EFD2  F006         	goto	l2133
  3753  000D42                     l2127:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3757  000D42  0100               	movlb	0	; force () banked
  3758  000D44  5176               	movf	sprintf@prec& (0+255),w,b
  3759  000D46  0D02               	mullw	2
  3760  000D48  0E11               	movlw	low _dpowers
  3761  000D4A  24F3               	addwf	243,w,c
  3762  000D4C  6EF6               	movwf	tblptrl,c
  3763  000D4E  0E06               	movlw	high _dpowers
  3764  000D50  20F4               	addwfc	244,w,c
  3765  000D52  6EF7               	movwf	tblptrh,c
  3766  000D54                     	if	1	;There are 3 active tblptr bytes
  3767  000D54  6AF8               	clrf	tblptru,c
  3768  000D56  0E00               	movlw	low (__mediumconst shr (0+16))
  3769  000D58  22F8               	addwfc	tblptru,f,c
  3770  000D5A                     	endif
  3771  000D5A  0009               	tblrd		*+
  3772  000D5C  CFF5 F062          	movff	tablat,___lwdiv@divisor
  3773  000D60  000A               	tblrd		*-
  3774  000D62  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  3775  000D66  C077  F060         	movff	sprintf@val,___lwdiv@dividend
  3776  000D6A  C078  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  3777  000D6E  EC96  F00A         	call	___lwdiv	;wreg free
  3778  000D72  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  3779  000D76  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  3780  000D7A  0E00               	movlw	0
  3781  000D7C  0100               	movlb	0	; force () banked
  3782  000D7E  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  3783  000D80  0E0A               	movlw	10
  3784  000D82  6F69               	movwf	___lwmod@divisor& (0+255),b
  3785  000D84  ECAB  F00B         	call	___lwmod	;wreg free
  3786  000D88  0100               	movlb	0	; force () banked
  3787  000D8A  5167               	movf	?___lwmod& (0+255),w,b
  3788  000D8C  0F30               	addlw	48
  3789  000D8E  0100               	movlb	0	; force () banked
  3790  000D90  6F79               	movwf	sprintf@c& (0+255),b
  3791  000D92                     
  3792                           ; BSR set to: 0
  3793                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3794  000D92  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3795  000D96  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3796  000D9A  C079  FFDF         	movff	sprintf@c,indf2
  3797  000D9E                     
  3798                           ; BSR set to: 0
  3799  000D9E  0100               	movlb	0	; force () banked
  3800  000DA0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3801  000DA2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3802  000DA4                     l2133:
  3803                           
  3804                           ; BSR set to: 0
  3805  000DA4  0100               	movlb	0	; force () banked
  3806  000DA6  0776               	decf	sprintf@prec& (0+255),f,b
  3807  000DA8  2976               	incf	sprintf@prec& (0+255),w,b
  3808  000DAA  A4D8               	btfss	status,2,c
  3809  000DAC  EFDA  F006         	goto	u931
  3810  000DB0  EFDC  F006         	goto	u930
  3811  000DB4                     u931:
  3812  000DB4  EFA1  F006         	goto	l2127
  3813  000DB8                     u930:
  3814  000DB8                     l2135:
  3815                           
  3816                           ; BSR set to: 0
  3817  000DB8  C06E  FFF6         	movff	sprintf@f,tblptrl
  3818  000DBC  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3819  000DC0  0100               	movlb	0	; force () banked
  3820  000DC2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3821  000DC4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3822  000DC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3823  000DC6  6AF8               	clrf	tblptru,c
  3824  000DC8                     	endif
  3825  000DC8                     	if	0	;tblptru may be non-zero
  3826  000DC8                     	endif
  3827  000DC8  0008               	tblrd		*
  3828  000DCA  CFF5 F079          	movff	tablat,sprintf@c
  3829  000DCE  0100               	movlb	0	; force () banked
  3830  000DD0  5179               	movf	sprintf@c& (0+255),w,b
  3831  000DD2  A4D8               	btfss	status,2,c
  3832  000DD4  EFEE  F006         	goto	u941
  3833  000DD8  EFF0  F006         	goto	u940
  3834  000DDC                     u941:
  3835  000DDC  EF01  F006         	goto	l2083
  3836  000DE0                     u940:
  3837  000DE0                     l2137:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;doprnt.c: 1564: *sp = 0;
  3841  000DE0  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3842  000DE4  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3843  000DE8  0E00               	movlw	0
  3844  000DEA  6EDF               	movwf	indf2,c
  3845  000DEC                     
  3846                           ; BSR set to: 0
  3847                           ;doprnt.c: 1566: return 0;
  3848  000DEC  0E00               	movlw	0
  3849  000DEE  0100               	movlb	0	; force () banked
  3850  000DF0  6F6D               	movwf	(?_sprintf+1)& (0+255),b
  3851  000DF2  0E00               	movlw	0
  3852  000DF4  6F6C               	movwf	?_sprintf& (0+255),b
  3853  000DF6                     
  3854                           ; BSR set to: 0
  3855  000DF6  0012               	return		;funcret
  3856  000DF8                     __end_of_sprintf:
  3857                           	opt callstack 0
  3858                           
  3859 ;; *************** function ___lwmod *****************
  3860 ;; Defined at:
  3861 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  dividend        2    7[BANK0 ] unsigned int 
  3864 ;;  divisor         2    9[BANK0 ] unsigned int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  counter         1   11[BANK0 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2    7[BANK0 ] unsigned int 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3876 ;;      Params:         0       4       0       0       0       0       0
  3877 ;;      Locals:         0       1       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0
  3879 ;;      Totals:         0       5       0       0       0       0       0
  3880 ;;Total ram usage:        5 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_sprintf
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text20
  3891  001756                     __ptext20:
  3892                           	opt callstack 0
  3893  001756                     ___lwmod:
  3894                           	opt callstack 28
  3895  001756  0100               	movlb	0	; () banked
  3896  001758  5169               	movf	___lwmod@divisor& (0+255),w,b
  3897  00175A  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3898  00175C  B4D8               	btfsc	status,2,c
  3899  00175E  EFB3  F00B         	goto	u811
  3900  001762  EFB5  F00B         	goto	u810
  3901  001766                     u811:
  3902  001766  EFD9  F00B         	goto	l823
  3903  00176A                     u810:
  3904  00176A                     
  3905                           ; BSR set to: 0
  3906  00176A  0E01               	movlw	1
  3907  00176C  6F6B               	movwf	___lwmod@counter& (0+255),b
  3908  00176E  EFBD  F00B         	goto	l2045
  3909  001772                     l2043:
  3910                           
  3911                           ; BSR set to: 0
  3912  001772  90D8               	bcf	status,0,c
  3913  001774  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  3914  001776  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3915  001778  2B6B               	incf	___lwmod@counter& (0+255),f,b
  3916  00177A                     l2045:
  3917                           
  3918                           ; BSR set to: 0
  3919  00177A  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3920  00177C  EFC2  F00B         	goto	u821
  3921  001780  EFC4  F00B         	goto	u820
  3922  001784                     u821:
  3923  001784  EFB9  F00B         	goto	l2043
  3924  001788                     u820:
  3925  001788                     l2047:
  3926                           
  3927                           ; BSR set to: 0
  3928  001788  5169               	movf	___lwmod@divisor& (0+255),w,b
  3929  00178A  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  3930  00178C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3931  00178E  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3932  001790  A0D8               	btfss	status,0,c
  3933  001792  EFCD  F00B         	goto	u831
  3934  001796  EFCF  F00B         	goto	u830
  3935  00179A                     u831:
  3936  00179A  EFD3  F00B         	goto	l2051
  3937  00179E                     u830:
  3938  00179E                     
  3939                           ; BSR set to: 0
  3940  00179E  5169               	movf	___lwmod@divisor& (0+255),w,b
  3941  0017A0  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  3942  0017A2  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3943  0017A4  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3944  0017A6                     l2051:
  3945                           
  3946                           ; BSR set to: 0
  3947  0017A6  90D8               	bcf	status,0,c
  3948  0017A8  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3949  0017AA  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  3950  0017AC                     
  3951                           ; BSR set to: 0
  3952  0017AC  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  3953  0017AE  EFC4  F00B         	goto	l2047
  3954  0017B2                     l823:
  3955                           
  3956                           ; BSR set to: 0
  3957  0017B2  C067  F067         	movff	___lwmod@dividend,?___lwmod
  3958  0017B6  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  3959  0017BA                     
  3960                           ; BSR set to: 0
  3961  0017BA  0012               	return		;funcret
  3962  0017BC                     __end_of___lwmod:
  3963                           	opt callstack 0
  3964                           
  3965 ;; *************** function ___lwdiv *****************
  3966 ;; Defined at:
  3967 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  dividend        2    0[BANK0 ] unsigned int 
  3970 ;;  divisor         2    2[BANK0 ] unsigned int 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  quotient        2    4[BANK0 ] unsigned int 
  3973 ;;  counter         1    6[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    0[BANK0 ] unsigned int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3983 ;;      Params:         0       4       0       0       0       0       0
  3984 ;;      Locals:         0       3       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0
  3986 ;;      Totals:         0       7       0       0       0       0       0
  3987 ;;Total ram usage:        7 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_sprintf
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text21
  3998  00152C                     __ptext21:
  3999                           	opt callstack 0
  4000  00152C                     ___lwdiv:
  4001                           	opt callstack 28
  4002  00152C  0E00               	movlw	0
  4003  00152E  0100               	movlb	0	; () banked
  4004  001530  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4005  001532  0E00               	movlw	0
  4006  001534  6F64               	movwf	___lwdiv@quotient& (0+255),b
  4007  001536                     
  4008                           ; BSR set to: 0
  4009  001536  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4010  001538  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4011  00153A  B4D8               	btfsc	status,2,c
  4012  00153C  EFA2  F00A         	goto	u781
  4013  001540  EFA4  F00A         	goto	u780
  4014  001544                     u781:
  4015  001544  EFCC  F00A         	goto	l813
  4016  001548                     u780:
  4017  001548                     
  4018                           ; BSR set to: 0
  4019  001548  0E01               	movlw	1
  4020  00154A  6F66               	movwf	___lwdiv@counter& (0+255),b
  4021  00154C  EFAC  F00A         	goto	l2025
  4022  001550                     l2023:
  4023                           
  4024                           ; BSR set to: 0
  4025  001550  90D8               	bcf	status,0,c
  4026  001552  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  4027  001554  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4028  001556  2B66               	incf	___lwdiv@counter& (0+255),f,b
  4029  001558                     l2025:
  4030                           
  4031                           ; BSR set to: 0
  4032  001558  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4033  00155A  EFB1  F00A         	goto	u791
  4034  00155E  EFB3  F00A         	goto	u790
  4035  001562                     u791:
  4036  001562  EFA8  F00A         	goto	l2023
  4037  001566                     u790:
  4038  001566                     l2027:
  4039                           
  4040                           ; BSR set to: 0
  4041  001566  90D8               	bcf	status,0,c
  4042  001568  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  4043  00156A  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4044  00156C                     
  4045                           ; BSR set to: 0
  4046  00156C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4047  00156E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  4048  001570  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4049  001572  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4050  001574  A0D8               	btfss	status,0,c
  4051  001576  EFBF  F00A         	goto	u801
  4052  00157A  EFC1  F00A         	goto	u800
  4053  00157E                     u801:
  4054  00157E  EFC6  F00A         	goto	l2035
  4055  001582                     u800:
  4056  001582                     
  4057                           ; BSR set to: 0
  4058  001582  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4059  001584  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  4060  001586  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4061  001588  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4062  00158A                     
  4063                           ; BSR set to: 0
  4064  00158A  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  4065  00158C                     l2035:
  4066                           
  4067                           ; BSR set to: 0
  4068  00158C  90D8               	bcf	status,0,c
  4069  00158E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4070  001590  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  4071  001592                     
  4072                           ; BSR set to: 0
  4073  001592  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  4074  001594  EFB3  F00A         	goto	l2027
  4075  001598                     l813:
  4076                           
  4077                           ; BSR set to: 0
  4078  001598  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  4079  00159C  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4080  0015A0                     
  4081                           ; BSR set to: 0
  4082  0015A0  0012               	return		;funcret
  4083  0015A2                     __end_of___lwdiv:
  4084                           	opt callstack 0
  4085                           
  4086 ;; *************** function _lcd_cacheCurseur *****************
  4087 ;; Defined at:
  4088 ;;		line 401 in file "Lcd4Lignes.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4102 ;;      Params:         0       0       0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0
  4105 ;;      Totals:         0       0       0       0       0       0       0
  4106 ;;Total ram usage:        0 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    4
  4109 ;; This function calls:
  4110 ;;		_lcd_wrCom
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;;		_affichePerdu
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text22
  4118  001B44                     __ptext22:
  4119                           	opt callstack 0
  4120  001B44                     _lcd_cacheCurseur:
  4121                           	opt callstack 26
  4122  001B44                     
  4123                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  4124  001B44  0E0C               	movlw	12
  4125  001B46  EC40  F00B         	call	_lcd_wrCom
  4126  001B4A  0012               	return		;funcret
  4127  001B4C                     __end_of_lcd_cacheCurseur:
  4128                           	opt callstack 0
  4129                           
  4130 ;; *************** function _afficheAliens *****************
  4131 ;; Defined at:
  4132 ;;		line 123 in file "main.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4146 ;;      Params:         0       0       0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0
  4149 ;;      Totals:         0       0       0       0       0       0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    6
  4153 ;; This function calls:
  4154 ;;		_lcd_effaceAffichage
  4155 ;;		_lcd_gotoXY
  4156 ;;		_lcd_putMessage
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text23
  4163  0017BC                     __ptext23:
  4164                           	opt callstack 0
  4165  0017BC                     _afficheAliens:
  4166                           	opt callstack 24
  4167  0017BC                     
  4168                           ;main.c: 125: lcd_effaceAffichage();
  4169  0017BC  EC97  F00D         	call	_lcd_effaceAffichage	;wreg free
  4170  0017C0                     
  4171                           ;main.c: 126: lcd_putMessage(m_aliens[0]);
  4172  0017C0  0E40               	movlw	low _m_aliens
  4173  0017C2  0100               	movlb	0	; force () banked
  4174  0017C4  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4175  0017C6  0E01               	movlw	high _m_aliens
  4176  0017C8  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4177  0017CA  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4178  0017CC  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4179  0017CE  A4D8               	btfss	status,2,c
  4180  0017D0  0E20               	movlw	32
  4181  0017D2  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4182  0017D4  EC08  F009         	call	_lcd_putMessage	;wreg free
  4183  0017D8                     
  4184                           ;main.c: 127: lcd_gotoXY(1,2);
  4185  0017D8  0E02               	movlw	2
  4186  0017DA  0100               	movlb	0	; force () banked
  4187  0017DC  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4188  0017DE  0E01               	movlw	1
  4189  0017E0  ECD1  F00A         	call	_lcd_gotoXY
  4190                           
  4191                           ;main.c: 128: lcd_putMessage(m_aliens[1]);
  4192  0017E4  0E55               	movlw	low (_m_aliens+21)
  4193  0017E6  0100               	movlb	0	; force () banked
  4194  0017E8  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4195  0017EA  0E01               	movlw	high (_m_aliens+21)
  4196  0017EC  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4197  0017EE  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4198  0017F0  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4199  0017F2  A4D8               	btfss	status,2,c
  4200  0017F4  0E20               	movlw	32
  4201  0017F6  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4202  0017F8  EC08  F009         	call	_lcd_putMessage	;wreg free
  4203  0017FC                     
  4204                           ;main.c: 129: lcd_gotoXY(1,3);
  4205  0017FC  0E03               	movlw	3
  4206  0017FE  0100               	movlb	0	; force () banked
  4207  001800  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4208  001802  0E01               	movlw	1
  4209  001804  ECD1  F00A         	call	_lcd_gotoXY
  4210  001808                     
  4211                           ;main.c: 130: lcd_putMessage(m_aliens[2]);
  4212  001808  0E6A               	movlw	low (_m_aliens+42)
  4213  00180A  0100               	movlb	0	; force () banked
  4214  00180C  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4215  00180E  0E01               	movlw	high (_m_aliens+42)
  4216  001810  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4217  001812  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4218  001814  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4219  001816  A4D8               	btfss	status,2,c
  4220  001818  0E20               	movlw	32
  4221  00181A  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4222  00181C  EC08  F009         	call	_lcd_putMessage	;wreg free
  4223  001820  0012               	return		;funcret
  4224  001822                     __end_of_afficheAliens:
  4225                           	opt callstack 0
  4226                           
  4227 ;; *************** function _lcd_putMessage *****************
  4228 ;; Defined at:
  4229 ;;		line 387 in file "Lcd4Lignes.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  4232 ;;		 -> affichePerdu@buffer(50), m_aliens(84), main@bufferNiveau(50), niveau1(10), 
  4233 ;;		 -> accueil(15), 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  j               1   13[BANK0 ] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         0       3       0       0       0       0       0
  4246 ;;      Locals:         0       1       0       0       0       0       0
  4247 ;;      Temps:          0       5       0       0       0       0       0
  4248 ;;      Totals:         0       9       0       0       0       0       0
  4249 ;;Total ram usage:        9 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    5
  4252 ;; This function calls:
  4253 ;;		_lcd_ecritChar
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;;		_afficheAliens
  4257 ;;		_affichePerdu
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text24
  4262  001210                     __ptext24:
  4263                           	opt callstack 0
  4264  001210                     _lcd_putMessage:
  4265                           	opt callstack 25
  4266  001210                     
  4267                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4268  001210  0E00               	movlw	0
  4269  001212  0100               	movlb	0	; force () banked
  4270  001214  6F6D               	movwf	lcd_putMessage@j& (0+255),b
  4271  001216  EF35  F009         	goto	l2079
  4272  00121A                     l2075:
  4273                           
  4274                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4275  00121A  0100               	movlb	0	; force () banked
  4276  00121C  516D               	movf	lcd_putMessage@j& (0+255),w,b
  4277  00121E  0100               	movlb	0	; force () banked
  4278  001220  6F68               	movwf	??_lcd_putMessage& (0+255),b
  4279  001222  6B69               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4280  001224  5168               	movf	??_lcd_putMessage& (0+255),w,b
  4281  001226  0100               	movlb	0	; force () banked
  4282  001228  2565               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4283  00122A  0100               	movlb	0	; force () banked
  4284  00122C  6F6A               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4285  00122E  5169               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4286  001230  0100               	movlb	0	; force () banked
  4287  001232  2166               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4288  001234  0100               	movlb	0	; force () banked
  4289  001236  6F6B               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4290  001238  0E00               	movlw	0
  4291  00123A  0100               	movlb	0	; force () banked
  4292  00123C  2167               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4293  00123E  0100               	movlb	0	; force () banked
  4294  001240  6F6C               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4295  001242  C06A  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4296  001246  C06B  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4297  00124A  C06C  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4298  00124E  BAF8               	btfsc	tblptru,5,c
  4299  001250  D003               	bra	u847
  4300  001252  0008               	tblrd		*
  4301  001254  50F5               	movf	tablat,w,c
  4302  001256  D005               	bra	u840
  4303  001258                     u847:
  4304  001258  CFF6 FFE9          	movff	tblptrl,fsr0l
  4305  00125C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4306  001260  50EF               	movf	indf0,w,c
  4307  001262                     u840:
  4308  001262  EC95  F00C         	call	_lcd_ecritChar
  4309  001266  0100               	movlb	0	; force () banked
  4310  001268  2B6D               	incf	lcd_putMessage@j& (0+255),f,b
  4311  00126A                     l2079:
  4312                           
  4313                           ; BSR set to: 0
  4314  00126A  0100               	movlb	0	; force () banked
  4315  00126C  516D               	movf	lcd_putMessage@j& (0+255),w,b
  4316  00126E  0100               	movlb	0	; force () banked
  4317  001270  6F68               	movwf	??_lcd_putMessage& (0+255),b
  4318  001272  6B69               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4319  001274  5168               	movf	??_lcd_putMessage& (0+255),w,b
  4320  001276  0100               	movlb	0	; force () banked
  4321  001278  2565               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4322  00127A  0100               	movlb	0	; force () banked
  4323  00127C  6F6A               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4324  00127E  5169               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4325  001280  0100               	movlb	0	; force () banked
  4326  001282  2166               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4327  001284  0100               	movlb	0	; force () banked
  4328  001286  6F6B               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4329  001288  0E00               	movlw	0
  4330  00128A  0100               	movlb	0	; force () banked
  4331  00128C  2167               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4332  00128E  0100               	movlb	0	; force () banked
  4333  001290  6F6C               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4334  001292  C06A  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4335  001296  C06B  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4336  00129A  C06C  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4337  00129E  BAF8               	btfsc	tblptru,5,c
  4338  0012A0  D003               	bra	u857
  4339  0012A2  0008               	tblrd		*
  4340  0012A4  50F5               	movf	tablat,w,c
  4341  0012A6  D005               	bra	u850
  4342  0012A8                     u857:
  4343  0012A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4344  0012AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4345  0012B0  50EF               	movf	indf0,w,c
  4346  0012B2                     u850:
  4347  0012B2  0900               	iorlw	0
  4348  0012B4  A4D8               	btfss	status,2,c
  4349  0012B6  EF5F  F009         	goto	u861
  4350  0012BA  EF61  F009         	goto	u860
  4351  0012BE                     u861:
  4352  0012BE  EF0D  F009         	goto	l2075
  4353  0012C2                     u860:
  4354  0012C2  0012               	return		;funcret
  4355  0012C4                     __end_of_lcd_putMessage:
  4356                           	opt callstack 0
  4357                           
  4358 ;; *************** function _lcd_ecritChar *****************
  4359 ;; Defined at:
  4360 ;;		line 359 in file "Lcd4Lignes.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  car             1    wreg     unsigned char 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  car             1    3[BANK0 ] unsigned char 
  4365 ;;  posRam          1    4[BANK0 ] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4375 ;;      Params:         0       0       0       0       0       0       0
  4376 ;;      Locals:         0       2       0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0
  4378 ;;      Totals:         0       2       0       0       0       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    4
  4382 ;; This function calls:
  4383 ;;		_lcd_wrCom
  4384 ;;		_lcd_wrData
  4385 ;; This function is called by:
  4386 ;;		_deplace
  4387 ;;		_feu
  4388 ;;		_lcd_putMessage
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text25
  4393  00192A                     __ptext25:
  4394                           	opt callstack 0
  4395  00192A                     _lcd_ecritChar:
  4396                           	opt callstack 25
  4397                           
  4398                           ;incstack = 0
  4399                           ;lcd_ecritChar@car stored from wreg
  4400  00192A  0100               	movlb	0	; force () banked
  4401  00192C  6F63               	movwf	lcd_ecritChar@car& (0+255),b
  4402  00192E                     
  4403                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4404  00192E  0100               	movlb	0	; force () banked
  4405  001930  5163               	movf	lcd_ecritChar@car& (0+255),w,b
  4406  001932  EC29  F00D         	call	_lcd_wrData
  4407  001936  0100               	movlb	0	; force () banked
  4408  001938  6F64               	movwf	lcd_ecritChar@posRam& (0+255),b
  4409                           
  4410                           ;Lcd4Lignes.c: 364: switch(posRam)
  4411  00193A  EFAE  F00C         	goto	l2003
  4412  00193E                     l1995:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4416  00193E  0EC0               	movlw	192
  4417  001940  EC40  F00B         	call	_lcd_wrCom
  4418                           
  4419                           ;Lcd4Lignes.c: 368: break;
  4420  001944  EFBE  F00C         	goto	l281
  4421  001948                     l1997:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4425  001948  0E94               	movlw	148
  4426  00194A  EC40  F00B         	call	_lcd_wrCom
  4427                           
  4428                           ;Lcd4Lignes.c: 371: break;
  4429  00194E  EFBE  F00C         	goto	l281
  4430  001952                     l1999:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4434  001952  0ED4               	movlw	212
  4435  001954  EC40  F00B         	call	_lcd_wrCom
  4436                           
  4437                           ;Lcd4Lignes.c: 374: break;
  4438  001958  EFBE  F00C         	goto	l281
  4439  00195C                     l2003:
  4440                           
  4441                           ; BSR set to: 0
  4442  00195C  0100               	movlb	0	; force () banked
  4443  00195E  5164               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4444                           
  4445                           ; Switch size 1, requested type "simple"
  4446                           ; Number of cases is 3, Range of values is 148 to 212
  4447                           ; switch strategies available:
  4448                           ; Name         Instructions Cycles
  4449                           ; simple_byte           10     6 (average)
  4450                           ;	Chosen strategy is simple_byte
  4451  001960  0A94               	xorlw	148	; case 148
  4452  001962  B4D8               	btfsc	status,2,c
  4453  001964  EF9F  F00C         	goto	l1995
  4454  001968  0A54               	xorlw	84	; case 192
  4455  00196A  B4D8               	btfsc	status,2,c
  4456  00196C  EFA9  F00C         	goto	l1999
  4457  001970  0A14               	xorlw	20	; case 212
  4458  001972  B4D8               	btfsc	status,2,c
  4459  001974  EFA4  F00C         	goto	l1997
  4460  001978  EFBE  F00C         	goto	l281
  4461  00197C                     l281:
  4462  00197C  0012               	return		;funcret
  4463  00197E                     __end_of_lcd_ecritChar:
  4464                           	opt callstack 0
  4465                           
  4466 ;; *************** function _lcd_wrData *****************
  4467 ;; Defined at:
  4468 ;;		line 188 in file "Lcd4Lignes.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  caractere       1    wreg     unsigned char 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  caractere       1    2[BANK0 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4482 ;;      Params:         0       0       0       0       0       0       0
  4483 ;;      Locals:         0       1       0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0
  4485 ;;      Totals:         0       1       0       0       0       0       0
  4486 ;;Total ram usage:        1 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    3
  4489 ;; This function calls:
  4490 ;;		_lcd_busy
  4491 ;;		_lcd_ecrireDonnees
  4492 ;;		_lcd_strobeEnableBit
  4493 ;; This function is called by:
  4494 ;;		_lcd_ecritChar
  4495 ;;		_lcd_initCGRam
  4496 ;;		_lcd_effaceChar
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text26
  4501  001A52                     __ptext26:
  4502                           	opt callstack 0
  4503  001A52                     _lcd_wrData:
  4504                           	opt callstack 25
  4505                           
  4506                           ;incstack = 0
  4507                           ;lcd_wrData@caractere stored from wreg
  4508  001A52  0100               	movlb	0	; force () banked
  4509  001A54  6F62               	movwf	lcd_wrData@caractere& (0+255),b
  4510  001A56                     
  4511                           ;Lcd4Lignes.c: 190: lcd_busy();
  4512  001A56  EC08  F00D         	call	_lcd_busy	;wreg free
  4513  001A5A                     
  4514                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4515  001A5A  0E00               	movlw	0
  4516  001A5C  6E95               	movwf	149,c	;volatile
  4517  001A5E                     
  4518                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4519  001A5E  8080               	bsf	128,0,c	;volatile
  4520  001A60                     
  4521                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4522  001A60  9280               	bcf	128,1,c	;volatile
  4523  001A62                     
  4524                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4525  001A62  0100               	movlb	0	; force () banked
  4526  001A64  3962               	swapf	lcd_wrData@caractere& (0+255),w,b
  4527  001A66  0B0F               	andlw	15
  4528  001A68  EC81  F00D         	call	_lcd_ecrireDonnees
  4529  001A6C                     
  4530                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4531  001A6C  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4532  001A70                     
  4533                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4534  001A70  0100               	movlb	0	; force () banked
  4535  001A72  5162               	movf	lcd_wrData@caractere& (0+255),w,b
  4536  001A74  EC81  F00D         	call	_lcd_ecrireDonnees
  4537  001A78                     
  4538                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4539  001A78  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4540  001A7C                     
  4541                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4542  001A7C  0E0F               	movlw	15
  4543  001A7E  6E95               	movwf	149,c	;volatile
  4544  001A80                     
  4545                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4546                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4547  001A80  EC08  F00D         	call	_lcd_busy	;wreg free
  4548  001A84  0012               	return		;funcret
  4549  001A86                     __end_of_lcd_wrData:
  4550                           	opt callstack 0
  4551                           
  4552 ;; *************** function _lcd_gotoXY *****************
  4553 ;; Defined at:
  4554 ;;		line 314 in file "Lcd4Lignes.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  x               1    wreg     unsigned char 
  4557 ;;  y               1    3[BANK0 ] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  x               1    4[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:         0       1       0       0       0       0       0
  4570 ;;      Locals:         0       1       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:         0       2       0       0       0       0       0
  4573 ;;Total ram usage:        2 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		_lcd_wrCom
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;;		_afficheAliens
  4581 ;;		_deplace
  4582 ;;		_feu
  4583 ;;		_lcd_effaceLigne
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text27
  4588  0015A2                     __ptext27:
  4589                           	opt callstack 0
  4590  0015A2                     _lcd_gotoXY:
  4591                           	opt callstack 26
  4592                           
  4593                           ;incstack = 0
  4594                           ;lcd_gotoXY@x stored from wreg
  4595  0015A2  0100               	movlb	0	; force () banked
  4596  0015A4  6F64               	movwf	lcd_gotoXY@x& (0+255),b
  4597  0015A6                     
  4598                           ;Lcd4Lignes.c: 316: switch(y)
  4599  0015A6  EFF5  F00A         	goto	l2071
  4600  0015AA                     l2061:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4604  0015AA  0100               	movlb	0	; force () banked
  4605  0015AC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4606  0015AE  0F7F               	addlw	127
  4607  0015B0  0980               	iorlw	128
  4608  0015B2  EC40  F00B         	call	_lcd_wrCom
  4609                           
  4610                           ;Lcd4Lignes.c: 320: break;
  4611  0015B6  EF09  F00B         	goto	l270
  4612  0015BA                     l2063:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4616  0015BA  0100               	movlb	0	; force () banked
  4617  0015BC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4618  0015BE  0FBF               	addlw	191
  4619  0015C0  0980               	iorlw	128
  4620  0015C2  EC40  F00B         	call	_lcd_wrCom
  4621                           
  4622                           ;Lcd4Lignes.c: 323: break;
  4623  0015C6  EF09  F00B         	goto	l270
  4624  0015CA                     l2065:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4628  0015CA  0100               	movlb	0	; force () banked
  4629  0015CC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4630  0015CE  0F93               	addlw	147
  4631  0015D0  0980               	iorlw	128
  4632  0015D2  EC40  F00B         	call	_lcd_wrCom
  4633                           
  4634                           ;Lcd4Lignes.c: 326: break;
  4635  0015D6  EF09  F00B         	goto	l270
  4636  0015DA                     l2067:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4640  0015DA  0100               	movlb	0	; force () banked
  4641  0015DC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4642  0015DE  0FD3               	addlw	211
  4643  0015E0  0980               	iorlw	128
  4644  0015E2  EC40  F00B         	call	_lcd_wrCom
  4645                           
  4646                           ;Lcd4Lignes.c: 329: break;
  4647  0015E6  EF09  F00B         	goto	l270
  4648  0015EA                     l2071:
  4649  0015EA  0100               	movlb	0	; force () banked
  4650  0015EC  5163               	movf	lcd_gotoXY@y& (0+255),w,b
  4651                           
  4652                           ; Switch size 1, requested type "simple"
  4653                           ; Number of cases is 4, Range of values is 1 to 4
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte           13     7 (average)
  4657                           ;	Chosen strategy is simple_byte
  4658  0015EE  0A01               	xorlw	1	; case 1
  4659  0015F0  B4D8               	btfsc	status,2,c
  4660  0015F2  EFD5  F00A         	goto	l2061
  4661  0015F6  0A03               	xorlw	3	; case 2
  4662  0015F8  B4D8               	btfsc	status,2,c
  4663  0015FA  EFDD  F00A         	goto	l2063
  4664  0015FE  0A01               	xorlw	1	; case 3
  4665  001600  B4D8               	btfsc	status,2,c
  4666  001602  EFE5  F00A         	goto	l2065
  4667  001606  0A07               	xorlw	7	; case 4
  4668  001608  B4D8               	btfsc	status,2,c
  4669  00160A  EFED  F00A         	goto	l2067
  4670  00160E  EF09  F00B         	goto	l270
  4671  001612                     l270:
  4672  001612  0012               	return		;funcret
  4673  001614                     __end_of_lcd_gotoXY:
  4674                           	opt callstack 0
  4675                           
  4676 ;; *************** function _lcd_effaceAffichage *****************
  4677 ;; Defined at:
  4678 ;;		line 276 in file "Lcd4Lignes.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4692 ;;      Params:         0       0       0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    4
  4699 ;; This function calls:
  4700 ;;		_lcd_wrCom
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;;		_afficheAliens
  4704 ;;		_affichePerdu
  4705 ;;		_videAliens
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text28
  4710  001B2E                     __ptext28:
  4711                           	opt callstack 0
  4712  001B2E                     _lcd_effaceAffichage:
  4713                           	opt callstack 25
  4714  001B2E                     
  4715                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4716  001B2E  0E01               	movlw	1
  4717  001B30  EC40  F00B         	call	_lcd_wrCom
  4718                           
  4719                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4720  001B34  0E80               	movlw	128
  4721  001B36  EC40  F00B         	call	_lcd_wrCom
  4722  001B3A  0012               	return		;funcret
  4723  001B3C                     __end_of_lcd_effaceAffichage:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _lcd_wrCom *****************
  4727 ;; Defined at:
  4728 ;;		line 156 in file "Lcd4Lignes.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  commande        1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  commande        1    2[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      unsigned char 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4742 ;;      Params:         0       0       0       0       0       0       0
  4743 ;;      Locals:         0       1       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0
  4745 ;;      Totals:         0       1       0       0       0       0       0
  4746 ;;Total ram usage:        1 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    3
  4749 ;; This function calls:
  4750 ;;		_lcd_busy
  4751 ;;		_lcd_ecrireDonnees
  4752 ;;		_lcd_strobeEnableBit
  4753 ;; This function is called by:
  4754 ;;		_lcd_init
  4755 ;;		_lcd_effaceAffichage
  4756 ;;		_lcd_curseurHome
  4757 ;;		_lcd_gotoXY
  4758 ;;		_lcd_ecritChar
  4759 ;;		_lcd_cacheCurseur
  4760 ;;		_lcd_initCGRam
  4761 ;;		_lcd_montreCurseur
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text29
  4766  001680                     __ptext29:
  4767                           	opt callstack 0
  4768  001680                     _lcd_wrCom:
  4769                           	opt callstack 25
  4770                           
  4771                           ;incstack = 0
  4772                           ;lcd_wrCom@commande stored from wreg
  4773  001680  0100               	movlb	0	; force () banked
  4774  001682  6F62               	movwf	lcd_wrCom@commande& (0+255),b
  4775  001684                     
  4776                           ;Lcd4Lignes.c: 158: lcd_busy();
  4777  001684  EC08  F00D         	call	_lcd_busy	;wreg free
  4778  001688                     
  4779                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4780  001688  0E00               	movlw	0
  4781  00168A  6E95               	movwf	149,c	;volatile
  4782  00168C                     
  4783                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4784  00168C  9080               	bcf	128,0,c	;volatile
  4785  00168E                     
  4786                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4787  00168E  9280               	bcf	128,1,c	;volatile
  4788  001690                     
  4789                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4790  001690  0100               	movlb	0	; force () banked
  4791  001692  3962               	swapf	lcd_wrCom@commande& (0+255),w,b
  4792  001694  0B0F               	andlw	15
  4793  001696  EC81  F00D         	call	_lcd_ecrireDonnees
  4794  00169A                     
  4795                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4796  00169A  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4797  00169E                     
  4798                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4799  00169E  0100               	movlb	0	; force () banked
  4800  0016A0  5162               	movf	lcd_wrCom@commande& (0+255),w,b
  4801  0016A2  EC81  F00D         	call	_lcd_ecrireDonnees
  4802  0016A6                     
  4803                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4804  0016A6  ECA6  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4805  0016AA                     
  4806                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4807  0016AA  0E03               	movlw	3
  4808  0016AC                     u1487:
  4809  0016AC  2EE8               	decfsz	wreg,f,c
  4810  0016AE  D7FE               	bra	u1487
  4811  0016B0  F000               	nop	
  4812  0016B2                     
  4813                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4814  0016B2  0100               	movlb	0	; force () banked
  4815  0016B4  0562               	decf	lcd_wrCom@commande& (0+255),w,b
  4816  0016B6  B4D8               	btfsc	status,2,c
  4817  0016B8  EF60  F00B         	goto	u741
  4818  0016BC  EF62  F00B         	goto	u740
  4819  0016C0                     u741:
  4820  0016C0  EF6C  F00B         	goto	l1955
  4821  0016C4                     u740:
  4822  0016C4                     
  4823                           ; BSR set to: 0
  4824  0016C4  0E02               	movlw	2
  4825  0016C6  0100               	movlb	0	; force () banked
  4826  0016C8  1962               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4827  0016CA  A4D8               	btfss	status,2,c
  4828  0016CC  EF6A  F00B         	goto	u751
  4829  0016D0  EF6C  F00B         	goto	u750
  4830  0016D4                     u751:
  4831  0016D4  EF71  F00B         	goto	l1957
  4832  0016D8                     u750:
  4833  0016D8                     l1955:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4837  0016D8  0EA6               	movlw	166
  4838  0016DA                     u1497:
  4839  0016DA  2EE8               	decfsz	wreg,f,c
  4840  0016DC  D7FE               	bra	u1497
  4841  0016DE  F000 F000          	nop2	
  4842  0016E2                     l1957:
  4843                           
  4844                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4845  0016E2  0E0F               	movlw	15
  4846  0016E4  6E95               	movwf	149,c	;volatile
  4847  0016E6                     
  4848                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4849  0016E6  EC08  F00D         	call	_lcd_busy	;wreg free
  4850  0016EA  0012               	return		;funcret
  4851  0016EC                     __end_of_lcd_wrCom:
  4852                           	opt callstack 0
  4853                           
  4854 ;; *************** function _lcd_strobeEnableBit *****************
  4855 ;; Defined at:
  4856 ;;		line 431 in file "Lcd4Lignes.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		None
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         0       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_lcd_wrCom
  4881 ;;		_lcd_wrData
  4882 ;;		_lcd_resetSequence
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text30
  4887  001B4C                     __ptext30:
  4888                           	opt callstack 0
  4889  001B4C                     _lcd_strobeEnableBit:
  4890                           	opt callstack 26
  4891  001B4C                     
  4892                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4893  001B4C  8480               	bsf	128,2,c	;volatile
  4894                           
  4895                           ;Lcd4Lignes.c: 434: __nop();
  4896  001B4E  F000               	nop	
  4897                           
  4898                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4899  001B50  9480               	bcf	128,2,c	;volatile
  4900  001B52  0012               	return		;funcret
  4901  001B54                     __end_of_lcd_strobeEnableBit:
  4902                           	opt callstack 0
  4903                           
  4904 ;; *************** function _lcd_ecrireDonnees *****************
  4905 ;; Defined at:
  4906 ;;		line 107 in file "Lcd4Lignes.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  donnee          1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  donnee          1    1[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4920 ;;      Params:         0       0       0       0       0       0       0
  4921 ;;      Locals:         0       1       0       0       0       0       0
  4922 ;;      Temps:          0       1       0       0       0       0       0
  4923 ;;      Totals:         0       2       0       0       0       0       0
  4924 ;;Total ram usage:        2 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    1
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_lcd_wrCom
  4931 ;;		_lcd_wrData
  4932 ;;		_lcd_resetSequence
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text31
  4937  001B02                     __ptext31:
  4938                           	opt callstack 0
  4939  001B02                     _lcd_ecrireDonnees:
  4940                           	opt callstack 26
  4941                           
  4942                           ;incstack = 0
  4943                           ;lcd_ecrireDonnees@donnee stored from wreg
  4944  001B02  0100               	movlb	0	; force () banked
  4945  001B04  6F61               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4946  001B06                     
  4947                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4948  001B06  CF83 F060          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4949  001B0A  0EF0               	movlw	240
  4950  001B0C  0100               	movlb	0	; force () banked
  4951  001B0E  1760               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4952  001B10  0100               	movlb	0	; force () banked
  4953  001B12  5161               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4954  001B14  0B0F               	andlw	15
  4955  001B16  0100               	movlb	0	; force () banked
  4956  001B18  1160               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4957  001B1A  6E83               	movwf	131,c	;volatile
  4958  001B1C                     
  4959                           ; BSR set to: 0
  4960  001B1C  0012               	return		;funcret
  4961  001B1E                     __end_of_lcd_ecrireDonnees:
  4962                           	opt callstack 0
  4963                           
  4964 ;; *************** function _lcd_busy *****************
  4965 ;; Defined at:
  4966 ;;		line 124 in file "Lcd4Lignes.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  adresse         1    1[BANK0 ] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      unsigned char 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4980 ;;      Params:         0       0       0       0       0       0       0
  4981 ;;      Locals:         0       1       0       0       0       0       0
  4982 ;;      Temps:          0       1       0       0       0       0       0
  4983 ;;      Totals:         0       2       0       0       0       0       0
  4984 ;;Total ram usage:        2 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    2
  4987 ;; This function calls:
  4988 ;;		_lcd_lireDonnees
  4989 ;; This function is called by:
  4990 ;;		_lcd_wrCom
  4991 ;;		_lcd_wrData
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text32
  4996  001A10                     __ptext32:
  4997                           	opt callstack 0
  4998  001A10                     _lcd_busy:
  4999                           	opt callstack 25
  5000  001A10                     
  5001                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  5002  001A10  9080               	bcf	128,0,c	;volatile
  5003                           
  5004                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  5005  001A12  8280               	bsf	128,1,c	;volatile
  5006  001A14                     l232:
  5007                           
  5008                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  5009  001A14  8480               	bsf	128,2,c	;volatile
  5010                           
  5011                           ;Lcd4Lignes.c: 134: __nop();
  5012  001A16  F000               	nop	
  5013  001A18                     
  5014                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  5015  001A18  ECAD  F00D         	call	_lcd_lireDonnees	;wreg free
  5016  001A1C  0100               	movlb	0	; force () banked
  5017  001A1E  6F60               	movwf	??_lcd_busy& (0+255),b
  5018  001A20  3960               	swapf	??_lcd_busy& (0+255),w,b
  5019  001A22  0BF0               	andlw	240
  5020  001A24  0100               	movlb	0	; force () banked
  5021  001A26  6F61               	movwf	lcd_busy@adresse& (0+255),b
  5022  001A28                     
  5023                           ; BSR set to: 0
  5024                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  5025  001A28  9480               	bcf	128,2,c	;volatile
  5026  001A2A                     
  5027                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  5028  001A2A  8480               	bsf	128,2,c	;volatile
  5029  001A2C                     
  5030                           ;Lcd4Lignes.c: 139: __nop();
  5031  001A2C  F000               	nop	
  5032                           
  5033                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  5034  001A2E  ECAD  F00D         	call	_lcd_lireDonnees	;wreg free
  5035  001A32  0100               	movlb	0	; force () banked
  5036  001A34  1361               	iorwf	lcd_busy@adresse& (0+255),f,b
  5037  001A36                     
  5038                           ; BSR set to: 0
  5039                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  5040  001A36  9480               	bcf	128,2,c	;volatile
  5041  001A38                     
  5042                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  5043  001A38  0100               	movlb	0	; force () banked
  5044  001A3A  BF61               	btfsc	lcd_busy@adresse& (0+255),7,b
  5045  001A3C  EF22  F00D         	goto	u731
  5046  001A40  EF24  F00D         	goto	u730
  5047  001A44                     u731:
  5048  001A44  EF0A  F00D         	goto	l232
  5049  001A48                     u730:
  5050  001A48                     
  5051                           ; BSR set to: 0
  5052                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  5053  001A48  9280               	bcf	128,1,c	;volatile
  5054  001A4A                     
  5055                           ; BSR set to: 0
  5056                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  5057  001A4A  0100               	movlb	0	; force () banked
  5058  001A4C  5161               	movf	lcd_busy@adresse& (0+255),w,b
  5059  001A4E  0B7F               	andlw	127
  5060  001A50                     
  5061                           ; BSR set to: 0
  5062  001A50  0012               	return		;funcret
  5063  001A52                     __end_of_lcd_busy:
  5064                           	opt callstack 0
  5065                           
  5066 ;; *************** function _lcd_lireDonnees *****************
  5067 ;; Defined at:
  5068 ;;		line 93 in file "Lcd4Lignes.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      unsigned char 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5082 ;;      Params:         0       0       0       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0
  5085 ;;      Totals:         0       0       0       0       0       0       0
  5086 ;;Total ram usage:        0 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_lcd_busy
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text33
  5097  001B5A                     __ptext33:
  5098                           	opt callstack 0
  5099  001B5A                     _lcd_lireDonnees:
  5100                           	opt callstack 25
  5101  001B5A                     
  5102                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  5103  001B5A  5083               	movf	131,w,c	;volatile
  5104  001B5C  0B0F               	andlw	15
  5105  001B5E  0012               	return		;funcret
  5106  001B60                     __end_of_lcd_lireDonnees:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function ___awdiv *****************
  5110 ;; Defined at:
  5111 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  dividend        2    0[BANK0 ] int 
  5114 ;;  divisor         2    2[BANK0 ] int 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  quotient        2    6[BANK0 ] int 
  5117 ;;  sign            1    5[BANK0 ] unsigned char 
  5118 ;;  counter         1    4[BANK0 ] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  2    0[BANK0 ] int 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5128 ;;      Params:         0       4       0       0       0       0       0
  5129 ;;      Locals:         0       4       0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0
  5131 ;;      Totals:         0       8       0       0       0       0       0
  5132 ;;Total ram usage:        8 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text34
  5143  00114A                     __ptext34:
  5144                           	opt callstack 0
  5145  00114A                     ___awdiv:
  5146                           	opt callstack 29
  5147  00114A  0E00               	movlw	0
  5148  00114C  0100               	movlb	0	; () banked
  5149  00114E  6F65               	movwf	___awdiv@sign& (0+255),b
  5150  001150                     
  5151                           ; BSR set to: 0
  5152  001150  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5153  001152  EFAF  F008         	goto	u1290
  5154  001156  EFAD  F008         	goto	u1291
  5155  00115A                     u1291:
  5156  00115A  EFB5  F008         	goto	l2503
  5157  00115E                     u1290:
  5158  00115E                     
  5159                           ; BSR set to: 0
  5160  00115E  6D62               	negf	___awdiv@divisor& (0+255),b
  5161  001160  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5162  001162  B0D8               	btfsc	status,0,c
  5163  001164  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5164  001166                     
  5165                           ; BSR set to: 0
  5166  001166  0E01               	movlw	1
  5167  001168  6F65               	movwf	___awdiv@sign& (0+255),b
  5168  00116A                     l2503:
  5169                           
  5170                           ; BSR set to: 0
  5171  00116A  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5172  00116C  EFBC  F008         	goto	u1300
  5173  001170  EFBA  F008         	goto	u1301
  5174  001174                     u1301:
  5175  001174  EFC2  F008         	goto	l2509
  5176  001178                     u1300:
  5177  001178                     
  5178                           ; BSR set to: 0
  5179  001178  6D60               	negf	___awdiv@dividend& (0+255),b
  5180  00117A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5181  00117C  B0D8               	btfsc	status,0,c
  5182  00117E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5183  001180                     
  5184                           ; BSR set to: 0
  5185  001180  0E01               	movlw	1
  5186  001182  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  5187  001184                     l2509:
  5188                           
  5189                           ; BSR set to: 0
  5190  001184  0E00               	movlw	0
  5191  001186  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  5192  001188  0E00               	movlw	0
  5193  00118A  6F66               	movwf	___awdiv@quotient& (0+255),b
  5194  00118C                     
  5195                           ; BSR set to: 0
  5196  00118C  5162               	movf	___awdiv@divisor& (0+255),w,b
  5197  00118E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5198  001190  B4D8               	btfsc	status,2,c
  5199  001192  EFCD  F008         	goto	u1311
  5200  001196  EFCF  F008         	goto	u1310
  5201  00119A                     u1311:
  5202  00119A  EFF7  F008         	goto	l2531
  5203  00119E                     u1310:
  5204  00119E                     
  5205                           ; BSR set to: 0
  5206  00119E  0E01               	movlw	1
  5207  0011A0  6F64               	movwf	___awdiv@counter& (0+255),b
  5208  0011A2  EFD7  F008         	goto	l2517
  5209  0011A6                     l2515:
  5210                           
  5211                           ; BSR set to: 0
  5212  0011A6  90D8               	bcf	status,0,c
  5213  0011A8  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  5214  0011AA  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5215  0011AC  2B64               	incf	___awdiv@counter& (0+255),f,b
  5216  0011AE                     l2517:
  5217                           
  5218                           ; BSR set to: 0
  5219  0011AE  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5220  0011B0  EFDC  F008         	goto	u1321
  5221  0011B4  EFDE  F008         	goto	u1320
  5222  0011B8                     u1321:
  5223  0011B8  EFD3  F008         	goto	l2515
  5224  0011BC                     u1320:
  5225  0011BC                     l2519:
  5226                           
  5227                           ; BSR set to: 0
  5228  0011BC  90D8               	bcf	status,0,c
  5229  0011BE  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  5230  0011C0  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5231  0011C2                     
  5232                           ; BSR set to: 0
  5233  0011C2  5162               	movf	___awdiv@divisor& (0+255),w,b
  5234  0011C4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  5235  0011C6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5236  0011C8  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5237  0011CA  A0D8               	btfss	status,0,c
  5238  0011CC  EFEA  F008         	goto	u1331
  5239  0011D0  EFEC  F008         	goto	u1330
  5240  0011D4                     u1331:
  5241  0011D4  EFF1  F008         	goto	l2527
  5242  0011D8                     u1330:
  5243  0011D8                     
  5244                           ; BSR set to: 0
  5245  0011D8  5162               	movf	___awdiv@divisor& (0+255),w,b
  5246  0011DA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  5247  0011DC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5248  0011DE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5249  0011E0                     
  5250                           ; BSR set to: 0
  5251  0011E0  8166               	bsf	___awdiv@quotient& (0+255),0,b
  5252  0011E2                     l2527:
  5253                           
  5254                           ; BSR set to: 0
  5255  0011E2  90D8               	bcf	status,0,c
  5256  0011E4  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5257  0011E6  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  5258  0011E8                     
  5259                           ; BSR set to: 0
  5260  0011E8  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  5261  0011EA  EFDE  F008         	goto	l2519
  5262  0011EE                     l2531:
  5263                           
  5264                           ; BSR set to: 0
  5265  0011EE  5165               	movf	___awdiv@sign& (0+255),w,b
  5266  0011F0  B4D8               	btfsc	status,2,c
  5267  0011F2  EFFD  F008         	goto	u1341
  5268  0011F6  EFFF  F008         	goto	u1340
  5269  0011FA                     u1341:
  5270  0011FA  EF03  F009         	goto	l2535
  5271  0011FE                     u1340:
  5272  0011FE                     
  5273                           ; BSR set to: 0
  5274  0011FE  6D66               	negf	___awdiv@quotient& (0+255),b
  5275  001200  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5276  001202  B0D8               	btfsc	status,0,c
  5277  001204  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5278  001206                     l2535:
  5279                           
  5280                           ; BSR set to: 0
  5281  001206  C066  F060         	movff	___awdiv@quotient,?___awdiv
  5282  00120A  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  5283  00120E                     
  5284                           ; BSR set to: 0
  5285  00120E  0012               	return		;funcret
  5286  001210                     __end_of___awdiv:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function _high_isr *****************
  5290 ;; Defined at:
  5291 ;;		line 353 in file "main.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5305 ;;      Params:         0       0       0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		Interrupt level 2
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	intcode
  5319  000008                     __pintcode:
  5320                           	opt callstack 0
  5321  000008                     _high_isr:
  5322                           	opt callstack 24
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;incstack = 0
  5326  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5327  00000A                     
  5328                           ;main.c: 355: if (INTCONbits.TMR0IF)
  5329  00000A  A4F2               	btfss	242,2,c	;volatile
  5330  00000C  EF0A  F000         	goto	i2u67_41
  5331  000010  EF0C  F000         	goto	i2u67_40
  5332  000014                     i2u67_41:
  5333  000014  EF14  F000         	goto	i2l160
  5334  000018                     i2u67_40:
  5335  000018                     
  5336                           ;main.c: 356: {;main.c: 357: INTCONbits.TMR0IF = 0;
  5337  000018  94F2               	bcf	242,2,c	;volatile
  5338  00001A                     
  5339                           ;main.c: 359: TMR0 = 0x0BDC;
  5340  00001A  0E0B               	movlw	11
  5341  00001C  6ED7               	movwf	215,c	;volatile
  5342  00001E  0EDC               	movlw	220
  5343  000020  6ED6               	movwf	214,c	;volatile
  5344                           
  5345                           ;main.c: 360: m_tempsDAfficher = 1;
  5346  000022  0E01               	movlw	1
  5347  000024  0100               	movlb	0	; force () banked
  5348  000026  6FF0               	movwf	_m_tempsDAfficher& (0+255),b
  5349  000028                     i2l160:
  5350  000028  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5351  00002A  0011               	retfie		f
  5352  00002C                     __end_of_high_isr:
  5353                           	opt callstack 0
  5354                           
  5355                           	psect	param0
  5356  0000                     
  5357                           	psect	temp
  5358  000001                     btemp:
  5359                           	opt callstack 0
  5360  000001                     	ds	1
  5361  0000                     int$flags	set	btemp
  5362  0000                     wtemp8	set	btemp+1
  5363  0000                     ttemp5	set	btemp+1
  5364  0000                     ttemp6	set	btemp+4
  5365  0000                     ttemp7	set	btemp+8
  5366                           tosu	equ	0xFFF
  5367                           tosh	equ	0xFFE
  5368                           tosl	equ	0xFFD
  5369                           stkptr	equ	0xFFC
  5370                           pclatu	equ	0xFFB
  5371                           pclath	equ	0xFFA
  5372                           pcl	equ	0xFF9
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           prodh	equ	0xFF4
  5378                           prodl	equ	0xFF3
  5379                           indf0	equ	0xFEF
  5380                           postinc0	equ	0xFEE
  5381                           postdec0	equ	0xFED
  5382                           preinc0	equ	0xFEC
  5383                           plusw0	equ	0xFEB
  5384                           fsr0h	equ	0xFEA
  5385                           fsr0l	equ	0xFE9
  5386                           wreg	equ	0xFE8
  5387                           indf1	equ	0xFE7
  5388                           postinc1	equ	0xFE6
  5389                           postdec1	equ	0xFE5
  5390                           preinc1	equ	0xFE4
  5391                           plusw1	equ	0xFE3
  5392                           fsr1h	equ	0xFE2
  5393                           fsr1l	equ	0xFE1
  5394                           bsr	equ	0xFE0
  5395                           indf2	equ	0xFDF
  5396                           postinc2	equ	0xFDE
  5397                           postdec2	equ	0xFDD
  5398                           preinc2	equ	0xFDC
  5399                           plusw2	equ	0xFDB
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    51
    Data        154
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160    138     145
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[19]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> affichePerdu@buffer(BANK0[50]), main@bufferNiveau(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> affichePerdu@buffer(BANK0[50]), m_aliens(BANK1[84]), main@bufferNiveau(BANK0[50]), niveau1(CODE[10]), 
		 -> accueil(CODE[15]), 

    feu@pts	PTR int  size(2) Largest target is 2
		 -> main@pts(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_affichePerdu
    _videAliens->___wmul
    _nouveauxAliens->___awmod
    _rand->___lmul
    ___awmod->_rand
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _feu->___wmul
    _deplace->_lcd_ecritChar
    _deplace->_lcd_gotoXY
    _affichePerdu->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_cacheCurseur->_lcd_wrCom
    _afficheAliens->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   20486
                                             80 BANK0     58    58      0
                            ___awdiv
                            ___awmod
                      _afficheAliens
                       _affichePerdu
                            _deplace
                                _feu
                     _initialisation
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                     _nouveauxAliens
                              _perdu
                            _sprintf
                         _videAliens
 ---------------------------------------------------------------------------------
 (1) _videAliens                                           6     6      0    1517
                                              6 BANK0      6     6      0
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (1) _perdu                                                3     3      0      69
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                       7     7      0    1702
                                             20 BANK0      7     7      0
                            ___awmod
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     547
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _feu                                                 10     8      2    3658
                                              6 BANK0     10     8      2
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _deplace                                              3     1      2    2052
                                              5 BANK0      3     1      2
                          _getAnalog
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _affichePerdu                                        54    52      2    2805
                                             26 BANK0     54    52      2
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                     _lcd_putMessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1406
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _afficheAliens                                        0     0      0    2497
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     935
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1406
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
     _rand (ARG)
       ___lmul
   _afficheAliens
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _affichePerdu
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _deplace
     _getAnalog
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _feu
     ___wmul
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _nouveauxAliens
     ___awmod
       ___awdiv (ARG)
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _strcpy
   _perdu
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _videAliens
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125      15        0.0%
DATA                 0      0     125       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 19 19:29:18 2019

                          l98 1820                  ___awdiv@sign 0065           ___wmul@multiplicand 0062  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l110 0F46  
                         l121 0666                           l300 1416                           l117 1148  
                         l303 1B52                           l151 1AB0                           l127 09E4  
                         l135 152A                           l232 1A14                           l240 16EA  
                         l233 1A48                           l145 1048                           l226 1B5E  
                         l234 1A50                           l138 187E                           l154 1928  
                         l243 1A84                           l331 0DF6                           l252 1B3A  
                         l148 1AA0                           l229 1B1C                           l270 1612  
                         l334 1B00                           l246 1754                           l255 1B42  
                         l281 197C                           l249 1AD8                           l345 166E  
                         l290 1B4A                           l346 167E                           l287 12C2  
                         l820 15A0                           l565 120E                           l813 1598  
                         l830 17BA                           l823 17B2                           l578 1374  
                         l998 1B2C                  __CFG_CPB$OFF 000000                           u240 1AAE  
                         u241 1AAA                  __CFG_CPD$OFF 000000                           u800 1582  
                         u801 157E                           u730 1A48                           u810 176A  
                         u731 1A44                           u811 1766                           u740 16C4  
                         u820 1788                           u900 0CF4                           u741 16C0  
                         u821 1784                           u901 0CF0                           u750 16D8  
                         u830 179E                           u910 0D10                           u751 16D4  
                         u831 179A                           u911 0D0C                           u840 1262  
                         u920 0D28                           u760 1634                           u921 0D24  
                         u761 1630                           u850 12B2                           u930 0DB8  
                         u770 166E                           u931 0DB4                           u771 166A  
                         u860 12C2                           u780 1548                           u940 0DE0  
                         u861 12BE                           u781 1544                           u941 0DDC  
                         u790 1566                           u870 0C16                           u950 1A06  
                         u847 1258                           u791 1562                           u871 0C12  
                         u951 1A02                           u880 0C92                           u960 1394  
                         u857 12A8                           u881 0C8E                           u961 1390  
                         u890 0CBC                           u970 13B0                           u891 0CB8  
                         u971 13AC                           u980 13FC                           u981 13F8  
                         u990 1412                           u991 140E                           _feu 0654  
                __CFG_BORV$18 000000                  ___awmod@sign 0073                   lcd_gotoXY@x 0064  
                         wreg 000FE8                   lcd_gotoXY@y 0063  __size_of_lcd_effaceAffichage 000E  
                __CFG_LVP$OFF 000000                   main@dizaine 00E4                          l1001 18D4  
                        l1007 1A0E                          l2003 195C                          l2011 1634  
                        l2021 1548                          l2101 0C92                          l2005 1B3C  
                        l2013 1644                          l2031 1582                          l2023 1550  
                        l2111 0CC0                          l2103 0C98                          l2015 164E  
                        l2007 1614                          l2033 158A                          l2025 1558  
                        l2017 152C                          l2041 176A                          l2121 0D28  
                        l2105 0CA2                          l1401 1AAE                          l2201 1382  
                        l2009 1626                          l2035 158C                          l2027 1566  
                        l2019 1536                          l2051 17A6                          l2043 1772  
                        l2131 0D9E                          l2123 0D34                          l2115 0CF8  
                        l2107 0CA8                          l2211 13B4                          l2061 15AA  
                        l2037 1592                          l2029 156C                          l2053 17AC  
                        l2045 177A                          l2133 0DA4                          l2125 0D3A  
                        l2117 0CFC                          l2301 1924                          l2213 13E6  
                        l2221 1412                          l2205 1398                          l2055 1B2E  
                        l2063 15BA                          l2071 15EA                          l2047 1788  
                        l2039 1756                          l2127 0D42                          l2119 0D10  
                        l2135 0DB8                          l2223 1ADA                          l2303 1926  
                        l2215 13EA                          l2207 139E                          l2231 12CA  
                        l2143 19CC                          l2311 0E18                          l2065 15CA  
                        l2073 1210                          l2057 1B44                          l2049 179E  
                        l2129 0D92                          l2137 0DE0                          l2081 0BF4  
                        l2225 1AF8                          l2161 1B1E                          l2217 13FC  
                        l2305 1AB2                          l2241 12FA                          l2233 12D8  
                        l2153 1880                          l2145 19D8                          l2321 0E7C  
                        l2313 0E30                          l2401 102A                          l2067 15DA  
                        l2059 15A6                          l2075 121A                          l2139 0DEC  
                        l2083 0C02                          l2411 1098                          l2403 104A  
                        l2219 1400                          l2171 1708                          l2163 16EC  
                        l2307 1AD4                          l2251 1340                          l2243 130C  
                        l2235 12E0                          l2155 18B6                          l2147 19E2  
                        l2331 0F00                          l2323 0E9E                          l2315 0E48  
                        l2501 1166                          l2077 1266                          l2341 17C0  
                        l2093 0C32                          l2085 0C16                          l2421 10F0  
                        l2413 10B0                          l2405 1064                          l2181 1724  
                        l2173 170E                          l2165 16F0                          l2261 136C  
                        l2253 1348                          l2245 1314                          l2237 12E4  
                        l2229 12C4                          l2157 18C8                          l2149 1A06  
                        l2333 0F06                          l2325 0EC0                          l2317 0E64  
                        l2309 0DF8                          l2511 118C                          l2503 116A  
                        l2079 126A                          l2343 17D8                          l2095 0C68  
                        l2087 0C22                          l2423 110A                          l2407 1078  
                        l2415 10BC                          l2431 0658                          l2271 18EA  
                        l2191 1744                          l2183 172C                          l2175 1712  
                        l2167 1704                          l2255 134E                          l2247 131C  
                        l2239 12F2                          l2335 0F18                          l2327 0EE0  
                        l2319 0E76                          l2351 14BE                          l2521 11C2  
                        l2513 119E                          l2505 1178                          l2345 17FC  
                        l2097 0C78                          l2089 0C2C                          l2425 1122  
                        l2417 10D6                          l2409 107E                          l2441 069E  
                        l2281 1900                          l2273 18F6                          l2265 18D6  
                        l2193 1748                          l2185 1732                          l2177 171A  
                        l2169 1706                          l2249 132A                          l2257 1354  
                        l2329 0EEE                          l2337 0F1E                          l2361 1504  
                        l2601 0BD6                          l2523 11D8                          l2515 11A6  
                        l2531 11EE                          l2507 1180                          l2347 1808  
                        l2339 17BC                          l2099 0C82                          l2371 182A  
                        l1395 1A8A                          l2419 10EA                          l2427 112E  
                        l2451 077A                          l2443 0702                          l2435 0674  
                        l2291 190E                          l2283 1904                          l2275 18F8  
                        l2267 18DE                          l2195 1750                          l2187 1736  
                        l2179 1720                          l2259 1364                          l2363 150A  
                        l2355 14E0                          l2603 0BDA                          l2533 11FE  
                        l2525 11E0                          l2517 11AE                          l2509 1184  
                        l2373 184A                          l1397 1A9E                          l2429 1142  
                        l2461 0872                          l2445 075A                          l2437 067E  
                        l2293 1910                          l2285 1908                          l2277 18FA  
                        l2269 18E8                          l2197 1376                          l2189 173E  
                        l2357 14FE                          l2365 1528                          l2349 14AC  
                        l2381 0F60                          l2541 0A04                          l2535 1206  
                        l2527 11E2                          l2519 11BC                          l1911 1A2A  
                        l1903 1B06                          l2375 1862                          l1399 1A9E  
                        l2471 091A                          l2463 0878                          l2447 0766  
                        l2455 07A8                          l2295 1918                          l2287 190A  
                        l2279 18FE                          l2199 137C                          l2383 0F6A  
                        l2551 0A20                          l2543 0A08                          ?_feu 0066  
                        l2529 11E8                          l1921 1A38                          l1913 1A2A  
                        l1905 1A10                          l2369 1822                          l2473 0972  
                        l2465 0886                          l2457 080E                          l2449 076C  
                        l2297 1920                          l2289 190C                          l2393 0FB8  
                        l2377 0F48                          l2561 0A6E                          l2553 0A38  
                        l2545 0A0C                          l1923 1A4A                          l1915 1A2C  
                        l1907 1A18                          l1931 1688                          l2475 097E  
                        l2483 09C0                          l2459 0866                          l2299 1922  
                        l2395 1000                          l2387 0F8C                          l2379 0F5C  
                        l2571 0AA0                          l2563 0A72                          l2555 0A54  
                        l2547 0A10                          l2539 09E6                          l1917 1A36  
                        l1909 1A28                          l1941 169A                          l1933 168C  
                        l2485 09C8                          l2477 0984                          l2469 08B4  
                        l2397 1006                          l2389 0F96                          l2573 0AAA  
                        l2565 0A86                          l2581 0AF2                          l2557 0A58  
                        l2549 0A14                          l2495 114A                          l1919 1A38  
                        l1927 1B4C                          l1951 16B2                          l1943 169E  
                        l1935 168C                          l2479 0992                          l2399 1024  
                        l2591 0B72                          l2583 0B00                          l2575 0AB4  
                        l2567 0A92                          l2559 0A6A                          l2497 1150  
                        l1961 16E6                          l1953 16C4                          l1945 169E  
                        l1937 168E                          l1929 1684                          l2593 0B7E  
                        l2577 0ABE                          l2569 0A9C                          l2585 0B06  
                        l2499 115E                          l1955 16D8                          l1947 16A6  
                        l1939 1690                          l1971 1A5E                          l2595 0B82  
                        l2587 0B14                          l2579 0AD6                          l1957 16E2  
                        l1949 16AA                          l1981 1A70                          l1973 1A60  
                        l1965 1A56                          l2597 0BA2                          l2589 0B26  
                        l1959 16E6                          l1983 1A78                          l1975 1A62  
                        l1967 1A5A                          l2599 0BBA                          l1985 1A7C  
                        l1977 1A6C                          l1969 1A5E                          l1993 192E  
                        l1899 1B5A                          l1987 1A7C                          l1979 1A70  
                        l1995 193E                          l1989 1A80                          l1997 1948  
                        l1999 1952                          STR_1 0647                          STR_2 0634  
                        u1000 12D8                          u1001 12D4                          u1010 12F2  
                        u1011 12EE                          u1020 130C                          u1100 14DC  
                        u1021 1308                          u1101 14D8                          u1030 132A  
                        u1110 14FE                          u1031 1326                          u1111 14FA  
                        u1200 1122                          u1040 1340                          u1120 1528  
                        u1201 111E                          u1041 133C                          u1121 1524  
                        u1210 0666                          u1050 1364                          u1130 0F88  
                        u1211 0662                          u1051 1360                          u1131 0F84  
                        u1300 1178                          u1220 0674                          u1060 0E9A  
                        u1140 0FB4                          u1301 1174                          u1221 0670  
                        u1061 0E96                          u1141 0FB0                          u1310 119E  
                        u1230 069A                          u1070 0EE0                          u1150 1024  
                        u1311 119A                          u1231 0696                          u1071 0EDC  
                        u1151 1020                          u1320 11BC                          u1240 0702  
                        u1080 0F00                          u1160 1048                          u1321 11B8  
                        u1241 06FE                          u1081 0EFC                          u1161 1044  
                        u1330 11D8                          u1170 1064                          u1250 080E  
                        u1090 0F46                          u1331 11D4                          u1171 1060  
                        u1251 080A                          u1091 0F42                          u1340 11FE  
                        u1180 10B0                          u1260 091A                          u1341 11FA  
                        u1181 10AC                          u1261 0916                          u1190 10D6  
                        u1270 09E4                          u1350 0A6A                          u1191 10D2  
                        u1271 09E0                          u1407 0BC6                          u1351 0A66  
                        u1360 0A86                          u1417 0BE2                          u1361 0A82  
                        u1290 115E                          u1370 0B72                          u1291 115A  
                        u1427 16F8                          u1371 0B6E                          u1437 1714  
                        u1447 1726                          u1457 1738                          u1467 174A  
                        u1387 0A44                          u1477 186E                          u1397 0AE2  
                        u1487 16AC                          u1497 16DA                          _RCIF 007CF5  
                        _TMR0 000FD6                          _TMR1 000FCE              ??_initialisation 0062  
                        _main 09E6                          _rand 1880                          feu@i 006D  
                        feu@x 006F                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0001                          prodh 000FF4  
                        prodl 000FF3                          start 002C               ?_lcd_putMessage 0065  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
 nouveauxAliens@endroitAliens 0079                         ??_feu 0068               ??_lcd_ecritChar 0063  
                       ?_main 0060                         ?_rand 006C               __end_of___awdiv 1210  
             __end_of___awmod 1376                         _ANSEL 000F7E               ___awdiv@divisor 0062  
             __end_of___lwdiv 15A2               __end_of___lwmod 17BC                         i2l160 0028  
             ___awdiv@counter 0064                         _RCREG 000FAE               __end_of_accueil 062A  
                       _SPBRG 000FAF                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000               __end_of_deplace 114A           ___lmul@multiplicand 0064  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 0063               __end_of_dpowers 061B  
                       _randx 00EA                         _perdu 14AC                         _srand 1B1E  
             __end_of_niveau1 0634                         tablat 000FF5                         ttemp5 0002  
                       ttemp6 0005                         ttemp7 0009                         status 000FD8  
                       wtemp8 0002               __end_of_sprintf 0DF8      __end_of_lcd_cacheCurseur 1B4C  
              __CFG_HFOFST$ON 000000         __size_of_affichePerdu 005E                __CFG_PBADEN$ON 000000  
             __initialization 197E                  __end_of_main 0BF4                  __end_of_rand 18D6  
        lcd_putMessage@chaine 0065                        ??_main 00B0                        ??_rand 006E  
               __activetblptr 000003                        _ADCON1 000FC1                  _affichePerdu 1822  
                      _ADRESH 000FC4                        ?_perdu 0060              ___awdiv@dividend 0060  
                      ?_srand 0060                        _ANSELH 000F7F                __CFG_WDTEN$OFF 000000  
                      i2l1851 0018                        i2l1853 001A                        i2l1849 000A  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 0065  
              lcd_initCGRam@j 0066                getAnalog@canal 0061              __end_of_lcd_busy 1A52  
            __end_of_lcd_init 1ADA              __end_of_high_isr 002C              __end_of_jeuPerdu 0611  
                      ___lmul 1614                        ___wmul 1ADA                     ??___awdiv 0064  
              __CFG_STVREN$ON 000000                     ??___awmod 0072              ??_nouveauxAliens 0074  
                   ??___lwdiv 0064                     ??___lwmod 006B              ___awdiv@quotient 0066  
                      feu@pts 0066               ___awmod@divisor 0070                     ??_deplace 0067  
             ___awmod@counter 0072                        _strcpy 19CC                        perdu@i 0061  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 0060        __size_of_afficheAliens 0066  
                   ??_sprintf 0072             _lcd_resetSequence 16EC                    __accesstop 0060  
     __end_of__initialization 19C2     nouveauxAliens@sorteAliens 007A           _lcd_strobeEnableBit 1B4C  
          ?_lcd_resetSequence 0060                 ___rparam_used 000000           _lcd_effaceAffichage 1B2E  
                __pidataBANK0 1B54                  __pidataBANK1 1418           ??_lcd_resetSequence 0062  
               __end_of_perdu 152C                 __end_of_srand 1B2E          ?_lcd_strobeEnableBit 0060  
          __size_of_getAnalog 002C          ?_lcd_effaceAffichage 0060            __size_of_lcd_wrCom 006C  
                     ??_perdu 0060     __end_of_lcd_resetSequence 1756                       ??_srand 0062  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 1B02                    __pbssBANK0 00F0  
            ??_lcd_putMessage 0068            ?_lcd_ecrireDonnees 0060              main@bufferNiveau 00B2  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 0060                 _afficheAliens 17BC  
                     ?___lmul 0060                       ?___wmul 0060                ___lmul@product 0068  
       ??_lcd_strobeEnableBit 0060                       ?_strcpy 0060                    _lcd_gotoXY 15A2  
       ??_lcd_effaceAffichage 0063                    _lcd_wrData 1A52                       i2u67_40 0018  
                     i2u67_41 0014     __end_of_lcd_ecrireDonnees 1B1E                     ?_lcd_busy 0060  
                   ?_lcd_init 0060       lcd_ecrireDonnees@donnee 0061                     ?_high_isr 0060  
           __end_of_getAnalog 1AB2             ?_lcd_cacheCurseur 0060                       __Hparam 0000  
                     __Lparam 0000            ??_lcd_cacheCurseur 0063                ?_afficheAliens 0060  
             nouveauxAliens@i 0075               nouveauxAliens@j 0077             __end_of_lcd_wrCom 16EC  
                     ___awdiv 114A               __size_of___lmul 006C                       ___awmod 12C4  
                 videAliens@i 0068                   videAliens@j 006A               __size_of___wmul 0028  
                     ___lwdiv 152C                       ___lwmod 1756                       _accueil 061B  
                __psmallconst 0600                       __pcinit 197E                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 104A                       __ptext0 09E6  
                     __ptext1 0F48                       __ptext2 14AC                       __ptext3 0DF8  
                     __ptext4 19CC                       __ptext5 1880                       __ptext6 1614  
                     __ptext7 12C4                       __ptext8 1AB2                       __ptext9 16EC  
       __end_of_lcd_ecritChar 197E                     _T0CONbits 000FD5               lcd_busy@adresse 0061  
             __size_of_strcpy 0044                     _T1CONbits 000FCD                       _dpowers 0611  
                __size_of_feu 0392              ___awmod@dividend 006E                       _niveau1 062A  
            lcd_ecritChar@car 0063                       _sprintf 0BF4                    ??_lcd_busy 0060  
                     main@pts 00E6                    ??_lcd_init 0067    __size_of_lcd_resetSequence 006A  
                  ??_high_isr 0060              _m_tempsDAfficher 00F0          end_of_initialization 19C2  
       __end_of_lcd_initCGRam 1418                    _videAliens 0F48             ??_lcd_lireDonnees 0060  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0054  
           ??_lcd_curseurHome 0063           lcd_ecritChar@posRam 0064                     _PORTAbits 000F80  
                   _PORTBbits 000F81                   ?_lcd_gotoXY 0063                     _TRISCbits 000F94  
                 ?_lcd_wrData 0060    __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC  
             ??_afficheAliens 006E                __end_of___lmul 1680                __end_of___wmul 1B02  
                 _BAUDCONbits 000FB8                __end_of_strcpy 1A10           start_initialization 197E  
                 __end_of_feu 09E6                   ?_videAliens 0060           __size_of_lcd_gotoXY 0072  
                    ??___lmul 0068                      ??___wmul 0064           __size_of_lcd_wrData 0034  
                 __pdataBANK0 00EA                   __pdataBANK1 0100              __CFG_LPT1OSC$OFF 000000  
                    ??_strcpy 0064                 __pcstackBANK0 0060       __size_of_nouveauxAliens 0150  
           __size_of_lcd_busy 0042             __size_of_lcd_init 0028             __size_of_high_isr 0024  
                 sprintf@flag 0075                   sprintf@prec 0076              ___lwdiv@dividend 0060  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 1A86   __end_of_lcd_strobeEnableBit 1B54  
                   __pintcode 0008                _initialisation 18D6                      ?___awdiv 0060  
                    ?___awmod 006E                      ?___lwdiv 0060                      ?___lwmod 0067  
                    ?_deplace 0065   __end_of_lcd_effaceAffichage 1B3C                     _lcd_wrCom 1680  
   __size_of_lcd_cacheCurseur 0008                   __smallconst 0600           __size_of_videAliens 0102  
          affichePerdu@buffer 007E                 ?_affichePerdu 007A              ___lwdiv@quotient 0064  
             _lcd_lireDonnees 1B5A                      ?_sprintf 006C           lcd_wrData@caractere 0062  
              __size_of_perdu 0080                __size_of_srand 0010               _lcd_curseurHome 1B3C  
              ___wmul@product 0064        __end_of_initialisation 192A                    ?_getAnalog 0060  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 0060  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0             ___wmul@multiplier 0060  
                ??_lcd_gotoXY 0064                ??_affichePerdu 007C                  ??_lcd_wrData 0062  
           lcd_wrCom@commande 0062             ___lmul@multiplier 0060                     copy_data0 1992  
                   copy_data1 19B2                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 0060            __CFG_BOREN$SBORDIS 000000  
          __end_of_lcd_gotoXY 1614            __end_of_lcd_wrData 1A86              __size_of___awdiv 00C6  
            __size_of___awmod 00B2              __size_of___lwdiv 0076              __size_of___lwmod 0066  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 006D              __size_of_deplace 0100  
     __end_of_lcd_lireDonnees 1B60                    sprintf@val 0077                _nouveauxAliens 0DF8  
             ___lwdiv@divisor 0062                      _matCGRAM 0100               ___lwdiv@counter 0066  
     __end_of_lcd_curseurHome 1B44                      __ptext10 1376                      __ptext11 1B3C  
                    __ptext20 1756                      __ptext12 18D6                      __ptext21 152C  
                    __ptext13 1B1E                      __ptext30 1B4C                      __ptext22 1B44  
                    __ptext14 0654                      __ptext31 1B02                      __ptext23 17BC  
                    __ptext15 1ADA                      __ptext32 1A10                      __ptext24 1210  
                    __ptext16 104A                      __ptext33 1B5A                      __ptext25 192A  
                    __ptext17 1A86                      __ptext34 114A                      __ptext26 1A52  
                    __ptext18 1822                      __ptext27 15A2                      __ptext19 0BF4  
                    __ptext28 1B2E                      __ptext29 1680               affichePerdu@pts 007A  
                    _m_aliens 0140                      _lcd_busy 1A10                      _lcd_init 1AB2  
                    _high_isr 0008                      _jeuPerdu 0601              __size_of_sprintf 0204  
                  strcpy@from 0062                      _m_niveau 00EE                 __size_of_main 020E  
               __size_of_rand 0056                  ??_videAliens 0066                      deplace@x 0065  
                 ??_getAnalog 0060         __end_of_afficheAliens 1822                      int$flags 0001  
                    main@posX 00E8                   ??_lcd_wrCom 0062              _lcd_cacheCurseur 1B44  
      __end_of_nouveauxAliens 0F48                 _lcd_ecritChar 192A                    _INTCONbits 000FF2  
          __end_of_videAliens 104A                      intlevel2 0000                     sprintf@ap 0073  
                   sprintf@sp 006C                 _lcd_initCGRam 1376              ___lwmod@dividend 0067  
              _lcd_putMessage 1210          __end_of_affichePerdu 1880                ?_lcd_ecritChar 0060  
                    sprintf@c 0079                      sprintf@f 006E               ?_nouveauxAliens 0060  
            ?_lcd_lireDonnees 0060               ___lwmod@divisor 0069                      strcpy@cp 0064  
                    strcpy@to 0060               ___lwmod@counter 006B              ?_lcd_curseurHome 0060  
              ?_lcd_initCGRam 0060             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 12C4  
