

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 11:59:51 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1,minocg
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F45K20 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  001E38                     __pidataBANK0:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _randx
    91  001E38  0001               	dw	1
    92  001E3A  0000               	dw	0
    93                           
    94                           	psect	idataBANK1
    95  001CB4                     __pidataBANK1:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for _matCGRAM
    99  001CB4  0D                 	db	13
   100  001CB5  1F                 	db	31
   101  001CB6  1F                 	db	31
   102  001CB7  1F                 	db	31
   103  001CB8  1F                 	db	31
   104  001CB9  1F                 	db	31
   105  001CBA  1F                 	db	31
   106  001CBB  0D                 	db	13
   107  001CBC  0E                 	db	14
   108  001CBD  1F                 	db	31
   109  001CBE  1F                 	db	31
   110  001CBF  1F                 	db	31
   111  001CC0  1F                 	db	31
   112  001CC1  1F                 	db	31
   113  001CC2  1F                 	db	31
   114  001CC3  0E                 	db	14
   115  001CC4  00                 	db	0
   116  001CC5  04                 	db	4
   117  001CC6  0E                 	db	14
   118  001CC7  1F                 	db	31
   119  001CC8  1F                 	db	31
   120  001CC9  0E                 	db	14
   121  001CCA  04                 	db	4
   122  001CCB  00                 	db	0
   123  001CCC  0E                 	db	14
   124  001CCD  1B                 	db	27
   125  001CCE  0A                 	db	10
   126  001CCF  1F                 	db	31
   127  001CD0  11                 	db	17
   128  001CD1  1F                 	db	31
   129  001CD2  0A                 	db	10
   130  001CD3  0A                 	db	10
   131  001CD4  08                 	db	8
   132  001CD5  04                 	db	4
   133  001CD6  1F                 	db	31
   134  001CD7  10                 	db	16
   135  001CD8  1E                 	db	30
   136  001CD9  10                 	db	16
   137  001CDA  1F                 	db	31
   138  001CDB  00                 	db	0
   139  001CDC  04                 	db	4
   140  001CDD  0A                 	db	10
   141  001CDE  0E                 	db	14
   142  001CDF  11                 	db	17
   143  001CE0  1F                 	db	31
   144  001CE1  10                 	db	16
   145  001CE2  0E                 	db	14
   146  001CE3  00                 	db	0
   147  001CE4  08                 	db	8
   148  001CE5  04                 	db	4
   149  001CE6  0E                 	db	14
   150  001CE7  01                 	db	1
   151  001CE8  0F                 	db	15
   152  001CE9  11                 	db	17
   153  001CEA  0F                 	db	15
   154  001CEB  00                 	db	0
   155  001CEC  04                 	db	4
   156  001CED  0A                 	db	10
   157  001CEE  0E                 	db	14
   158  001CEF  01                 	db	1
   159  001CF0  0F                 	db	15
   160  001CF1  11                 	db	17
   161  001CF2  0F                 	db	15
   162  001CF3  00                 	db	0
   163                           
   164                           	psect	smallconst
   165  000600                     __psmallconst:
   166                           	opt callstack 0
   167  000600  00                 	db	0
   168  000601                     _accueil:
   169                           	opt callstack 0
   170  000601  4C                 	db	76
   171  000602  61                 	db	97
   172  000603  62                 	db	98
   173  000604  6F                 	db	111
   174  000605  36                 	db	54
   175  000606  20                 	db	32
   176  000607  64                 	db	100
   177  000608  65                 	db	101
   178  000609  20                 	db	32
   179  00060A  46                 	db	70
   180  00060B  72                 	db	114
   181  00060C  61                 	db	97
   182  00060D  6E                 	db	110
   183  00060E  6B                 	db	107
   184  00060F  00                 	db	0
   185  000610                     __end_of_accueil:
   186                           	opt callstack 0
   187  0000                     _TMR1	set	4046
   188  0000                     _PORTAbits	set	3968
   189  0000                     _PORTD	set	3971
   190  0000                     _RCREG	set	4014
   191  0000                     _TXREG	set	4013
   192  0000                     _RCSTAbits	set	4011
   193  0000                     _TXSTAbits	set	4012
   194  0000                     _BAUDCONbits	set	4024
   195  0000                     _SPBRG	set	4015
   196  0000                     _SPBRGH	set	4016
   197  0000                     _TRISCbits	set	3988
   198  0000                     _ADCON2bits	set	4032
   199  0000                     _ADCON1	set	4033
   200  0000                     _ANSELbits	set	3966
   201  0000                     _T1CONbits	set	4045
   202  0000                     _TRISA	set	3986
   203  0000                     _ANSEL	set	3966
   204  0000                     _TRISB	set	3987
   205  0000                     _ANSELH	set	3967
   206  0000                     _TRISD	set	3989
   207  0000                     _ADRESH	set	4036
   208  0000                     _ADCON0bits	set	4034
   209  0000                     _PORTBbits	set	3969
   210  0000                     _RCIF	set	31989
   211                           
   212                           ; #config settings
   213  000610  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           	psect	cinit
   216  001B6A                     __pcinit:
   217                           	opt callstack 0
   218  001B6A                     start_initialization:
   219                           	opt callstack 0
   220  001B6A                     __initialization:
   221                           	opt callstack 0
   222                           
   223                           ; Initialize objects allocated to BANK1 (64 bytes)
   224                           ; load TBLPTR registers with __pidataBANK1
   225  001B6A  0EB4               	movlw	low __pidataBANK1
   226  001B6C  6EF6               	movwf	tblptrl,c
   227  001B6E  0E1C               	movlw	high __pidataBANK1
   228  001B70  6EF7               	movwf	tblptrh,c
   229  001B72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   230  001B74  6EF8               	movwf	tblptru,c
   231  001B76  EE01  F054         	lfsr	0,__pdataBANK1
   232  001B7A  EE10 F040          	lfsr	1,64
   233  001B7E                     copy_data0:
   234  001B7E  0009               	tblrd		*+
   235  001B80  CFF5 FFEE          	movff	tablat,postinc0
   236  001B84  50E5               	movf	postdec1,w,c
   237  001B86  50E1               	movf	fsr1l,w,c
   238  001B88  E1FA               	bnz	copy_data0
   239                           
   240                           ; Initialize objects allocated to BANK0 (4 bytes)
   241                           ; load TBLPTR registers with __pidataBANK0
   242  001B8A  0E38               	movlw	low __pidataBANK0
   243  001B8C  6EF6               	movwf	tblptrl,c
   244  001B8E  0E1E               	movlw	high __pidataBANK0
   245  001B90  6EF7               	movwf	tblptrh,c
   246  001B92  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   247  001B94  6EF8               	movwf	tblptru,c
   248  001B96  EE00  F0E0         	lfsr	0,__pdataBANK0
   249  001B9A  EE10 F004          	lfsr	1,4
   250  001B9E                     copy_data1:
   251  001B9E  0009               	tblrd		*+
   252  001BA0  CFF5 FFEE          	movff	tablat,postinc0
   253  001BA4  50E5               	movf	postdec1,w,c
   254  001BA6  50E1               	movf	fsr1l,w,c
   255  001BA8  E1FA               	bnz	copy_data1
   256                           
   257                           ; Clear objects allocated to BANK1 (84 bytes)
   258  001BAA  EE01  F000         	lfsr	0,__pbssBANK1
   259  001BAE  0E54               	movlw	84
   260  001BB0                     clear_0:
   261  001BB0  6AEE               	clrf	postinc0,c
   262  001BB2  06E8               	decf	wreg,f,c
   263  001BB4  E1FD               	bnz	clear_0
   264                           
   265                           ; Clear objects allocated to BANK0 (84 bytes)
   266  001BB6  EE00  F060         	lfsr	0,__pbssBANK0
   267  001BBA  0E54               	movlw	84
   268  001BBC                     clear_1:
   269  001BBC  6AEE               	clrf	postinc0,c
   270  001BBE  06E8               	decf	wreg,f,c
   271  001BC0  E1FD               	bnz	clear_1
   272  001BC2                     end_of_initialization:
   273                           	opt callstack 0
   274  001BC2                     __end_of__initialization:
   275                           	opt callstack 0
   276  001BC2  0100               	movlb	0
   277  001BC4  EFEA  F009         	goto	_main	;jump to C main() function
   278                           
   279                           	psect	bssBANK0
   280  000060                     __pbssBANK0:
   281                           	opt callstack 0
   282  000060                     _m_tabMines:
   283                           	opt callstack 0
   284  000060                     	ds	84
   285                           
   286                           	psect	dataBANK0
   287  0000E0                     __pdataBANK0:
   288                           	opt callstack 0
   289  0000E0                     _randx:
   290                           	opt callstack 0
   291  0000E0                     	ds	4
   292                           
   293                           	psect	bssBANK1
   294  000100                     __pbssBANK1:
   295                           	opt callstack 0
   296  000100                     _m_tabVue:
   297                           	opt callstack 0
   298  000100                     	ds	84
   299                           
   300                           	psect	dataBANK1
   301  000154                     __pdataBANK1:
   302                           	opt callstack 0
   303  000154                     _matCGRAM:
   304                           	opt callstack 0
   305  000154                     	ds	64
   306                           
   307                           	psect	cstackBANK0
   308  0000B4                     __pcstackBANK0:
   309                           	opt callstack 0
   310  0000B4                     ??_getAnalog:
   311  0000B4                     ??_lcd_ecrireDonnees:
   312  0000B4                     ??_lcd_busy:
   313  0000B4                     ?___wmul:
   314                           	opt callstack 0
   315  0000B4                     ?___lmul:
   316                           	opt callstack 0
   317  0000B4                     ___wmul@multiplier:
   318                           	opt callstack 0
   319  0000B4                     srand@x:
   320                           	opt callstack 0
   321  0000B4                     ___lmul@multiplier:
   322                           	opt callstack 0
   323                           
   324                           ; 4 bytes @ 0x0
   325  0000B4                     	ds	1
   326  0000B5                     getAnalog@canal:
   327                           	opt callstack 0
   328  0000B5                     lcd_ecrireDonnees@donnee:
   329                           	opt callstack 0
   330  0000B5                     lcd_busy@adresse:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x1
   334  0000B5                     	ds	1
   335  0000B6                     ??_lcd_resetSequence:
   336  0000B6                     lcd_wrCom@commande:
   337                           	opt callstack 0
   338  0000B6                     lcd_wrData@caractere:
   339                           	opt callstack 0
   340  0000B6                     ___wmul@multiplicand:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344  0000B6                     	ds	1
   345  0000B7                     ??_lcd_initCGRam:
   346  0000B7                     lcd_gotoXY@y:
   347                           	opt callstack 0
   348  0000B7                     lcd_ecritChar@car:
   349                           	opt callstack 0
   350                           
   351                           ; 1 bytes @ 0x3
   352  0000B7                     	ds	1
   353  0000B8                     lcd_gotoXY@x:
   354                           	opt callstack 0
   355  0000B8                     lcd_ecritChar@posRam:
   356                           	opt callstack 0
   357  0000B8                     ___wmul@product:
   358                           	opt callstack 0
   359  0000B8                     ___lmul@multiplicand:
   360                           	opt callstack 0
   361                           
   362                           ; 4 bytes @ 0x4
   363  0000B8                     	ds	1
   364  0000B9                     lcd_initCGRam@i:
   365                           	opt callstack 0
   366  0000B9                     deplace@x:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x5
   370  0000B9                     	ds	1
   371  0000BA                     enleveTuilesAutour@y:
   372                           	opt callstack 0
   373  0000BA                     lcd_initCGRam@j:
   374                           	opt callstack 0
   375  0000BA                     gagne@pMines:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     lcd_putMessage@chaine:
   380                           	opt callstack 0
   381                           
   382                           ; 3 bytes @ 0x6
   383  0000BA                     	ds	1
   384  0000BB                     ??_enleveTuilesAutour:
   385  0000BB                     deplace@y:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x7
   389  0000BB                     	ds	1
   390  0000BC                     ??_gagne:
   391  0000BC                     calculToucheCombien@colonne:
   392                           	opt callstack 0
   393  0000BC                     ___lmul@product:
   394                           	opt callstack 0
   395                           
   396                           ; 4 bytes @ 0x8
   397  0000BC                     	ds	1
   398  0000BD                     ??_lcd_putMessage:
   399  0000BD                     ??_deplace:
   400                           
   401                           ; 1 bytes @ 0x9
   402  0000BD                     	ds	1
   403  0000BE                     ??_calculToucheCombien:
   404                           
   405                           ; 1 bytes @ 0xA
   406  0000BE                     	ds	1
   407  0000BF                     enleveTuilesAutour@x:
   408                           	opt callstack 0
   409  0000BF                     gagne@nbrTuile:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0xB
   413  0000BF                     	ds	1
   414  0000C0                     ?_rand:
   415                           	opt callstack 0
   416  0000C0                     enleveTuilesAutour@i:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0xC
   420  0000C0                     	ds	1
   421  0000C1                     gagne@i:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xD
   425  0000C1                     	ds	1
   426  0000C2                     ?___awmod:
   427                           	opt callstack 0
   428  0000C2                     lcd_putMessage@j:
   429                           	opt callstack 0
   430  0000C2                     enleveTuilesAutour@j:
   431                           	opt callstack 0
   432  0000C2                     ___awmod@dividend:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  0000C2                     	ds	1
   437  0000C3                     ??_initTabVue:
   438  0000C3                     ??_afficheTabMine:
   439  0000C3                     ??_afficheTabVue:
   440  0000C3                     calculToucheCombien@nombre:
   441                           	opt callstack 0
   442  0000C3                     gagne@j:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0xF
   446  0000C3                     	ds	1
   447  0000C4                     ??_metToucheCombien:
   448  0000C4                     ___awmod@divisor:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x10
   452  0000C4                     	ds	1
   453  0000C5                     initTabVue@i:
   454                           	opt callstack 0
   455  0000C5                     afficheTabVue@i:
   456                           	opt callstack 0
   457  0000C5                     afficheTabMine@i:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x11
   461  0000C5                     	ds	1
   462  0000C6                     ___awmod@counter:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x12
   466  0000C6                     	ds	1
   467  0000C7                     metToucheCombien@nombre:
   468                           	opt callstack 0
   469  0000C7                     demine@y:
   470                           	opt callstack 0
   471  0000C7                     ___awmod@sign:
   472                           	opt callstack 0
   473  0000C7                     initTabVue@g:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x13
   477  0000C7                     	ds	1
   478  0000C8                     ??_demine:
   479  0000C8                     rempliMines@nb:
   480                           	opt callstack 0
   481  0000C8                     metToucheCombien@i:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x14
   485  0000C8                     	ds	1
   486  0000C9                     initTabVue@j:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x15
   490  0000C9                     	ds	1
   491  0000CA                     ??_rempliMines:
   492  0000CA                     metToucheCombien@j:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x16
   496  0000CA                     	ds	3
   497  0000CD                     rempliMines@endroitMine:
   498                           	opt callstack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  0000CD                     	ds	1
   502  0000CE                     rempliMines@g:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  0000CE                     	ds	2
   507  0000D0                     demine@x:
   508                           	opt callstack 0
   509  0000D0                     rempliMines@ligne:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x1C
   513  0000D0                     	ds	2
   514  0000D2                     rempliMines@colonne:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x1E
   518  0000D2                     	ds	2
   519  0000D4                     rempliMines@i:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523  0000D4                     	ds	2
   524  0000D6                     rempliMines@j:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x22
   528  0000D6                     	ds	2
   529  0000D8                     ??_main:
   530                           
   531                           ; 1 bytes @ 0x24
   532  0000D8                     	ds	2
   533  0000DA                     main@nb:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x26
   537  0000DA                     	ds	2
   538  0000DC                     main@posX:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x28
   542  0000DC                     	ds	2
   543  0000DE                     main@posY:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x2A
   547  0000DE                     	ds	2
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 66 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  posY            2   42[BANK0 ] int 
   559 ;;  posX            2   40[BANK0 ] int 
   560 ;;  nb              2   38[BANK0 ] int 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   570 ;;      Params:         0       0       0       0       0       0       0
   571 ;;      Locals:         0       6       0       0       0       0       0
   572 ;;      Temps:          0       2       0       0       0       0       0
   573 ;;      Totals:         0       8       0       0       0       0       0
   574 ;;Total ram usage:        8 bytes
   575 ;; Hardware stack levels required when called:    7
   576 ;; This function calls:
   577 ;;		_afficheTabMine
   578 ;;		_demine
   579 ;;		_deplace
   580 ;;		_gagne
   581 ;;		_initTabVue
   582 ;;		_initialisation
   583 ;;		_lcd_cacheCurseur
   584 ;;		_lcd_effaceAffichage
   585 ;;		_lcd_gotoXY
   586 ;;		_lcd_init
   587 ;;		_lcd_montreCurseur
   588 ;;		_lcd_putMessage
   589 ;;		_metToucheCombien
   590 ;;		_rempliMines
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  0013D4                     __ptext0:
   598                           	opt callstack 0
   599  0013D4                     _main:
   600                           	opt callstack 24
   601  0013D4                     
   602                           ;main.c: 68: int nb = 2;
   603  0013D4  0E00               	movlw	0
   604  0013D6  0100               	movlb	0	; force () banked
   605  0013D8  6FDB               	movwf	(main@nb+1)& (0+255),b
   606  0013DA  0E02               	movlw	2
   607  0013DC  6FDA               	movwf	main@nb& (0+255),b
   608                           
   609                           ;main.c: 69: int posX=10;
   610  0013DE  0E00               	movlw	0
   611  0013E0  0100               	movlb	0	; force () banked
   612  0013E2  6FDD               	movwf	(main@posX+1)& (0+255),b
   613  0013E4  0E0A               	movlw	10
   614  0013E6  6FDC               	movwf	main@posX& (0+255),b
   615                           
   616                           ;main.c: 70: int posY=2;
   617  0013E8  0E00               	movlw	0
   618  0013EA  0100               	movlb	0	; force () banked
   619  0013EC  6FDF               	movwf	(main@posY+1)& (0+255),b
   620  0013EE  0E02               	movlw	2
   621  0013F0  6FDE               	movwf	main@posY& (0+255),b
   622  0013F2                     
   623                           ; BSR set to: 0
   624                           ;main.c: 71: initialisation();
   625  0013F2  EC7A  F00E         	call	_initialisation	;wreg free
   626  0013F6                     
   627                           ;main.c: 72: lcd_init();
   628  0013F6  ECC4  F00E         	call	_lcd_init	;wreg free
   629  0013FA                     
   630                           ;main.c: 73: lcd_effaceAffichage();
   631  0013FA  EC02  F00F         	call	_lcd_effaceAffichage	;wreg free
   632  0013FE                     
   633                           ;main.c: 74: lcd_cacheCurseur();
   634  0013FE  EC0D  F00F         	call	_lcd_cacheCurseur	;wreg free
   635  001402                     
   636                           ;main.c: 75: lcd_gotoXY(1,1);
   637  001402  0E01               	movlw	1
   638  001404  0100               	movlb	0	; force () banked
   639  001406  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   640  001408  0E01               	movlw	1
   641  00140A  ECDB  F00C         	call	_lcd_gotoXY
   642  00140E                     
   643                           ;main.c: 76: lcd_putMessage(accueil);
   644  00140E  0E01               	movlw	low _accueil
   645  001410  0100               	movlb	0	; force () banked
   646  001412  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   647  001414  0E06               	movlw	high _accueil
   648  001416  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   649  001418  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   650  00141A  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   651  00141C  A4D8               	btfss	status,2,c
   652  00141E  0E00               	movlw	low (__mediumconst shr (0+16))
   653  001420  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   654  001422  EC35  F00B         	call	_lcd_putMessage	;wreg free
   655  001426                     
   656                           ;main.c: 77: _delay((unsigned long)((1000)*(1000000/4000.0)));
   657  001426  0E02               	movlw	2
   658  001428  0100               	movlb	0	; force () banked
   659  00142A  6FD9               	movwf	(??_main+1)& (0+255),b
   660  00142C  0E45               	movlw	69
   661  00142E  6FD8               	movwf	??_main& (0+255),b
   662  001430  0EA9               	movlw	169
   663  001432                     u1637:
   664  001432  2EE8               	decfsz	wreg,f,c
   665  001434  D7FE               	bra	u1637
   666  001436  2FD8               	decfsz	??_main& (0+255),f,b
   667  001438  D7FC               	bra	u1637
   668  00143A  2FD9               	decfsz	(??_main+1)& (0+255),f,b
   669  00143C  D7FA               	bra	u1637
   670  00143E  F000 F000          	nop2	
   671  001442                     
   672                           ;main.c: 78: lcd_effaceAffichage();
   673  001442  EC02  F00F         	call	_lcd_effaceAffichage	;wreg free
   674  001446                     
   675                           ;main.c: 79: initTabVue();
   676  001446  EC0E  F007         	call	_initTabVue	;wreg free
   677  00144A                     
   678                           ;main.c: 80: rempliMines(nb);
   679  00144A  C0DA  F0C8         	movff	main@nb,rempliMines@nb
   680  00144E  C0DB  F0C9         	movff	main@nb+1,rempliMines@nb+1
   681  001452  EC15  F005         	call	_rempliMines	;wreg free
   682  001456                     
   683                           ;main.c: 81: metToucheCombien();
   684  001456  ECD1  F007         	call	_metToucheCombien	;wreg free
   685  00145A                     l2404:
   686                           
   687                           ;main.c: 85: {;main.c: 86: lcd_gotoXY(posX,posY);
   688  00145A  C0DE  F0B7         	movff	main@posY,lcd_gotoXY@y
   689  00145E  0100               	movlb	0	; force () banked
   690  001460  51DC               	movf	main@posX& (0+255),w,b
   691  001462  ECDB  F00C         	call	_lcd_gotoXY
   692  001466                     
   693                           ;main.c: 87: lcd_montreCurseur();
   694  001466  EC11  F00F         	call	_lcd_montreCurseur	;wreg free
   695  00146A                     
   696                           ;main.c: 88: deplace(&posX,&posY);
   697  00146A  0EDC               	movlw	low main@posX
   698  00146C  0100               	movlb	0	; force () banked
   699  00146E  6FB9               	movwf	deplace@x& (0+255),b
   700  001470  0E00               	movlw	high main@posX
   701  001472  6FBA               	movwf	(deplace@x+1)& (0+255),b
   702  001474  0EDE               	movlw	low main@posY
   703  001476  0100               	movlb	0	; force () banked
   704  001478  6FBB               	movwf	deplace@y& (0+255),b
   705  00147A  0E00               	movlw	high main@posY
   706  00147C  6FBC               	movwf	(deplace@y+1)& (0+255),b
   707  00147E  EC23  F006         	call	_deplace	;wreg free
   708  001482                     
   709                           ;main.c: 89: if(PORTBbits.RB1 == 0)
   710  001482  B281               	btfsc	129,1,c	;volatile
   711  001484  EF46  F00A         	goto	u1581
   712  001488  EF48  F00A         	goto	u1580
   713  00148C                     u1581:
   714  00148C  EF89  F00A         	goto	l2430
   715  001490                     u1580:
   716  001490                     l79:
   717  001490  A281               	btfss	129,1,c	;volatile
   718  001492  EF4D  F00A         	goto	u1591
   719  001496  EF4F  F00A         	goto	u1590
   720  00149A                     u1591:
   721  00149A  EF48  F00A         	goto	l79
   722  00149E                     u1590:
   723  00149E                     
   724                           ;main.c: 92: demine(posX,posY);
   725  00149E  C0DE  F0C7         	movff	main@posY,demine@y
   726  0014A2  0100               	movlb	0	; force () banked
   727  0014A4  51DC               	movf	main@posX& (0+255),w,b
   728  0014A6  EC96  F00A         	call	_demine
   729                           
   730                           ;main.c: 93: if(demine(posX,posY) == 0 || gagne(&nb)== 1)
   731  0014AA  C0DE  F0C7         	movff	main@posY,demine@y
   732  0014AE  0100               	movlb	0	; force () banked
   733  0014B0  51DC               	movf	main@posX& (0+255),w,b
   734  0014B2  EC96  F00A         	call	_demine
   735  0014B6  0900               	iorlw	0
   736  0014B8  B4D8               	btfsc	status,2,c
   737  0014BA  EF61  F00A         	goto	u1601
   738  0014BE  EF63  F00A         	goto	u1600
   739  0014C2                     u1601:
   740  0014C2  EF76  F00A         	goto	l2420
   741  0014C6                     u1600:
   742  0014C6  0EDA               	movlw	low main@nb
   743  0014C8  0100               	movlb	0	; force () banked
   744  0014CA  6FBA               	movwf	gagne@pMines& (0+255),b
   745  0014CC  0E00               	movlw	high main@nb
   746  0014CE  6FBB               	movwf	(gagne@pMines+1)& (0+255),b
   747  0014D0  EC3D  F009         	call	_gagne	;wreg free
   748  0014D4  06E8               	decf	wreg,f,c
   749  0014D6  A4D8               	btfss	status,2,c
   750  0014D8  EF70  F00A         	goto	u1611
   751  0014DC  EF72  F00A         	goto	u1610
   752  0014E0                     u1611:
   753  0014E0  EF89  F00A         	goto	l2430
   754  0014E4                     u1610:
   755  0014E4  EF76  F00A         	goto	l2420
   756  0014E8                     l2418:
   757                           
   758                           ;main.c: 96: {;main.c: 97: afficheTabMine();
   759  0014E8  EC8A  F00C         	call	_afficheTabMine	;wreg free
   760  0014EC                     l2420:
   761  0014EC  B281               	btfsc	129,1,c	;volatile
   762  0014EE  EF7B  F00A         	goto	u1621
   763  0014F2  EF7D  F00A         	goto	u1620
   764  0014F6                     u1621:
   765  0014F6  EF74  F00A         	goto	l2418
   766  0014FA                     u1620:
   767  0014FA                     
   768                           ;main.c: 98: };main.c: 99: lcd_effaceAffichage();
   769  0014FA  EC02  F00F         	call	_lcd_effaceAffichage	;wreg free
   770  0014FE                     
   771                           ;main.c: 100: initTabVue();
   772  0014FE  EC0E  F007         	call	_initTabVue	;wreg free
   773  001502                     
   774                           ;main.c: 101: rempliMines(nb);
   775  001502  C0DA  F0C8         	movff	main@nb,rempliMines@nb
   776  001506  C0DB  F0C9         	movff	main@nb+1,rempliMines@nb+1
   777  00150A  EC15  F005         	call	_rempliMines	;wreg free
   778  00150E                     
   779                           ;main.c: 102: metToucheCombien();
   780  00150E  ECD1  F007         	call	_metToucheCombien	;wreg free
   781  001512                     l2430:
   782                           
   783                           ;main.c: 103: };main.c: 104: };main.c: 106: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
   784  001512  0E21               	movlw	33
   785  001514  0100               	movlb	0	; force () banked
   786  001516  6FD8               	movwf	??_main& (0+255),b
   787  001518  0E76               	movlw	118
   788  00151A                     u1647:
   789  00151A  2EE8               	decfsz	wreg,f,c
   790  00151C  D7FE               	bra	u1647
   791  00151E  2FD8               	decfsz	??_main& (0+255),f,b
   792  001520  D7FC               	bra	u1647
   793  001522  F000               	nop	
   794  001524  EF2D  F00A         	goto	l2404
   795  001528  EF00  F000         	goto	start
   796  00152C                     __end_of_main:
   797                           	opt callstack 0
   798                           
   799 ;; *************** function _rempliMines *****************
   800 ;; Defined at:
   801 ;;		line 141 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  nb              2   20[BANK0 ] int 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  j               2   34[BANK0 ] int 
   806 ;;  i               2   32[BANK0 ] int 
   807 ;;  colonne         2   30[BANK0 ] int 
   808 ;;  ligne           2   28[BANK0 ] int 
   809 ;;  g               2   26[BANK0 ] int 
   810 ;;  endroitMine     1   25[BANK0 ] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       2       0       0       0       0       0
   821 ;;      Locals:         0      11       0       0       0       0       0
   822 ;;      Temps:          0       3       0       0       0       0       0
   823 ;;      Totals:         0      16       0       0       0       0       0
   824 ;;Total ram usage:       16 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		___awmod
   829 ;;		___wmul
   830 ;;		_rand
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text1
   837  000A2A                     __ptext1:
   838                           	opt callstack 0
   839  000A2A                     _rempliMines:
   840                           	opt callstack 28
   841  000A2A                     
   842                           ;main.c: 143: int i=0;
   843  000A2A  0E00               	movlw	0
   844  000A2C  0100               	movlb	0	; force () banked
   845  000A2E  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   846  000A30  0E00               	movlw	0
   847  000A32  6FD4               	movwf	rempliMines@i& (0+255),b
   848                           
   849                           ;main.c: 144: int j=0;
   850  000A34  0E00               	movlw	0
   851  000A36  0100               	movlb	0	; force () banked
   852  000A38  6FD7               	movwf	(rempliMines@j+1)& (0+255),b
   853  000A3A  0E00               	movlw	0
   854  000A3C  6FD6               	movwf	rempliMines@j& (0+255),b
   855                           
   856                           ;main.c: 145: int g=0;
   857  000A3E  0E00               	movlw	0
   858  000A40  0100               	movlb	0	; force () banked
   859  000A42  6FCF               	movwf	(rempliMines@g+1)& (0+255),b
   860  000A44  0E00               	movlw	0
   861  000A46  6FCE               	movwf	rempliMines@g& (0+255),b
   862                           
   863                           ;main.c: 146: char endroitMine =0;
   864  000A48  0E00               	movlw	0
   865  000A4A  0100               	movlb	0	; force () banked
   866  000A4C  6FCD               	movwf	rempliMines@endroitMine& (0+255),b
   867                           
   868                           ;main.c: 147: int ligne =0;
   869  000A4E  0E00               	movlw	0
   870  000A50  0100               	movlb	0	; force () banked
   871  000A52  6FD1               	movwf	(rempliMines@ligne+1)& (0+255),b
   872  000A54  0E00               	movlw	0
   873  000A56  6FD0               	movwf	rempliMines@ligne& (0+255),b
   874                           
   875                           ;main.c: 148: int colonne=0;
   876  000A58  0E00               	movlw	0
   877  000A5A  0100               	movlb	0	; force () banked
   878  000A5C  6FD3               	movwf	(rempliMines@colonne+1)& (0+255),b
   879  000A5E  0E00               	movlw	0
   880  000A60  6FD2               	movwf	rempliMines@colonne& (0+255),b
   881                           
   882                           ;main.c: 150: for(i=0;i<4;i++)
   883  000A62  0E00               	movlw	0
   884  000A64  0100               	movlb	0	; force () banked
   885  000A66  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   886  000A68  0E00               	movlw	0
   887  000A6A  6FD4               	movwf	rempliMines@i& (0+255),b
   888  000A6C                     
   889                           ; BSR set to: 0
   890  000A6C  0100               	movlb	0	; force () banked
   891  000A6E  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   892  000A70  EF43  F005         	goto	u1271
   893  000A74  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   894  000A76  E109               	bnz	u1270
   895  000A78  0E04               	movlw	4
   896  000A7A  5DD4               	subwf	rempliMines@i& (0+255),w,b
   897  000A7C  A0D8               	btfss	status,0,c
   898  000A7E  EF43  F005         	goto	u1271
   899  000A82  EF45  F005         	goto	u1270
   900  000A86                     u1271:
   901  000A86  EF47  F005         	goto	l2208
   902  000A8A                     u1270:
   903  000A8A  EF12  F006         	goto	l2232
   904  000A8E                     l2208:
   905                           
   906                           ; BSR set to: 0
   907                           ;main.c: 151: {;main.c: 152: for(j=0;j<20;j++)
   908  000A8E  0E00               	movlw	0
   909  000A90  0100               	movlb	0	; force () banked
   910  000A92  6FD7               	movwf	(rempliMines@j+1)& (0+255),b
   911  000A94  0E00               	movlw	0
   912  000A96  6FD6               	movwf	rempliMines@j& (0+255),b
   913  000A98                     
   914                           ; BSR set to: 0
   915  000A98  0100               	movlb	0	; force () banked
   916  000A9A  BFD7               	btfsc	(rempliMines@j+1)& (0+255),7,b
   917  000A9C  EF59  F005         	goto	u1281
   918  000AA0  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   919  000AA2  E109               	bnz	u1280
   920  000AA4  0E14               	movlw	20
   921  000AA6  5DD6               	subwf	rempliMines@j& (0+255),w,b
   922  000AA8  A0D8               	btfss	status,0,c
   923  000AAA  EF59  F005         	goto	u1281
   924  000AAE  EF5B  F005         	goto	u1280
   925  000AB2                     u1281:
   926  000AB2  EF5D  F005         	goto	l2214
   927  000AB6                     u1280:
   928  000AB6  EF93  F005         	goto	l2220
   929  000ABA                     l2214:
   930                           
   931                           ; BSR set to: 0
   932                           ;main.c: 153: {;main.c: 154: m_tabMines[i][j] = ' ';
   933  000ABA  C0D4  F0B4         	movff	rempliMines@i,___wmul@multiplier
   934  000ABE  C0D5  F0B5         	movff	rempliMines@i+1,___wmul@multiplier+1
   935  000AC2  0E00               	movlw	0
   936  000AC4  0100               	movlb	0	; force () banked
   937  000AC6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   938  000AC8  0E15               	movlw	21
   939  000ACA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   940  000ACC  ECD8  F00E         	call	___wmul	;wreg free
   941  000AD0  0E60               	movlw	low _m_tabMines
   942  000AD2  0100               	movlb	0	; force () banked
   943  000AD4  6FCA               	movwf	??_rempliMines& (0+255),b
   944  000AD6  0E00               	movlw	high _m_tabMines
   945  000AD8  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   946  000ADA  0100               	movlb	0	; force () banked
   947  000ADC  51B4               	movf	?___wmul& (0+255),w,b
   948  000ADE  0100               	movlb	0	; force () banked
   949  000AE0  27CA               	addwf	??_rempliMines& (0+255),f,b
   950  000AE2  0100               	movlb	0	; force () banked
   951  000AE4  51B5               	movf	(?___wmul+1)& (0+255),w,b
   952  000AE6  0100               	movlb	0	; force () banked
   953  000AE8  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   954  000AEA  0100               	movlb	0	; force () banked
   955  000AEC  51D6               	movf	rempliMines@j& (0+255),w,b
   956  000AEE  0100               	movlb	0	; force () banked
   957  000AF0  25CA               	addwf	??_rempliMines& (0+255),w,b
   958  000AF2  6ED9               	movwf	fsr2l,c
   959  000AF4  0100               	movlb	0	; force () banked
   960  000AF6  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   961  000AF8  0100               	movlb	0	; force () banked
   962  000AFA  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   963  000AFC  6EDA               	movwf	fsr2h,c
   964  000AFE  0E20               	movlw	32
   965  000B00  6EDF               	movwf	indf2,c
   966  000B02                     
   967                           ; BSR set to: 0
   968  000B02  0100               	movlb	0	; force () banked
   969  000B04  4BD6               	infsnz	rempliMines@j& (0+255),f,b
   970  000B06  2BD7               	incf	(rempliMines@j+1)& (0+255),f,b
   971  000B08                     
   972                           ; BSR set to: 0
   973  000B08  0100               	movlb	0	; force () banked
   974  000B0A  BFD7               	btfsc	(rempliMines@j+1)& (0+255),7,b
   975  000B0C  EF91  F005         	goto	u1291
   976  000B10  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   977  000B12  E109               	bnz	u1290
   978  000B14  0E14               	movlw	20
   979  000B16  5DD6               	subwf	rempliMines@j& (0+255),w,b
   980  000B18  A0D8               	btfss	status,0,c
   981  000B1A  EF91  F005         	goto	u1291
   982  000B1E  EF93  F005         	goto	u1290
   983  000B22                     u1291:
   984  000B22  EF5D  F005         	goto	l2214
   985  000B26                     u1290:
   986  000B26                     l2220:
   987                           
   988                           ; BSR set to: 0
   989  000B26  0100               	movlb	0	; force () banked
   990  000B28  4BD4               	infsnz	rempliMines@i& (0+255),f,b
   991  000B2A  2BD5               	incf	(rempliMines@i+1)& (0+255),f,b
   992  000B2C                     
   993                           ; BSR set to: 0
   994  000B2C  0100               	movlb	0	; force () banked
   995  000B2E  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   996  000B30  EFA3  F005         	goto	u1301
   997  000B34  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   998  000B36  E109               	bnz	u1300
   999  000B38  0E04               	movlw	4
  1000  000B3A  5DD4               	subwf	rempliMines@i& (0+255),w,b
  1001  000B3C  A0D8               	btfss	status,0,c
  1002  000B3E  EFA3  F005         	goto	u1301
  1003  000B42  EFA5  F005         	goto	u1300
  1004  000B46                     u1301:
  1005  000B46  EF47  F005         	goto	l2208
  1006  000B4A                     u1300:
  1007  000B4A  EF12  F006         	goto	l2232
  1008  000B4E                     l2224:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;main.c: 160: {;main.c: 161: colonne =rand()%20;
  1012  000B4E  ECE4  F00D         	call	_rand	;wreg free
  1013  000B52  C0C0  F0C2         	movff	?_rand,___awmod@dividend
  1014  000B56  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
  1015  000B5A  0E00               	movlw	0
  1016  000B5C  0100               	movlb	0	; force () banked
  1017  000B5E  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
  1018  000B60  0E14               	movlw	20
  1019  000B62  6FC4               	movwf	___awmod@divisor& (0+255),b
  1020  000B64  EC8F  F00B         	call	___awmod	;wreg free
  1021  000B68  C0C2  F0D2         	movff	?___awmod,rempliMines@colonne
  1022  000B6C  C0C3  F0D3         	movff	?___awmod+1,rempliMines@colonne+1
  1023                           
  1024                           ;main.c: 162: ligne = rand()%4;
  1025  000B70  ECE4  F00D         	call	_rand	;wreg free
  1026  000B74  0E03               	movlw	3
  1027  000B76  0100               	movlb	0	; force () banked
  1028  000B78  15C0               	andwf	?_rand& (0+255),w,b
  1029  000B7A  0100               	movlb	0	; force () banked
  1030  000B7C  6FD0               	movwf	rempliMines@ligne& (0+255),b
  1031  000B7E  6BD1               	clrf	(rempliMines@ligne+1)& (0+255),b
  1032  000B80                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 163: }while(m_tabMines[ligne][colonne] != ' ');
  1035  000B80  C0D0  F0B4         	movff	rempliMines@ligne,___wmul@multiplier
  1036  000B84  C0D1  F0B5         	movff	rempliMines@ligne+1,___wmul@multiplier+1
  1037  000B88  0E00               	movlw	0
  1038  000B8A  0100               	movlb	0	; force () banked
  1039  000B8C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1040  000B8E  0E15               	movlw	21
  1041  000B90  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1042  000B92  ECD8  F00E         	call	___wmul	;wreg free
  1043  000B96  0E60               	movlw	low _m_tabMines
  1044  000B98  0100               	movlb	0	; force () banked
  1045  000B9A  6FCA               	movwf	??_rempliMines& (0+255),b
  1046  000B9C  0E00               	movlw	high _m_tabMines
  1047  000B9E  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1048  000BA0  0100               	movlb	0	; force () banked
  1049  000BA2  51B4               	movf	?___wmul& (0+255),w,b
  1050  000BA4  0100               	movlb	0	; force () banked
  1051  000BA6  27CA               	addwf	??_rempliMines& (0+255),f,b
  1052  000BA8  0100               	movlb	0	; force () banked
  1053  000BAA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1054  000BAC  0100               	movlb	0	; force () banked
  1055  000BAE  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1056  000BB0  0100               	movlb	0	; force () banked
  1057  000BB2  51D2               	movf	rempliMines@colonne& (0+255),w,b
  1058  000BB4  0100               	movlb	0	; force () banked
  1059  000BB6  25CA               	addwf	??_rempliMines& (0+255),w,b
  1060  000BB8  6ED9               	movwf	fsr2l,c
  1061  000BBA  0100               	movlb	0	; force () banked
  1062  000BBC  51D3               	movf	(rempliMines@colonne+1)& (0+255),w,b
  1063  000BBE  0100               	movlb	0	; force () banked
  1064  000BC0  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1065  000BC2  6EDA               	movwf	fsr2h,c
  1066  000BC4  0E20               	movlw	32
  1067  000BC6  18DE               	xorwf	postinc2,w,c
  1068  000BC8  A4D8               	btfss	status,2,c
  1069  000BCA  EFE9  F005         	goto	u1311
  1070  000BCE  EFEB  F005         	goto	u1310
  1071  000BD2                     u1311:
  1072  000BD2  EFA7  F005         	goto	l2224
  1073  000BD6                     u1310:
  1074  000BD6                     
  1075                           ; BSR set to: 0
  1076                           ;main.c: 164: m_tabMines[ligne][colonne] = 2;
  1077  000BD6  C0D0  F0B4         	movff	rempliMines@ligne,___wmul@multiplier
  1078  000BDA  C0D1  F0B5         	movff	rempliMines@ligne+1,___wmul@multiplier+1
  1079  000BDE  0E00               	movlw	0
  1080  000BE0  0100               	movlb	0	; force () banked
  1081  000BE2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1082  000BE4  0E15               	movlw	21
  1083  000BE6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1084  000BE8  ECD8  F00E         	call	___wmul	;wreg free
  1085  000BEC  0E60               	movlw	low _m_tabMines
  1086  000BEE  0100               	movlb	0	; force () banked
  1087  000BF0  6FCA               	movwf	??_rempliMines& (0+255),b
  1088  000BF2  0E00               	movlw	high _m_tabMines
  1089  000BF4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1090  000BF6  0100               	movlb	0	; force () banked
  1091  000BF8  51B4               	movf	?___wmul& (0+255),w,b
  1092  000BFA  0100               	movlb	0	; force () banked
  1093  000BFC  27CA               	addwf	??_rempliMines& (0+255),f,b
  1094  000BFE  0100               	movlb	0	; force () banked
  1095  000C00  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1096  000C02  0100               	movlb	0	; force () banked
  1097  000C04  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1098  000C06  0100               	movlb	0	; force () banked
  1099  000C08  51D2               	movf	rempliMines@colonne& (0+255),w,b
  1100  000C0A  0100               	movlb	0	; force () banked
  1101  000C0C  25CA               	addwf	??_rempliMines& (0+255),w,b
  1102  000C0E  6ED9               	movwf	fsr2l,c
  1103  000C10  0100               	movlb	0	; force () banked
  1104  000C12  51D3               	movf	(rempliMines@colonne+1)& (0+255),w,b
  1105  000C14  0100               	movlb	0	; force () banked
  1106  000C16  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1107  000C18  6EDA               	movwf	fsr2h,c
  1108  000C1A  0E02               	movlw	2
  1109  000C1C  6EDF               	movwf	indf2,c
  1110  000C1E                     
  1111                           ; BSR set to: 0
  1112                           ;main.c: 165: g++;
  1113  000C1E  0100               	movlb	0	; force () banked
  1114  000C20  4BCE               	infsnz	rempliMines@g& (0+255),f,b
  1115  000C22  2BCF               	incf	(rempliMines@g+1)& (0+255),f,b
  1116  000C24                     l2232:
  1117                           
  1118                           ; BSR set to: 0
  1119  000C24  0100               	movlb	0	; force () banked
  1120  000C26  51C8               	movf	rempliMines@nb& (0+255),w,b
  1121  000C28  0100               	movlb	0	; force () banked
  1122  000C2A  19CE               	xorwf	rempliMines@g& (0+255),w,b
  1123  000C2C  E109               	bnz	u1321
  1124  000C2E  0100               	movlb	0	; force () banked
  1125  000C30  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1126  000C32  0100               	movlb	0	; force () banked
  1127  000C34  19CF               	xorwf	(rempliMines@g+1)& (0+255),w,b
  1128  000C36  A4D8               	btfss	status,2,c
  1129  000C38  EF20  F006         	goto	u1321
  1130  000C3C  EF22  F006         	goto	u1320
  1131  000C40                     u1321:
  1132  000C40  EFA7  F005         	goto	l2224
  1133  000C44                     u1320:
  1134  000C44                     
  1135                           ; BSR set to: 0
  1136  000C44  0012               	return		;funcret
  1137  000C46                     __end_of_rempliMines:
  1138                           	opt callstack 0
  1139                           
  1140 ;; *************** function _rand *****************
  1141 ;; Defined at:
  1142 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2   12[BANK0 ] int 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1156 ;;      Params:         0       2       0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0
  1159 ;;      Totals:         0       2       0       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    1
  1163 ;; This function calls:
  1164 ;;		___lmul
  1165 ;; This function is called by:
  1166 ;;		_rempliMines
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text2
  1171  001BC8                     __ptext2:
  1172                           	opt callstack 0
  1173  001BC8                     _rand:
  1174                           	opt callstack 28
  1175  001BC8  C0E0  F0B4         	movff	_randx,___lmul@multiplier
  1176  001BCC  C0E1  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1177  001BD0  C0E2  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1178  001BD4  C0E3  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1179  001BD8  0E6D               	movlw	109
  1180  001BDA  0100               	movlb	0	; () banked
  1181  001BDC  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1182  001BDE  0E4E               	movlw	78
  1183  001BE0  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1184  001BE2  0EC6               	movlw	198
  1185  001BE4  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1186  001BE6  0E41               	movlw	65
  1187  001BE8  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1188  001BEA  EC14  F00D         	call	___lmul	;wreg free
  1189  001BEE  C0B4  F0E0         	movff	?___lmul,_randx
  1190  001BF2  C0B5  F0E1         	movff	?___lmul+1,_randx+1
  1191  001BF6  C0B6  F0E2         	movff	?___lmul+2,_randx+2
  1192  001BFA  C0B7  F0E3         	movff	?___lmul+3,_randx+3
  1193  001BFE  0E39               	movlw	57
  1194  001C00  0100               	movlb	0	; () banked
  1195  001C02  27E0               	addwf	_randx& (0+255),f,b
  1196  001C04  0E30               	movlw	48
  1197  001C06  23E1               	addwfc	(_randx+1)& (0+255),f,b
  1198  001C08  0E00               	movlw	0
  1199  001C0A  23E2               	addwfc	(_randx+2)& (0+255),f,b
  1200  001C0C  0E00               	movlw	0
  1201  001C0E  23E3               	addwfc	(_randx+3)& (0+255),f,b
  1202  001C10                     
  1203                           ; BSR set to: 0
  1204  001C10  0EFF               	movlw	255
  1205  001C12  15E2               	andwf	(_randx+2)& (0+255),w,b
  1206  001C14  6FC0               	movwf	?_rand& (0+255),b
  1207  001C16  0E7F               	movlw	127
  1208  001C18  15E3               	andwf	(_randx+3)& (0+255),w,b
  1209  001C1A  6FC1               	movwf	(?_rand+1)& (0+255),b
  1210  001C1C                     
  1211                           ; BSR set to: 0
  1212  001C1C  0012               	return		;funcret
  1213  001C1E                     __end_of_rand:
  1214                           	opt callstack 0
  1215                           
  1216 ;; *************** function ___lmul *****************
  1217 ;; Defined at:
  1218 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1221 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  product         4    8[BANK0 ] unsigned long 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  4    0[BANK0 ] unsigned long 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1233 ;;      Params:         0       8       0       0       0       0       0
  1234 ;;      Locals:         0       4       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0
  1236 ;;      Totals:         0      12       0       0       0       0       0
  1237 ;;Total ram usage:       12 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_rand
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text3
  1247  001A28                     __ptext3:
  1248                           	opt callstack 0
  1249  001A28                     ___lmul:
  1250                           	opt callstack 28
  1251  001A28  0E00               	movlw	0
  1252  001A2A  0100               	movlb	0	; () banked
  1253  001A2C  6FBC               	movwf	___lmul@product& (0+255),b
  1254  001A2E  0E00               	movlw	0
  1255  001A30  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1256  001A32  0E00               	movlw	0
  1257  001A34  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1258  001A36  0E00               	movlw	0
  1259  001A38  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1260  001A3A                     l1944:
  1261                           
  1262                           ; BSR set to: 0
  1263  001A3A  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1264  001A3C  EF22  F00D         	goto	u911
  1265  001A40  EF24  F00D         	goto	u910
  1266  001A44                     u911:
  1267  001A44  EF2C  F00D         	goto	l1948
  1268  001A48                     u910:
  1269  001A48                     
  1270                           ; BSR set to: 0
  1271  001A48  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1272  001A4A  27BC               	addwf	___lmul@product& (0+255),f,b
  1273  001A4C  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1274  001A4E  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1275  001A50  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1276  001A52  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1277  001A54  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1278  001A56  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1279  001A58                     l1948:
  1280                           
  1281                           ; BSR set to: 0
  1282  001A58  90D8               	bcf	status,0,c
  1283  001A5A  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1284  001A5C  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1285  001A5E  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1286  001A60  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1287  001A62                     
  1288                           ; BSR set to: 0
  1289  001A62  90D8               	bcf	status,0,c
  1290  001A64  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1291  001A66  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1292  001A68  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1293  001A6A  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1294  001A6C  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1295  001A6E  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1296  001A70  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1297  001A72  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1298  001A74  A4D8               	btfss	status,2,c
  1299  001A76  EF3F  F00D         	goto	u921
  1300  001A7A  EF41  F00D         	goto	u920
  1301  001A7E                     u921:
  1302  001A7E  EF1D  F00D         	goto	l1944
  1303  001A82                     u920:
  1304  001A82                     
  1305                           ; BSR set to: 0
  1306  001A82  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1307  001A86  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1308  001A8A  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1309  001A8E  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1310  001A92                     
  1311                           ; BSR set to: 0
  1312  001A92  0012               	return		;funcret
  1313  001A94                     __end_of___lmul:
  1314                           	opt callstack 0
  1315                           
  1316 ;; *************** function ___awmod *****************
  1317 ;; Defined at:
  1318 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  dividend        2   14[BANK0 ] int 
  1321 ;;  divisor         2   16[BANK0 ] int 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  sign            1   19[BANK0 ] unsigned char 
  1324 ;;  counter         1   18[BANK0 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2   14[BANK0 ] int 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       4       0       0       0       0       0
  1335 ;;      Locals:         0       2       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       6       0       0       0       0       0
  1338 ;;Total ram usage:        6 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_rempliMines
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text4
  1348  00171E                     __ptext4:
  1349                           	opt callstack 0
  1350  00171E                     ___awmod:
  1351                           	opt callstack 29
  1352  00171E  0E00               	movlw	0
  1353  001720  0100               	movlb	0	; () banked
  1354  001722  6FC7               	movwf	___awmod@sign& (0+255),b
  1355  001724                     
  1356                           ; BSR set to: 0
  1357  001724  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1358  001726  EF99  F00B         	goto	u1150
  1359  00172A  EF97  F00B         	goto	u1151
  1360  00172E                     u1151:
  1361  00172E  EF9F  F00B         	goto	l2112
  1362  001732                     u1150:
  1363  001732                     
  1364                           ; BSR set to: 0
  1365  001732  6DC2               	negf	___awmod@dividend& (0+255),b
  1366  001734  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1367  001736  B0D8               	btfsc	status,0,c
  1368  001738  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1369  00173A                     
  1370                           ; BSR set to: 0
  1371  00173A  0E01               	movlw	1
  1372  00173C  6FC7               	movwf	___awmod@sign& (0+255),b
  1373  00173E                     l2112:
  1374                           
  1375                           ; BSR set to: 0
  1376  00173E  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1377  001740  EFA6  F00B         	goto	u1160
  1378  001744  EFA4  F00B         	goto	u1161
  1379  001748                     u1161:
  1380  001748  EFAA  F00B         	goto	l2116
  1381  00174C                     u1160:
  1382  00174C                     
  1383                           ; BSR set to: 0
  1384  00174C  6DC4               	negf	___awmod@divisor& (0+255),b
  1385  00174E  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1386  001750  B0D8               	btfsc	status,0,c
  1387  001752  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1388  001754                     l2116:
  1389                           
  1390                           ; BSR set to: 0
  1391  001754  51C4               	movf	___awmod@divisor& (0+255),w,b
  1392  001756  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1393  001758  B4D8               	btfsc	status,2,c
  1394  00175A  EFB1  F00B         	goto	u1171
  1395  00175E  EFB3  F00B         	goto	u1170
  1396  001762                     u1171:
  1397  001762  EFD7  F00B         	goto	l2132
  1398  001766                     u1170:
  1399  001766                     
  1400                           ; BSR set to: 0
  1401  001766  0E01               	movlw	1
  1402  001768  6FC6               	movwf	___awmod@counter& (0+255),b
  1403  00176A  EFBB  F00B         	goto	l2122
  1404  00176E                     l2120:
  1405                           
  1406                           ; BSR set to: 0
  1407  00176E  90D8               	bcf	status,0,c
  1408  001770  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1409  001772  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1410  001774  2BC6               	incf	___awmod@counter& (0+255),f,b
  1411  001776                     l2122:
  1412                           
  1413                           ; BSR set to: 0
  1414  001776  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1415  001778  EFC0  F00B         	goto	u1181
  1416  00177C  EFC2  F00B         	goto	u1180
  1417  001780                     u1181:
  1418  001780  EFB7  F00B         	goto	l2120
  1419  001784                     u1180:
  1420  001784                     l2124:
  1421                           
  1422                           ; BSR set to: 0
  1423  001784  51C4               	movf	___awmod@divisor& (0+255),w,b
  1424  001786  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1425  001788  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1426  00178A  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1427  00178C  A0D8               	btfss	status,0,c
  1428  00178E  EFCB  F00B         	goto	u1191
  1429  001792  EFCD  F00B         	goto	u1190
  1430  001796                     u1191:
  1431  001796  EFD1  F00B         	goto	l2128
  1432  00179A                     u1190:
  1433  00179A                     
  1434                           ; BSR set to: 0
  1435  00179A  51C4               	movf	___awmod@divisor& (0+255),w,b
  1436  00179C  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1437  00179E  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1438  0017A0  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1439  0017A2                     l2128:
  1440                           
  1441                           ; BSR set to: 0
  1442  0017A2  90D8               	bcf	status,0,c
  1443  0017A4  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1444  0017A6  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1445  0017A8                     
  1446                           ; BSR set to: 0
  1447  0017A8  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1448  0017AA  EFC2  F00B         	goto	l2124
  1449  0017AE                     l2132:
  1450                           
  1451                           ; BSR set to: 0
  1452  0017AE  51C7               	movf	___awmod@sign& (0+255),w,b
  1453  0017B0  B4D8               	btfsc	status,2,c
  1454  0017B2  EFDD  F00B         	goto	u1201
  1455  0017B6  EFDF  F00B         	goto	u1200
  1456  0017BA                     u1201:
  1457  0017BA  EFE3  F00B         	goto	l2136
  1458  0017BE                     u1200:
  1459  0017BE                     
  1460                           ; BSR set to: 0
  1461  0017BE  6DC2               	negf	___awmod@dividend& (0+255),b
  1462  0017C0  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1463  0017C2  B0D8               	btfsc	status,0,c
  1464  0017C4  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1465  0017C6                     l2136:
  1466                           
  1467                           ; BSR set to: 0
  1468  0017C6  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1469  0017CA  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1470  0017CE                     
  1471                           ; BSR set to: 0
  1472  0017CE  0012               	return		;funcret
  1473  0017D0                     __end_of___awmod:
  1474                           	opt callstack 0
  1475                           
  1476 ;; *************** function _metToucheCombien *****************
  1477 ;; Defined at:
  1478 ;;		line 209 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  j               2   22[BANK0 ] int 
  1483 ;;  i               2   20[BANK0 ] int 
  1484 ;;  nombre          1   19[BANK0 ] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         0       0       0       0       0       0       0
  1495 ;;      Locals:         0       5       0       0       0       0       0
  1496 ;;      Temps:          0       3       0       0       0       0       0
  1497 ;;      Totals:         0       8       0       0       0       0       0
  1498 ;;Total ram usage:        8 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    2
  1501 ;; This function calls:
  1502 ;;		___wmul
  1503 ;;		_calculToucheCombien
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text5
  1510  000FA2                     __ptext5:
  1511                           	opt callstack 0
  1512  000FA2                     _metToucheCombien:
  1513                           	opt callstack 28
  1514  000FA2                     
  1515                           ;main.c: 211: char nombre=0;
  1516  000FA2  0E00               	movlw	0
  1517  000FA4  0100               	movlb	0	; force () banked
  1518  000FA6  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1519                           
  1520                           ;main.c: 212: for(int i=0;i<4;i++)
  1521  000FA8  0E00               	movlw	0
  1522  000FAA  0100               	movlb	0	; force () banked
  1523  000FAC  6FC9               	movwf	(metToucheCombien@i+1)& (0+255),b
  1524  000FAE  0E00               	movlw	0
  1525  000FB0  6FC8               	movwf	metToucheCombien@i& (0+255),b
  1526  000FB2                     
  1527                           ; BSR set to: 0
  1528  000FB2  0100               	movlb	0	; force () banked
  1529  000FB4  BFC9               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1530  000FB6  EFE6  F007         	goto	u1331
  1531  000FBA  51C9               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1532  000FBC  E109               	bnz	u1330
  1533  000FBE  0E04               	movlw	4
  1534  000FC0  5DC8               	subwf	metToucheCombien@i& (0+255),w,b
  1535  000FC2  A0D8               	btfss	status,0,c
  1536  000FC4  EFE6  F007         	goto	u1331
  1537  000FC8  EFE8  F007         	goto	u1330
  1538  000FCC                     u1331:
  1539  000FCC  EFEA  F007         	goto	l2240
  1540  000FD0                     u1330:
  1541  000FD0  EF8D  F008         	goto	l130
  1542  000FD4                     l2240:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 213: {;main.c: 214: for(int j=0;j<20;j++)
  1546  000FD4  0E00               	movlw	0
  1547  000FD6  0100               	movlb	0	; force () banked
  1548  000FD8  6FCB               	movwf	(metToucheCombien@j+1)& (0+255),b
  1549  000FDA  0E00               	movlw	0
  1550  000FDC  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1551  000FDE                     
  1552                           ; BSR set to: 0
  1553  000FDE  0100               	movlb	0	; force () banked
  1554  000FE0  BFCB               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1555  000FE2  EFFC  F007         	goto	u1341
  1556  000FE6  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1557  000FE8  E109               	bnz	u1340
  1558  000FEA  0E14               	movlw	20
  1559  000FEC  5DCA               	subwf	metToucheCombien@j& (0+255),w,b
  1560  000FEE  A0D8               	btfss	status,0,c
  1561  000FF0  EFFC  F007         	goto	u1341
  1562  000FF4  EFFE  F007         	goto	u1340
  1563  000FF8                     u1341:
  1564  000FF8  EF00  F008         	goto	l2246
  1565  000FFC                     u1340:
  1566  000FFC  EF7B  F008         	goto	l2260
  1567  001000                     l2246:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 215: {;main.c: 216: if(m_tabMines[i][j] != 2)
  1571  001000  C0C8  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1572  001004  C0C9  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1573  001008  0E00               	movlw	0
  1574  00100A  0100               	movlb	0	; force () banked
  1575  00100C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1576  00100E  0E15               	movlw	21
  1577  001010  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1578  001012  ECD8  F00E         	call	___wmul	;wreg free
  1579  001016  0E60               	movlw	low _m_tabMines
  1580  001018  0100               	movlb	0	; force () banked
  1581  00101A  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1582  00101C  0E00               	movlw	high _m_tabMines
  1583  00101E  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1584  001020  0100               	movlb	0	; force () banked
  1585  001022  51B4               	movf	?___wmul& (0+255),w,b
  1586  001024  0100               	movlb	0	; force () banked
  1587  001026  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1588  001028  0100               	movlb	0	; force () banked
  1589  00102A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1590  00102C  0100               	movlb	0	; force () banked
  1591  00102E  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1592  001030  0100               	movlb	0	; force () banked
  1593  001032  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1594  001034  0100               	movlb	0	; force () banked
  1595  001036  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1596  001038  6ED9               	movwf	fsr2l,c
  1597  00103A  0100               	movlb	0	; force () banked
  1598  00103C  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1599  00103E  0100               	movlb	0	; force () banked
  1600  001040  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1601  001042  6EDA               	movwf	fsr2h,c
  1602  001044  0E02               	movlw	2
  1603  001046  18DE               	xorwf	postinc2,w,c
  1604  001048  B4D8               	btfsc	status,2,c
  1605  00104A  EF29  F008         	goto	u1351
  1606  00104E  EF2B  F008         	goto	u1350
  1607  001052                     u1351:
  1608  001052  EF37  F008         	goto	l2250
  1609  001056                     u1350:
  1610  001056                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 217: {;main.c: 218: nombre = (calculToucheCombien(i,j));
  1613  001056  C0C8  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1614  00105A  C0C9  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1615  00105E  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1616  001062  C0CB  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1617  001066  EC09  F003         	call	_calculToucheCombien	;wreg free
  1618  00106A  0100               	movlb	0	; force () banked
  1619  00106C  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1620  00106E                     l2250:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;main.c: 219: };main.c: 220: if(nombre != 0)
  1624  00106E  0100               	movlb	0	; force () banked
  1625  001070  51C7               	movf	metToucheCombien@nombre& (0+255),w,b
  1626  001072  B4D8               	btfsc	status,2,c
  1627  001074  EF3E  F008         	goto	u1361
  1628  001078  EF40  F008         	goto	u1360
  1629  00107C                     u1361:
  1630  00107C  EF66  F008         	goto	l2254
  1631  001080                     u1360:
  1632  001080                     
  1633                           ; BSR set to: 0
  1634                           ;main.c: 221: {;main.c: 222: m_tabMines[i][j] = nombre+48;
  1635  001080  C0C8  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1636  001084  C0C9  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1637  001088  0E00               	movlw	0
  1638  00108A  0100               	movlb	0	; force () banked
  1639  00108C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1640  00108E  0E15               	movlw	21
  1641  001090  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1642  001092  ECD8  F00E         	call	___wmul	;wreg free
  1643  001096  0E60               	movlw	low _m_tabMines
  1644  001098  0100               	movlb	0	; force () banked
  1645  00109A  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1646  00109C  0E00               	movlw	high _m_tabMines
  1647  00109E  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1648  0010A0  0100               	movlb	0	; force () banked
  1649  0010A2  51B4               	movf	?___wmul& (0+255),w,b
  1650  0010A4  0100               	movlb	0	; force () banked
  1651  0010A6  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1652  0010A8  0100               	movlb	0	; force () banked
  1653  0010AA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1654  0010AC  0100               	movlb	0	; force () banked
  1655  0010AE  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1656  0010B0  0100               	movlb	0	; force () banked
  1657  0010B2  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1658  0010B4  0100               	movlb	0	; force () banked
  1659  0010B6  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1660  0010B8  6ED9               	movwf	fsr2l,c
  1661  0010BA  0100               	movlb	0	; force () banked
  1662  0010BC  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1663  0010BE  0100               	movlb	0	; force () banked
  1664  0010C0  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1665  0010C2  6EDA               	movwf	fsr2h,c
  1666  0010C4  0100               	movlb	0	; force () banked
  1667  0010C6  51C7               	movf	metToucheCombien@nombre& (0+255),w,b
  1668  0010C8  0F30               	addlw	48
  1669  0010CA  6EDF               	movwf	indf2,c
  1670  0010CC                     l2254:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 224: };main.c: 225: nombre = 0;
  1674  0010CC  0E00               	movlw	0
  1675  0010CE  0100               	movlb	0	; force () banked
  1676  0010D0  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1677  0010D2                     
  1678                           ; BSR set to: 0
  1679  0010D2  0100               	movlb	0	; force () banked
  1680  0010D4  4BCA               	infsnz	metToucheCombien@j& (0+255),f,b
  1681  0010D6  2BCB               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1682  0010D8                     
  1683                           ; BSR set to: 0
  1684  0010D8  0100               	movlb	0	; force () banked
  1685  0010DA  BFCB               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1686  0010DC  EF79  F008         	goto	u1371
  1687  0010E0  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1688  0010E2  E109               	bnz	u1370
  1689  0010E4  0E14               	movlw	20
  1690  0010E6  5DCA               	subwf	metToucheCombien@j& (0+255),w,b
  1691  0010E8  A0D8               	btfss	status,0,c
  1692  0010EA  EF79  F008         	goto	u1371
  1693  0010EE  EF7B  F008         	goto	u1370
  1694  0010F2                     u1371:
  1695  0010F2  EF00  F008         	goto	l2246
  1696  0010F6                     u1370:
  1697  0010F6                     l2260:
  1698                           
  1699                           ; BSR set to: 0
  1700  0010F6  0100               	movlb	0	; force () banked
  1701  0010F8  4BC8               	infsnz	metToucheCombien@i& (0+255),f,b
  1702  0010FA  2BC9               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1703  0010FC                     
  1704                           ; BSR set to: 0
  1705  0010FC  0100               	movlb	0	; force () banked
  1706  0010FE  BFC9               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1707  001100  EF8B  F008         	goto	u1381
  1708  001104  51C9               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1709  001106  E109               	bnz	u1380
  1710  001108  0E04               	movlw	4
  1711  00110A  5DC8               	subwf	metToucheCombien@i& (0+255),w,b
  1712  00110C  A0D8               	btfss	status,0,c
  1713  00110E  EF8B  F008         	goto	u1381
  1714  001112  EF8D  F008         	goto	u1380
  1715  001116                     u1381:
  1716  001116  EFEA  F007         	goto	l2240
  1717  00111A                     u1380:
  1718  00111A                     l130:
  1719                           
  1720                           ; BSR set to: 0
  1721  00111A  0012               	return		;funcret
  1722  00111C                     __end_of_metToucheCombien:
  1723                           	opt callstack 0
  1724                           
  1725 ;; *************** function _calculToucheCombien *****************
  1726 ;; Defined at:
  1727 ;;		line 235 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  ligne           2    6[BANK0 ] int 
  1730 ;;  colonne         2    8[BANK0 ] int 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  nombre          1   15[BANK0 ] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         0       4       0       0       0       0       0
  1743 ;;      Locals:         0       1       0       0       0       0       0
  1744 ;;      Temps:          0       5       0       0       0       0       0
  1745 ;;      Totals:         0      10       0       0       0       0       0
  1746 ;;Total ram usage:       10 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		___wmul
  1751 ;; This function is called by:
  1752 ;;		_metToucheCombien
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text6
  1757  000612                     __ptext6:
  1758                           	opt callstack 0
  1759  000612                     _calculToucheCombien:
  1760                           	opt callstack 28
  1761  000612                     
  1762                           ;main.c: 237: char nombre=0;
  1763  000612  0E00               	movlw	0
  1764  000614  0100               	movlb	0	; force () banked
  1765  000616  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1766  000618                     
  1767                           ; BSR set to: 0
  1768                           ;main.c: 238: if((ligne-1 >= 4 || ligne+1 <= 4) && (colonne-1 >= 20 || colonne+1 <= 20) 
      +                          )
  1769  000618  0EFF               	movlw	255
  1770  00061A  0100               	movlb	0	; force () banked
  1771  00061C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1772  00061E  0EFF               	movlw	255
  1773  000620  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1774  000622  C0BA  F0C0         	movff	calculToucheCombien@ligne,??_calculToucheCombien+2
  1775  000626  C0BB  F0C1         	movff	calculToucheCombien@ligne+1,??_calculToucheCombien+3
  1776  00062A  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1777  00062C  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1778  00062E  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1779  000630  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1780  000632  BFC1               	btfsc	(??_calculToucheCombien+3)& (0+255),7,b
  1781  000634  EF27  F003         	goto	u930
  1782  000638  51C1               	movf	(??_calculToucheCombien+3)& (0+255),w,b
  1783  00063A  E107               	bnz	u931
  1784  00063C  0E04               	movlw	4
  1785  00063E  5DC0               	subwf	(??_calculToucheCombien+2)& (0+255),w,b
  1786  000640  B0D8               	btfsc	status,0,c
  1787  000642  EF25  F003         	goto	u931
  1788  000646  EF27  F003         	goto	u930
  1789  00064A                     u931:
  1790  00064A  EF3F  F003         	goto	l1968
  1791  00064E                     u930:
  1792  00064E                     
  1793                           ; BSR set to: 0
  1794  00064E  0E01               	movlw	1
  1795  000650  0100               	movlb	0	; force () banked
  1796  000652  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1797  000654  0100               	movlb	0	; force () banked
  1798  000656  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1799  000658  0E00               	movlw	0
  1800  00065A  0100               	movlb	0	; force () banked
  1801  00065C  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1802  00065E  0100               	movlb	0	; force () banked
  1803  000660  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1804  000662  BFBF               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1805  000664  EF3F  F003         	goto	u940
  1806  000668  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1807  00066A  E107               	bnz	u941
  1808  00066C  0E05               	movlw	5
  1809  00066E  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1810  000670  B0D8               	btfsc	status,0,c
  1811  000672  EF3D  F003         	goto	u941
  1812  000676  EF3F  F003         	goto	u940
  1813  00067A                     u941:
  1814  00067A  EF12  F005         	goto	l2004
  1815  00067E                     u940:
  1816  00067E                     l1968:
  1817                           
  1818                           ; BSR set to: 0
  1819  00067E  0EFF               	movlw	255
  1820  000680  0100               	movlb	0	; force () banked
  1821  000682  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1822  000684  0EFF               	movlw	255
  1823  000686  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1824  000688  C0BC  F0C0         	movff	calculToucheCombien@colonne,??_calculToucheCombien+2
  1825  00068C  C0BD  F0C1         	movff	calculToucheCombien@colonne+1,??_calculToucheCombien+3
  1826  000690  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1827  000692  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1828  000694  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1829  000696  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1830  000698  BFC1               	btfsc	(??_calculToucheCombien+3)& (0+255),7,b
  1831  00069A  EF5A  F003         	goto	u950
  1832  00069E  51C1               	movf	(??_calculToucheCombien+3)& (0+255),w,b
  1833  0006A0  E107               	bnz	u951
  1834  0006A2  0E14               	movlw	20
  1835  0006A4  5DC0               	subwf	(??_calculToucheCombien+2)& (0+255),w,b
  1836  0006A6  B0D8               	btfsc	status,0,c
  1837  0006A8  EF58  F003         	goto	u951
  1838  0006AC  EF5A  F003         	goto	u950
  1839  0006B0                     u951:
  1840  0006B0  EF72  F003         	goto	l1972
  1841  0006B4                     u950:
  1842  0006B4                     
  1843                           ; BSR set to: 0
  1844  0006B4  0E01               	movlw	1
  1845  0006B6  0100               	movlb	0	; force () banked
  1846  0006B8  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1847  0006BA  0100               	movlb	0	; force () banked
  1848  0006BC  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1849  0006BE  0E00               	movlw	0
  1850  0006C0  0100               	movlb	0	; force () banked
  1851  0006C2  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1852  0006C4  0100               	movlb	0	; force () banked
  1853  0006C6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1854  0006C8  BFBF               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1855  0006CA  EF72  F003         	goto	u960
  1856  0006CE  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1857  0006D0  E107               	bnz	u961
  1858  0006D2  0E15               	movlw	21
  1859  0006D4  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1860  0006D6  B0D8               	btfsc	status,0,c
  1861  0006D8  EF70  F003         	goto	u961
  1862  0006DC  EF72  F003         	goto	u960
  1863  0006E0                     u961:
  1864  0006E0  EF12  F005         	goto	l2004
  1865  0006E4                     u960:
  1866  0006E4                     l1972:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 239: {;main.c: 241: if(m_tabMines[ligne-1][colonne-1]== 2)
  1870  0006E4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1871  0006E8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1872  0006EC  0E00               	movlw	0
  1873  0006EE  0100               	movlb	0	; force () banked
  1874  0006F0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1875  0006F2  0E15               	movlw	21
  1876  0006F4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1877  0006F6  ECD8  F00E         	call	___wmul	;wreg free
  1878  0006FA  0EEA               	movlw	234
  1879  0006FC  0100               	movlb	0	; force () banked
  1880  0006FE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1881  000700  0EFF               	movlw	255
  1882  000702  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1883  000704  0E60               	movlw	low _m_tabMines
  1884  000706  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1885  000708  0E00               	movlw	high _m_tabMines
  1886  00070A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1887  00070C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1888  00070E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1889  000710  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1890  000712  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1891  000714  0100               	movlb	0	; force () banked
  1892  000716  51B4               	movf	?___wmul& (0+255),w,b
  1893  000718  0100               	movlb	0	; force () banked
  1894  00071A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1895  00071C  0100               	movlb	0	; force () banked
  1896  00071E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1897  000720  0100               	movlb	0	; force () banked
  1898  000722  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1899  000724  0100               	movlb	0	; force () banked
  1900  000726  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1901  000728  0100               	movlb	0	; force () banked
  1902  00072A  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1903  00072C  6ED9               	movwf	fsr2l,c
  1904  00072E  0100               	movlb	0	; force () banked
  1905  000730  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1906  000732  0100               	movlb	0	; force () banked
  1907  000734  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1908  000736  6EDA               	movwf	fsr2h,c
  1909  000738  0E02               	movlw	2
  1910  00073A  18DE               	xorwf	postinc2,w,c
  1911  00073C  A4D8               	btfss	status,2,c
  1912  00073E  EFA3  F003         	goto	u971
  1913  000742  EFA5  F003         	goto	u970
  1914  000746                     u971:
  1915  000746  EFA8  F003         	goto	l1976
  1916  00074A                     u970:
  1917  00074A                     
  1918                           ; BSR set to: 0
  1919                           ;main.c: 242: {;main.c: 243: nombre = nombre+1;
  1920  00074A  0100               	movlb	0	; force () banked
  1921  00074C  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1922  00074E  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1923  000750                     l1976:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main.c: 244: };main.c: 245: if(m_tabMines[ligne-1][colonne]== 2)
  1927  000750  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1928  000754  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1929  000758  0E00               	movlw	0
  1930  00075A  0100               	movlb	0	; force () banked
  1931  00075C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1932  00075E  0E15               	movlw	21
  1933  000760  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1934  000762  ECD8  F00E         	call	___wmul	;wreg free
  1935  000766  0EEB               	movlw	235
  1936  000768  0100               	movlb	0	; force () banked
  1937  00076A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1938  00076C  0EFF               	movlw	255
  1939  00076E  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1940  000770  0E60               	movlw	low _m_tabMines
  1941  000772  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1942  000774  0E00               	movlw	high _m_tabMines
  1943  000776  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1944  000778  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1945  00077A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1946  00077C  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1947  00077E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1948  000780  0100               	movlb	0	; force () banked
  1949  000782  51B4               	movf	?___wmul& (0+255),w,b
  1950  000784  0100               	movlb	0	; force () banked
  1951  000786  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1952  000788  0100               	movlb	0	; force () banked
  1953  00078A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1954  00078C  0100               	movlb	0	; force () banked
  1955  00078E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1956  000790  0100               	movlb	0	; force () banked
  1957  000792  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1958  000794  0100               	movlb	0	; force () banked
  1959  000796  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1960  000798  6ED9               	movwf	fsr2l,c
  1961  00079A  0100               	movlb	0	; force () banked
  1962  00079C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1963  00079E  0100               	movlb	0	; force () banked
  1964  0007A0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1965  0007A2  6EDA               	movwf	fsr2h,c
  1966  0007A4  0E02               	movlw	2
  1967  0007A6  18DE               	xorwf	postinc2,w,c
  1968  0007A8  A4D8               	btfss	status,2,c
  1969  0007AA  EFD9  F003         	goto	u981
  1970  0007AE  EFDB  F003         	goto	u980
  1971  0007B2                     u981:
  1972  0007B2  EFDE  F003         	goto	l1980
  1973  0007B6                     u980:
  1974  0007B6                     
  1975                           ; BSR set to: 0
  1976                           ;main.c: 246: {;main.c: 247: nombre = nombre+1;
  1977  0007B6  0100               	movlb	0	; force () banked
  1978  0007B8  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1979  0007BA  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1980  0007BC                     l1980:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;main.c: 248: };main.c: 249: if(m_tabMines[ligne-1][colonne+1]== 2)
  1984  0007BC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1985  0007C0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1986  0007C4  0E00               	movlw	0
  1987  0007C6  0100               	movlb	0	; force () banked
  1988  0007C8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1989  0007CA  0E15               	movlw	21
  1990  0007CC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1991  0007CE  ECD8  F00E         	call	___wmul	;wreg free
  1992  0007D2  0EEC               	movlw	236
  1993  0007D4  0100               	movlb	0	; force () banked
  1994  0007D6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1995  0007D8  0EFF               	movlw	255
  1996  0007DA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1997  0007DC  0E60               	movlw	low _m_tabMines
  1998  0007DE  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1999  0007E0  0E00               	movlw	high _m_tabMines
  2000  0007E2  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2001  0007E4  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2002  0007E6  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2003  0007E8  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2004  0007EA  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2005  0007EC  0100               	movlb	0	; force () banked
  2006  0007EE  51B4               	movf	?___wmul& (0+255),w,b
  2007  0007F0  0100               	movlb	0	; force () banked
  2008  0007F2  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2009  0007F4  0100               	movlb	0	; force () banked
  2010  0007F6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2011  0007F8  0100               	movlb	0	; force () banked
  2012  0007FA  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2013  0007FC  0100               	movlb	0	; force () banked
  2014  0007FE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2015  000800  0100               	movlb	0	; force () banked
  2016  000802  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2017  000804  6ED9               	movwf	fsr2l,c
  2018  000806  0100               	movlb	0	; force () banked
  2019  000808  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2020  00080A  0100               	movlb	0	; force () banked
  2021  00080C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2022  00080E  6EDA               	movwf	fsr2h,c
  2023  000810  0E02               	movlw	2
  2024  000812  18DE               	xorwf	postinc2,w,c
  2025  000814  A4D8               	btfss	status,2,c
  2026  000816  EF0F  F004         	goto	u991
  2027  00081A  EF11  F004         	goto	u990
  2028  00081E                     u991:
  2029  00081E  EF14  F004         	goto	l1984
  2030  000822                     u990:
  2031  000822                     
  2032                           ; BSR set to: 0
  2033                           ;main.c: 250: {;main.c: 251: nombre = nombre+1;
  2034  000822  0100               	movlb	0	; force () banked
  2035  000824  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2036  000826  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2037  000828                     l1984:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 252: };main.c: 253: if(m_tabMines[ligne][colonne-1]== 2)
  2041  000828  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2042  00082C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2043  000830  0E00               	movlw	0
  2044  000832  0100               	movlb	0	; force () banked
  2045  000834  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2046  000836  0E15               	movlw	21
  2047  000838  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2048  00083A  ECD8  F00E         	call	___wmul	;wreg free
  2049  00083E  0EFF               	movlw	255
  2050  000840  0100               	movlb	0	; force () banked
  2051  000842  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2052  000844  0EFF               	movlw	255
  2053  000846  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2054  000848  0E60               	movlw	low _m_tabMines
  2055  00084A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2056  00084C  0E00               	movlw	high _m_tabMines
  2057  00084E  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2058  000850  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2059  000852  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2060  000854  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2061  000856  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2062  000858  0100               	movlb	0	; force () banked
  2063  00085A  51B4               	movf	?___wmul& (0+255),w,b
  2064  00085C  0100               	movlb	0	; force () banked
  2065  00085E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2066  000860  0100               	movlb	0	; force () banked
  2067  000862  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2068  000864  0100               	movlb	0	; force () banked
  2069  000866  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2070  000868  0100               	movlb	0	; force () banked
  2071  00086A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2072  00086C  0100               	movlb	0	; force () banked
  2073  00086E  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2074  000870  6ED9               	movwf	fsr2l,c
  2075  000872  0100               	movlb	0	; force () banked
  2076  000874  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2077  000876  0100               	movlb	0	; force () banked
  2078  000878  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2079  00087A  6EDA               	movwf	fsr2h,c
  2080  00087C  0E02               	movlw	2
  2081  00087E  18DE               	xorwf	postinc2,w,c
  2082  000880  A4D8               	btfss	status,2,c
  2083  000882  EF45  F004         	goto	u1001
  2084  000886  EF47  F004         	goto	u1000
  2085  00088A                     u1001:
  2086  00088A  EF4A  F004         	goto	l1988
  2087  00088E                     u1000:
  2088  00088E                     
  2089                           ; BSR set to: 0
  2090                           ;main.c: 254: {;main.c: 255: nombre = nombre+1;
  2091  00088E  0100               	movlb	0	; force () banked
  2092  000890  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2093  000892  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2094  000894                     l1988:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 256: };main.c: 257: if(m_tabMines[ligne][colonne+1]== 2)
  2098  000894  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2099  000898  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2100  00089C  0E00               	movlw	0
  2101  00089E  0100               	movlb	0	; force () banked
  2102  0008A0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2103  0008A2  0E15               	movlw	21
  2104  0008A4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2105  0008A6  ECD8  F00E         	call	___wmul	;wreg free
  2106  0008AA  0E60               	movlw	low _m_tabMines
  2107  0008AC  0100               	movlb	0	; force () banked
  2108  0008AE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2109  0008B0  0E00               	movlw	high _m_tabMines
  2110  0008B2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2111  0008B4  0E01               	movlw	1
  2112  0008B6  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2113  0008B8  0E00               	movlw	0
  2114  0008BA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2115  0008BC  0100               	movlb	0	; force () banked
  2116  0008BE  51B4               	movf	?___wmul& (0+255),w,b
  2117  0008C0  0100               	movlb	0	; force () banked
  2118  0008C2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2119  0008C4  0100               	movlb	0	; force () banked
  2120  0008C6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2121  0008C8  0100               	movlb	0	; force () banked
  2122  0008CA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2123  0008CC  0100               	movlb	0	; force () banked
  2124  0008CE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2125  0008D0  0100               	movlb	0	; force () banked
  2126  0008D2  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2127  0008D4  6ED9               	movwf	fsr2l,c
  2128  0008D6  0100               	movlb	0	; force () banked
  2129  0008D8  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2130  0008DA  0100               	movlb	0	; force () banked
  2131  0008DC  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2132  0008DE  6EDA               	movwf	fsr2h,c
  2133  0008E0  0E02               	movlw	2
  2134  0008E2  18DE               	xorwf	postinc2,w,c
  2135  0008E4  A4D8               	btfss	status,2,c
  2136  0008E6  EF77  F004         	goto	u1011
  2137  0008EA  EF79  F004         	goto	u1010
  2138  0008EE                     u1011:
  2139  0008EE  EF7C  F004         	goto	l1992
  2140  0008F2                     u1010:
  2141  0008F2                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 258: {;main.c: 259: nombre = nombre+1;
  2144  0008F2  0100               	movlb	0	; force () banked
  2145  0008F4  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2146  0008F6  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2147  0008F8                     l1992:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;main.c: 260: };main.c: 261: if(m_tabMines[ligne+1][colonne-1]== 2)
  2151  0008F8  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2152  0008FC  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2153  000900  0E00               	movlw	0
  2154  000902  0100               	movlb	0	; force () banked
  2155  000904  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2156  000906  0E15               	movlw	21
  2157  000908  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2158  00090A  ECD8  F00E         	call	___wmul	;wreg free
  2159  00090E  0E60               	movlw	low _m_tabMines
  2160  000910  0100               	movlb	0	; force () banked
  2161  000912  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2162  000914  0E00               	movlw	high _m_tabMines
  2163  000916  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2164  000918  0E14               	movlw	20
  2165  00091A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2166  00091C  0E00               	movlw	0
  2167  00091E  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2168  000920  0100               	movlb	0	; force () banked
  2169  000922  51B4               	movf	?___wmul& (0+255),w,b
  2170  000924  0100               	movlb	0	; force () banked
  2171  000926  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2172  000928  0100               	movlb	0	; force () banked
  2173  00092A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2174  00092C  0100               	movlb	0	; force () banked
  2175  00092E  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2176  000930  0100               	movlb	0	; force () banked
  2177  000932  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2178  000934  0100               	movlb	0	; force () banked
  2179  000936  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2180  000938  6ED9               	movwf	fsr2l,c
  2181  00093A  0100               	movlb	0	; force () banked
  2182  00093C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2183  00093E  0100               	movlb	0	; force () banked
  2184  000940  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2185  000942  6EDA               	movwf	fsr2h,c
  2186  000944  0E02               	movlw	2
  2187  000946  18DE               	xorwf	postinc2,w,c
  2188  000948  A4D8               	btfss	status,2,c
  2189  00094A  EFA9  F004         	goto	u1021
  2190  00094E  EFAB  F004         	goto	u1020
  2191  000952                     u1021:
  2192  000952  EFAE  F004         	goto	l1996
  2193  000956                     u1020:
  2194  000956                     
  2195                           ; BSR set to: 0
  2196                           ;main.c: 262: {;main.c: 263: nombre = nombre+1;
  2197  000956  0100               	movlb	0	; force () banked
  2198  000958  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2199  00095A  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2200  00095C                     l1996:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;main.c: 264: };main.c: 265: if(m_tabMines[ligne+1][colonne]== 2)
  2204  00095C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2205  000960  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2206  000964  0E00               	movlw	0
  2207  000966  0100               	movlb	0	; force () banked
  2208  000968  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2209  00096A  0E15               	movlw	21
  2210  00096C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2211  00096E  ECD8  F00E         	call	___wmul	;wreg free
  2212  000972  0E60               	movlw	low _m_tabMines
  2213  000974  0100               	movlb	0	; force () banked
  2214  000976  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2215  000978  0E00               	movlw	high _m_tabMines
  2216  00097A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2217  00097C  0E15               	movlw	21
  2218  00097E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2219  000980  0E00               	movlw	0
  2220  000982  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2221  000984  0100               	movlb	0	; force () banked
  2222  000986  51B4               	movf	?___wmul& (0+255),w,b
  2223  000988  0100               	movlb	0	; force () banked
  2224  00098A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2225  00098C  0100               	movlb	0	; force () banked
  2226  00098E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2227  000990  0100               	movlb	0	; force () banked
  2228  000992  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2229  000994  0100               	movlb	0	; force () banked
  2230  000996  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2231  000998  0100               	movlb	0	; force () banked
  2232  00099A  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2233  00099C  6ED9               	movwf	fsr2l,c
  2234  00099E  0100               	movlb	0	; force () banked
  2235  0009A0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2236  0009A2  0100               	movlb	0	; force () banked
  2237  0009A4  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2238  0009A6  6EDA               	movwf	fsr2h,c
  2239  0009A8  0E02               	movlw	2
  2240  0009AA  18DE               	xorwf	postinc2,w,c
  2241  0009AC  A4D8               	btfss	status,2,c
  2242  0009AE  EFDB  F004         	goto	u1031
  2243  0009B2  EFDD  F004         	goto	u1030
  2244  0009B6                     u1031:
  2245  0009B6  EFE0  F004         	goto	l2000
  2246  0009BA                     u1030:
  2247  0009BA                     
  2248                           ; BSR set to: 0
  2249                           ;main.c: 266: {;main.c: 267: nombre = nombre+1;
  2250  0009BA  0100               	movlb	0	; force () banked
  2251  0009BC  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2252  0009BE  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2253  0009C0                     l2000:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;main.c: 268: };main.c: 269: if(m_tabMines[ligne+1][colonne+1]== 2)
  2257  0009C0  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2258  0009C4  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2259  0009C8  0E00               	movlw	0
  2260  0009CA  0100               	movlb	0	; force () banked
  2261  0009CC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2262  0009CE  0E15               	movlw	21
  2263  0009D0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2264  0009D2  ECD8  F00E         	call	___wmul	;wreg free
  2265  0009D6  0E60               	movlw	low _m_tabMines
  2266  0009D8  0100               	movlb	0	; force () banked
  2267  0009DA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2268  0009DC  0E00               	movlw	high _m_tabMines
  2269  0009DE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2270  0009E0  0E16               	movlw	22
  2271  0009E2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2272  0009E4  0E00               	movlw	0
  2273  0009E6  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2274  0009E8  0100               	movlb	0	; force () banked
  2275  0009EA  51B4               	movf	?___wmul& (0+255),w,b
  2276  0009EC  0100               	movlb	0	; force () banked
  2277  0009EE  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2278  0009F0  0100               	movlb	0	; force () banked
  2279  0009F2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2280  0009F4  0100               	movlb	0	; force () banked
  2281  0009F6  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2282  0009F8  0100               	movlb	0	; force () banked
  2283  0009FA  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2284  0009FC  0100               	movlb	0	; force () banked
  2285  0009FE  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2286  000A00  6ED9               	movwf	fsr2l,c
  2287  000A02  0100               	movlb	0	; force () banked
  2288  000A04  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2289  000A06  0100               	movlb	0	; force () banked
  2290  000A08  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2291  000A0A  6EDA               	movwf	fsr2h,c
  2292  000A0C  0E02               	movlw	2
  2293  000A0E  18DE               	xorwf	postinc2,w,c
  2294  000A10  A4D8               	btfss	status,2,c
  2295  000A12  EF0D  F005         	goto	u1041
  2296  000A16  EF0F  F005         	goto	u1040
  2297  000A1A                     u1041:
  2298  000A1A  EF12  F005         	goto	l2004
  2299  000A1E                     u1040:
  2300  000A1E                     
  2301                           ; BSR set to: 0
  2302                           ;main.c: 270: {;main.c: 271: nombre = nombre+1;
  2303  000A1E  0100               	movlb	0	; force () banked
  2304  000A20  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2305  000A22  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2306  000A24                     l2004:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 272: };main.c: 273: };main.c: 274: return nombre;
  2310  000A24  0100               	movlb	0	; force () banked
  2311  000A26  51C3               	movf	calculToucheCombien@nombre& (0+255),w,b
  2312  000A28                     
  2313                           ; BSR set to: 0
  2314  000A28  0012               	return		;funcret
  2315  000A2A                     __end_of_calculToucheCombien:
  2316                           	opt callstack 0
  2317                           
  2318 ;; *************** function _lcd_init *****************
  2319 ;; Defined at:
  2320 ;;		line 258 in file "Lcd4Lignes.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2334 ;;      Params:         0       0       0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    5
  2341 ;; This function calls:
  2342 ;;		_lcd_initCGRam
  2343 ;;		_lcd_resetSequence
  2344 ;;		_lcd_wrCom
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text7
  2351  001D88                     __ptext7:
  2352                           	opt callstack 0
  2353  001D88                     _lcd_init:
  2354                           	opt callstack 25
  2355  001D88                     
  2356                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2357  001D88  EC80  F00D         	call	_lcd_resetSequence	;wreg free
  2358                           
  2359                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2360  001D8C  0E28               	movlw	40
  2361  001D8E  EC4A  F00D         	call	_lcd_wrCom
  2362                           
  2363                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2364  001D92  0E0F               	movlw	15
  2365  001D94  EC4A  F00D         	call	_lcd_wrCom
  2366                           
  2367                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2368  001D98  0E01               	movlw	1
  2369  001D9A  EC4A  F00D         	call	_lcd_wrCom
  2370                           
  2371                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2372  001D9E  0E06               	movlw	6
  2373  001DA0  EC4A  F00D         	call	_lcd_wrCom
  2374                           
  2375                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2376  001DA4  0E80               	movlw	128
  2377  001DA6  EC4A  F00D         	call	_lcd_wrCom
  2378  001DAA                     
  2379                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2380  001DAA  ECE8  F00B         	call	_lcd_initCGRam	;wreg free
  2381  001DAE  0012               	return		;funcret
  2382  001DB0                     __end_of_lcd_init:
  2383                           	opt callstack 0
  2384                           
  2385 ;; *************** function _lcd_resetSequence *****************
  2386 ;; Defined at:
  2387 ;;		line 221 in file "Lcd4Lignes.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2401 ;;      Params:         0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0
  2403 ;;      Temps:          0       1       0       0       0       0       0
  2404 ;;      Totals:         0       1       0       0       0       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    1
  2408 ;; This function calls:
  2409 ;;		_lcd_ecrireDonnees
  2410 ;;		_lcd_strobeEnableBit
  2411 ;; This function is called by:
  2412 ;;		_lcd_init
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text8
  2417  001B00                     __ptext8:
  2418                           	opt callstack 0
  2419  001B00                     _lcd_resetSequence:
  2420                           	opt callstack 28
  2421  001B00                     
  2422                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2423  001B00  0E00               	movlw	0
  2424  001B02  6E95               	movwf	149,c	;volatile
  2425  001B04                     
  2426                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2427  001B04  0E0D               	movlw	13
  2428  001B06  0100               	movlb	0	; force () banked
  2429  001B08  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2430  001B0A  0EFB               	movlw	251
  2431  001B0C                     u1657:
  2432  001B0C  2EE8               	decfsz	wreg,f,c
  2433  001B0E  D7FE               	bra	u1657
  2434  001B10  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2435  001B12  D7FC               	bra	u1657
  2436  001B14  F000 F000          	nop2	
  2437  001B18                     
  2438                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2439  001B18  9080               	bcf	128,0,c	;volatile
  2440  001B1A                     
  2441                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2442  001B1A  9280               	bcf	128,1,c	;volatile
  2443  001B1C                     
  2444                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2445  001B1C  0E03               	movlw	3
  2446  001B1E  ECEC  F00E         	call	_lcd_ecrireDonnees
  2447  001B22                     
  2448                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2449  001B22  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2450  001B26                     
  2451                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2452  001B26  0E03               	movlw	3
  2453  001B28                     u1667:
  2454  001B28  2EE8               	decfsz	wreg,f,c
  2455  001B2A  D7FE               	bra	u1667
  2456  001B2C  F000               	nop	
  2457  001B2E                     
  2458                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2459  001B2E  0E03               	movlw	3
  2460  001B30  ECEC  F00E         	call	_lcd_ecrireDonnees
  2461  001B34                     
  2462                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2463  001B34  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2464  001B38                     
  2465                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2466  001B38  0E03               	movlw	3
  2467  001B3A                     u1677:
  2468  001B3A  2EE8               	decfsz	wreg,f,c
  2469  001B3C  D7FE               	bra	u1677
  2470  001B3E  F000               	nop	
  2471  001B40                     
  2472                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2473  001B40  0E03               	movlw	3
  2474  001B42  ECEC  F00E         	call	_lcd_ecrireDonnees
  2475  001B46                     
  2476                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2477  001B46  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2478  001B4A                     
  2479                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2480  001B4A  0E03               	movlw	3
  2481  001B4C                     u1687:
  2482  001B4C  2EE8               	decfsz	wreg,f,c
  2483  001B4E  D7FE               	bra	u1687
  2484  001B50  F000               	nop	
  2485  001B52                     
  2486                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2487  001B52  0E02               	movlw	2
  2488  001B54  ECEC  F00E         	call	_lcd_ecrireDonnees
  2489  001B58                     
  2490                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2491  001B58  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2492  001B5C                     
  2493                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2494  001B5C  0E03               	movlw	3
  2495  001B5E                     u1697:
  2496  001B5E  2EE8               	decfsz	wreg,f,c
  2497  001B60  D7FE               	bra	u1697
  2498  001B62  F000               	nop	
  2499  001B64                     
  2500                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2501  001B64  0E0F               	movlw	15
  2502  001B66  6E95               	movwf	149,c	;volatile
  2503  001B68  0012               	return		;funcret
  2504  001B6A                     __end_of_lcd_resetSequence:
  2505                           	opt callstack 0
  2506                           
  2507 ;; *************** function _lcd_initCGRam *****************
  2508 ;; Defined at:
  2509 ;;		line 417 in file "Lcd4Lignes.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  j               1    6[BANK0 ] unsigned char 
  2514 ;;  i               1    5[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2524 ;;      Params:         0       0       0       0       0       0       0
  2525 ;;      Locals:         0       2       0       0       0       0       0
  2526 ;;      Temps:          0       2       0       0       0       0       0
  2527 ;;      Totals:         0       4       0       0       0       0       0
  2528 ;;Total ram usage:        4 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    4
  2531 ;; This function calls:
  2532 ;;		_lcd_curseurHome
  2533 ;;		_lcd_wrCom
  2534 ;;		_lcd_wrData
  2535 ;; This function is called by:
  2536 ;;		_lcd_init
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text9
  2541  0017D0                     __ptext9:
  2542                           	opt callstack 0
  2543  0017D0                     _lcd_initCGRam:
  2544                           	opt callstack 25
  2545  0017D0                     
  2546                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2547  0017D0  0E40               	movlw	64
  2548  0017D2  EC4A  F00D         	call	_lcd_wrCom
  2549  0017D6                     
  2550                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2551  0017D6  0E00               	movlw	0
  2552  0017D8  0100               	movlb	0	; force () banked
  2553  0017DA  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2554  0017DC                     
  2555                           ; BSR set to: 0
  2556  0017DC  0E07               	movlw	7
  2557  0017DE  0100               	movlb	0	; force () banked
  2558  0017E0  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2559  0017E2  EFF5  F00B         	goto	u1111
  2560  0017E6  EFF7  F00B         	goto	u1110
  2561  0017EA                     u1111:
  2562  0017EA  EFF9  F00B         	goto	l2086
  2563  0017EE                     u1110:
  2564  0017EE  EF36  F00C         	goto	l2102
  2565  0017F2                     l2086:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2569  0017F2  0E00               	movlw	0
  2570  0017F4  0100               	movlb	0	; force () banked
  2571  0017F6  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2572  0017F8                     
  2573                           ; BSR set to: 0
  2574  0017F8  0E07               	movlw	7
  2575  0017FA  0100               	movlb	0	; force () banked
  2576  0017FC  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2577  0017FE  EF03  F00C         	goto	u1121
  2578  001802  EF05  F00C         	goto	u1120
  2579  001806                     u1121:
  2580  001806  EF07  F00C         	goto	l2092
  2581  00180A                     u1120:
  2582  00180A  EF2B  F00C         	goto	l2098
  2583  00180E                     l2092:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2587  00180E  0100               	movlb	0	; force () banked
  2588  001810  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2589  001812  0D08               	mullw	8
  2590  001814  0E54               	movlw	low _matCGRAM
  2591  001816  0100               	movlb	0	; force () banked
  2592  001818  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2593  00181A  0E01               	movlw	high _matCGRAM
  2594  00181C  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2595  00181E  50F3               	movf	243,w,c
  2596  001820  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2597  001822  50F4               	movf	244,w,c
  2598  001824  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2599  001826  0100               	movlb	0	; force () banked
  2600  001828  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2601  00182A  0100               	movlb	0	; force () banked
  2602  00182C  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2603  00182E  6ED9               	movwf	fsr2l,c
  2604  001830  0100               	movlb	0	; force () banked
  2605  001832  0E00               	movlw	0
  2606  001834  0100               	movlb	0	; force () banked
  2607  001836  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2608  001838  6EDA               	movwf	fsr2h,c
  2609  00183A  50DF               	movf	indf2,w,c
  2610  00183C  EC94  F00E         	call	_lcd_wrData
  2611  001840  0100               	movlb	0	; force () banked
  2612  001842  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2613  001844                     
  2614                           ; BSR set to: 0
  2615  001844  0E07               	movlw	7
  2616  001846  0100               	movlb	0	; force () banked
  2617  001848  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2618  00184A  EF29  F00C         	goto	u1131
  2619  00184E  EF2B  F00C         	goto	u1130
  2620  001852                     u1131:
  2621  001852  EF07  F00C         	goto	l2092
  2622  001856                     u1130:
  2623  001856                     l2098:
  2624                           
  2625                           ; BSR set to: 0
  2626  001856  0100               	movlb	0	; force () banked
  2627  001858  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2628  00185A                     
  2629                           ; BSR set to: 0
  2630  00185A  0E07               	movlw	7
  2631  00185C  0100               	movlb	0	; force () banked
  2632  00185E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2633  001860  EF34  F00C         	goto	u1141
  2634  001864  EF36  F00C         	goto	u1140
  2635  001868                     u1141:
  2636  001868  EFF9  F00B         	goto	l2086
  2637  00186C                     u1140:
  2638  00186C                     l2102:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2642  00186C  EC09  F00F         	call	_lcd_curseurHome	;wreg free
  2643  001870  0012               	return		;funcret
  2644  001872                     __end_of_lcd_initCGRam:
  2645                           	opt callstack 0
  2646                           
  2647 ;; *************** function _lcd_curseurHome *****************
  2648 ;; Defined at:
  2649 ;;		line 288 in file "Lcd4Lignes.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    3
  2670 ;; This function calls:
  2671 ;;		_lcd_wrCom
  2672 ;; This function is called by:
  2673 ;;		_lcd_initCGRam
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text10
  2678  001E12                     __ptext10:
  2679                           	opt callstack 0
  2680  001E12                     _lcd_curseurHome:
  2681                           	opt callstack 25
  2682  001E12                     
  2683                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2684  001E12  0E02               	movlw	2
  2685  001E14  EC4A  F00D         	call	_lcd_wrCom
  2686  001E18  0012               	return		;funcret
  2687  001E1A                     __end_of_lcd_curseurHome:
  2688                           	opt callstack 0
  2689                           
  2690 ;; *************** function _lcd_effaceAffichage *****************
  2691 ;; Defined at:
  2692 ;;		line 276 in file "Lcd4Lignes.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2706 ;;      Params:         0       0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    3
  2713 ;; This function calls:
  2714 ;;		_lcd_wrCom
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text11
  2721  001E04                     __ptext11:
  2722                           	opt callstack 0
  2723  001E04                     _lcd_effaceAffichage:
  2724                           	opt callstack 27
  2725  001E04                     
  2726                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  2727  001E04  0E01               	movlw	1
  2728  001E06  EC4A  F00D         	call	_lcd_wrCom
  2729                           
  2730                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  2731  001E0A  0E80               	movlw	128
  2732  001E0C  EC4A  F00D         	call	_lcd_wrCom
  2733  001E10  0012               	return		;funcret
  2734  001E12                     __end_of_lcd_effaceAffichage:
  2735                           	opt callstack 0
  2736                           
  2737 ;; *************** function _lcd_cacheCurseur *****************
  2738 ;; Defined at:
  2739 ;;		line 401 in file "Lcd4Lignes.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         0       0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    3
  2760 ;; This function calls:
  2761 ;;		_lcd_wrCom
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text12
  2768  001E1A                     __ptext12:
  2769                           	opt callstack 0
  2770  001E1A                     _lcd_cacheCurseur:
  2771                           	opt callstack 27
  2772  001E1A                     
  2773                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  2774  001E1A  0E0C               	movlw	12
  2775  001E1C  EC4A  F00D         	call	_lcd_wrCom
  2776  001E20  0012               	return		;funcret
  2777  001E22                     __end_of_lcd_cacheCurseur:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _initialisation *****************
  2781 ;; Defined at:
  2782 ;;		line 410 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2796 ;;      Params:         0       0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		_srand
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text13
  2811  001CF4                     __ptext13:
  2812                           	opt callstack 0
  2813  001CF4                     _initialisation:
  2814                           	opt callstack 29
  2815  001CF4                     
  2816                           ;main.c: 412: TRISD = 0;
  2817  001CF4  0E00               	movlw	0
  2818  001CF6  6E95               	movwf	149,c	;volatile
  2819                           
  2820                           ;main.c: 414: ANSELH = 0;
  2821  001CF8  0E00               	movlw	0
  2822  001CFA  6E7F               	movwf	127,c	;volatile
  2823  001CFC                     
  2824                           ;main.c: 415: TRISB = 0xFF;
  2825  001CFC  6893               	setf	147,c	;volatile
  2826                           
  2827                           ;main.c: 417: ANSEL = 0;
  2828  001CFE  0E00               	movlw	0
  2829  001D00  6E7E               	movwf	126,c	;volatile
  2830                           
  2831                           ;main.c: 418: TRISA = 0;
  2832  001D02  0E00               	movlw	0
  2833  001D04  6E92               	movwf	146,c	;volatile
  2834  001D06                     
  2835                           ;main.c: 422: T1CONbits.TMR1ON = 1;
  2836  001D06  80CD               	bsf	205,0,c	;volatile
  2837  001D08                     
  2838                           ;main.c: 423: srand(TMR1);
  2839  001D08  CFCE F0B4          	movff	4046,srand@x	;volatile
  2840  001D0C  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2841  001D10  ECFA  F00E         	call	_srand	;wreg free
  2842  001D14                     
  2843                           ;main.c: 426: ANSELbits.ANS7 = 1;
  2844  001D14  8E7E               	bsf	126,7,c	;volatile
  2845  001D16                     
  2846                           ;main.c: 428: ADCON0bits.ADON = 1;
  2847  001D16  80C2               	bsf	194,0,c	;volatile
  2848  001D18                     
  2849                           ;main.c: 429: ADCON1 = 0;
  2850  001D18  0E00               	movlw	0
  2851  001D1A  6EC1               	movwf	193,c	;volatile
  2852  001D1C                     
  2853                           ;main.c: 431: ADCON2bits.ADFM = 0;
  2854  001D1C  9EC0               	bcf	192,7,c	;volatile
  2855  001D1E                     
  2856                           ;main.c: 432: ADCON2bits.ACQT = 0;
  2857  001D1E  0EC7               	movlw	-57
  2858  001D20  16C0               	andwf	192,f,c	;volatile
  2859  001D22                     
  2860                           ;main.c: 433: ADCON2bits.ADCS = 0;
  2861  001D22  0EF8               	movlw	-8
  2862  001D24  16C0               	andwf	192,f,c	;volatile
  2863  001D26  0012               	return		;funcret
  2864  001D28                     __end_of_initialisation:
  2865                           	opt callstack 0
  2866                           
  2867 ;; *************** function _srand *****************
  2868 ;; Defined at:
  2869 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  x               2    0[BANK0 ] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		status,2
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:         0       2       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_initialisation
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text14
  2897  001DF4                     __ptext14:
  2898                           	opt callstack 0
  2899  001DF4                     _srand:
  2900                           	opt callstack 29
  2901  001DF4  C0B4  F0E0         	movff	srand@x,_randx
  2902  001DF8  C0B5  F0E1         	movff	srand@x+1,_randx+1
  2903  001DFC  0100               	movlb	0	; () banked
  2904  001DFE  6BE2               	clrf	(_randx+2)& (0+255),b
  2905  001E00  6BE3               	clrf	(_randx+3)& (0+255),b
  2906  001E02                     
  2907                           ; BSR set to: 0
  2908  001E02  0012               	return		;funcret
  2909  001E04                     __end_of_srand:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function _initTabVue *****************
  2913 ;; Defined at:
  2914 ;;		line 117 in file "main.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  g               2   19[BANK0 ] int 
  2919 ;;  j               2   21[BANK0 ] int 
  2920 ;;  i               2   17[BANK0 ] int 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       6       0       0       0       0       0
  2932 ;;      Temps:          0       2       0       0       0       0       0
  2933 ;;      Totals:         0       8       0       0       0       0       0
  2934 ;;Total ram usage:        8 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    5
  2937 ;; This function calls:
  2938 ;;		___wmul
  2939 ;;		_lcd_putMessage
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text15
  2946  000E1C                     __ptext15:
  2947                           	opt callstack 0
  2948  000E1C                     _initTabVue:
  2949                           	opt callstack 25
  2950  000E1C                     
  2951                           ;main.c: 119: int i,j =0;
  2952  000E1C  0E00               	movlw	0
  2953  000E1E  0100               	movlb	0	; force () banked
  2954  000E20  6FCA               	movwf	(initTabVue@j+1)& (0+255),b
  2955  000E22  0E00               	movlw	0
  2956  000E24  6FC9               	movwf	initTabVue@j& (0+255),b
  2957                           
  2958                           ;main.c: 121: for(i=0;i<4;i++)
  2959  000E26  0E00               	movlw	0
  2960  000E28  0100               	movlb	0	; force () banked
  2961  000E2A  6FC6               	movwf	(initTabVue@i+1)& (0+255),b
  2962  000E2C  0E00               	movlw	0
  2963  000E2E  6FC5               	movwf	initTabVue@i& (0+255),b
  2964  000E30                     
  2965                           ; BSR set to: 0
  2966  000E30  0100               	movlb	0	; force () banked
  2967  000E32  BFC6               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2968  000E34  EF25  F007         	goto	u1211
  2969  000E38  51C6               	movf	(initTabVue@i+1)& (0+255),w,b
  2970  000E3A  E109               	bnz	u1210
  2971  000E3C  0E04               	movlw	4
  2972  000E3E  5DC5               	subwf	initTabVue@i& (0+255),w,b
  2973  000E40  A0D8               	btfss	status,0,c
  2974  000E42  EF25  F007         	goto	u1211
  2975  000E46  EF27  F007         	goto	u1210
  2976  000E4A                     u1211:
  2977  000E4A  EF29  F007         	goto	l2174
  2978  000E4E                     u1210:
  2979  000E4E  EFD0  F007         	goto	l99
  2980  000E52                     l2174:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 122: {;main.c: 123: for(j=0;j<20;j++)
  2984  000E52  0E00               	movlw	0
  2985  000E54  0100               	movlb	0	; force () banked
  2986  000E56  6FCA               	movwf	(initTabVue@j+1)& (0+255),b
  2987  000E58  0E00               	movlw	0
  2988  000E5A  6FC9               	movwf	initTabVue@j& (0+255),b
  2989  000E5C                     
  2990                           ; BSR set to: 0
  2991  000E5C  0100               	movlb	0	; force () banked
  2992  000E5E  BFCA               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2993  000E60  EF3B  F007         	goto	u1221
  2994  000E64  51CA               	movf	(initTabVue@j+1)& (0+255),w,b
  2995  000E66  E109               	bnz	u1220
  2996  000E68  0E14               	movlw	20
  2997  000E6A  5DC9               	subwf	initTabVue@j& (0+255),w,b
  2998  000E6C  A0D8               	btfss	status,0,c
  2999  000E6E  EF3B  F007         	goto	u1221
  3000  000E72  EF3D  F007         	goto	u1220
  3001  000E76                     u1221:
  3002  000E76  EF3F  F007         	goto	l2180
  3003  000E7A                     u1220:
  3004  000E7A  EF75  F007         	goto	l2186
  3005  000E7E                     l2180:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;main.c: 124: {;main.c: 125: m_tabVue[i][j] = 1;
  3009  000E7E  C0C5  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3010  000E82  C0C6  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3011  000E86  0E00               	movlw	0
  3012  000E88  0100               	movlb	0	; force () banked
  3013  000E8A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3014  000E8C  0E15               	movlw	21
  3015  000E8E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3016  000E90  ECD8  F00E         	call	___wmul	;wreg free
  3017  000E94  0E00               	movlw	low _m_tabVue
  3018  000E96  0100               	movlb	0	; force () banked
  3019  000E98  6FC3               	movwf	??_initTabVue& (0+255),b
  3020  000E9A  0E01               	movlw	high _m_tabVue
  3021  000E9C  6FC4               	movwf	(??_initTabVue+1)& (0+255),b
  3022  000E9E  0100               	movlb	0	; force () banked
  3023  000EA0  51B4               	movf	?___wmul& (0+255),w,b
  3024  000EA2  0100               	movlb	0	; force () banked
  3025  000EA4  27C3               	addwf	??_initTabVue& (0+255),f,b
  3026  000EA6  0100               	movlb	0	; force () banked
  3027  000EA8  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3028  000EAA  0100               	movlb	0	; force () banked
  3029  000EAC  23C4               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3030  000EAE  0100               	movlb	0	; force () banked
  3031  000EB0  51C9               	movf	initTabVue@j& (0+255),w,b
  3032  000EB2  0100               	movlb	0	; force () banked
  3033  000EB4  25C3               	addwf	??_initTabVue& (0+255),w,b
  3034  000EB6  6ED9               	movwf	fsr2l,c
  3035  000EB8  0100               	movlb	0	; force () banked
  3036  000EBA  51CA               	movf	(initTabVue@j+1)& (0+255),w,b
  3037  000EBC  0100               	movlb	0	; force () banked
  3038  000EBE  21C4               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3039  000EC0  6EDA               	movwf	fsr2h,c
  3040  000EC2  0E01               	movlw	1
  3041  000EC4  6EDF               	movwf	indf2,c
  3042  000EC6                     
  3043                           ; BSR set to: 0
  3044  000EC6  0100               	movlb	0	; force () banked
  3045  000EC8  4BC9               	infsnz	initTabVue@j& (0+255),f,b
  3046  000ECA  2BCA               	incf	(initTabVue@j+1)& (0+255),f,b
  3047  000ECC                     
  3048                           ; BSR set to: 0
  3049  000ECC  0100               	movlb	0	; force () banked
  3050  000ECE  BFCA               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3051  000ED0  EF73  F007         	goto	u1231
  3052  000ED4  51CA               	movf	(initTabVue@j+1)& (0+255),w,b
  3053  000ED6  E109               	bnz	u1230
  3054  000ED8  0E14               	movlw	20
  3055  000EDA  5DC9               	subwf	initTabVue@j& (0+255),w,b
  3056  000EDC  A0D8               	btfss	status,0,c
  3057  000EDE  EF73  F007         	goto	u1231
  3058  000EE2  EF75  F007         	goto	u1230
  3059  000EE6                     u1231:
  3060  000EE6  EF3F  F007         	goto	l2180
  3061  000EEA                     u1230:
  3062  000EEA                     l2186:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;main.c: 126: };main.c: 127: for(int g =0;g<4;g++)
  3066  000EEA  0E00               	movlw	0
  3067  000EEC  0100               	movlb	0	; force () banked
  3068  000EEE  6FC8               	movwf	(initTabVue@g+1)& (0+255),b
  3069  000EF0  0E00               	movlw	0
  3070  000EF2  6FC7               	movwf	initTabVue@g& (0+255),b
  3071  000EF4                     
  3072                           ; BSR set to: 0
  3073  000EF4  0100               	movlb	0	; force () banked
  3074  000EF6  BFC8               	btfsc	(initTabVue@g+1)& (0+255),7,b
  3075  000EF8  EF87  F007         	goto	u1241
  3076  000EFC  51C8               	movf	(initTabVue@g+1)& (0+255),w,b
  3077  000EFE  E109               	bnz	u1240
  3078  000F00  0E04               	movlw	4
  3079  000F02  5DC7               	subwf	initTabVue@g& (0+255),w,b
  3080  000F04  A0D8               	btfss	status,0,c
  3081  000F06  EF87  F007         	goto	u1241
  3082  000F0A  EF89  F007         	goto	u1240
  3083  000F0E                     u1241:
  3084  000F0E  EF8B  F007         	goto	l2192
  3085  000F12                     u1240:
  3086  000F12  EFBE  F007         	goto	l2198
  3087  000F16                     l2192:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;main.c: 128: {;main.c: 130: lcd_putMessage(m_tabVue[g]);
  3091  000F16  C0C7  F0B4         	movff	initTabVue@g,___wmul@multiplier
  3092  000F1A  C0C8  F0B5         	movff	initTabVue@g+1,___wmul@multiplier+1
  3093  000F1E  0E00               	movlw	0
  3094  000F20  0100               	movlb	0	; force () banked
  3095  000F22  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3096  000F24  0E15               	movlw	21
  3097  000F26  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3098  000F28  ECD8  F00E         	call	___wmul	;wreg free
  3099  000F2C  0E00               	movlw	low _m_tabVue
  3100  000F2E  0100               	movlb	0	; force () banked
  3101  000F30  25B4               	addwf	?___wmul& (0+255),w,b
  3102  000F32  0100               	movlb	0	; force () banked
  3103  000F34  6FC3               	movwf	??_initTabVue& (0+255),b
  3104  000F36  0E01               	movlw	high _m_tabVue
  3105  000F38  0100               	movlb	0	; force () banked
  3106  000F3A  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  3107  000F3C  0100               	movlb	0	; force () banked
  3108  000F3E  6FC4               	movwf	(??_initTabVue+1)& (0+255),b
  3109  000F40  C0C3  F0BA         	movff	??_initTabVue,lcd_putMessage@chaine
  3110  000F44  C0C4  F0BB         	movff	??_initTabVue+1,lcd_putMessage@chaine+1
  3111  000F48  0100               	movlb	0	; force () banked
  3112  000F4A  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3113  000F4C  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3114  000F4E  A4D8               	btfss	status,2,c
  3115  000F50  0E20               	movlw	32
  3116  000F52  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3117  000F54  EC35  F00B         	call	_lcd_putMessage	;wreg free
  3118  000F58  0100               	movlb	0	; force () banked
  3119  000F5A  4BC7               	infsnz	initTabVue@g& (0+255),f,b
  3120  000F5C  2BC8               	incf	(initTabVue@g+1)& (0+255),f,b
  3121  000F5E                     
  3122                           ; BSR set to: 0
  3123  000F5E  0100               	movlb	0	; force () banked
  3124  000F60  BFC8               	btfsc	(initTabVue@g+1)& (0+255),7,b
  3125  000F62  EFBC  F007         	goto	u1251
  3126  000F66  51C8               	movf	(initTabVue@g+1)& (0+255),w,b
  3127  000F68  E109               	bnz	u1250
  3128  000F6A  0E04               	movlw	4
  3129  000F6C  5DC7               	subwf	initTabVue@g& (0+255),w,b
  3130  000F6E  A0D8               	btfss	status,0,c
  3131  000F70  EFBC  F007         	goto	u1251
  3132  000F74  EFBE  F007         	goto	u1250
  3133  000F78                     u1251:
  3134  000F78  EF8B  F007         	goto	l2192
  3135  000F7C                     u1250:
  3136  000F7C                     l2198:
  3137                           
  3138                           ; BSR set to: 0
  3139  000F7C  0100               	movlb	0	; force () banked
  3140  000F7E  4BC5               	infsnz	initTabVue@i& (0+255),f,b
  3141  000F80  2BC6               	incf	(initTabVue@i+1)& (0+255),f,b
  3142  000F82                     
  3143                           ; BSR set to: 0
  3144  000F82  0100               	movlb	0	; force () banked
  3145  000F84  BFC6               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3146  000F86  EFCE  F007         	goto	u1261
  3147  000F8A  51C6               	movf	(initTabVue@i+1)& (0+255),w,b
  3148  000F8C  E109               	bnz	u1260
  3149  000F8E  0E04               	movlw	4
  3150  000F90  5DC5               	subwf	initTabVue@i& (0+255),w,b
  3151  000F92  A0D8               	btfss	status,0,c
  3152  000F94  EFCE  F007         	goto	u1261
  3153  000F98  EFD0  F007         	goto	u1260
  3154  000F9C                     u1261:
  3155  000F9C  EF29  F007         	goto	l2174
  3156  000FA0                     u1260:
  3157  000FA0                     l99:
  3158                           
  3159                           ; BSR set to: 0
  3160  000FA0  0012               	return		;funcret
  3161  000FA2                     __end_of_initTabVue:
  3162                           	opt callstack 0
  3163                           
  3164 ;; *************** function _gagne *****************
  3165 ;; Defined at:
  3166 ;;		line 177 in file "main.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  pMines          2    6[BANK0 ] PTR int 
  3169 ;;		 -> main@nb(2), 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  j               2   15[BANK0 ] int 
  3172 ;;  i               2   13[BANK0 ] int 
  3173 ;;  nbrTuile        2   11[BANK0 ] int 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         0       2       0       0       0       0       0
  3184 ;;      Locals:         0       6       0       0       0       0       0
  3185 ;;      Temps:          0       3       0       0       0       0       0
  3186 ;;      Totals:         0      11       0       0       0       0       0
  3187 ;;Total ram usage:       11 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    1
  3190 ;; This function calls:
  3191 ;;		___wmul
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text16
  3198  00127A                     __ptext16:
  3199                           	opt callstack 0
  3200  00127A                     _gagne:
  3201                           	opt callstack 29
  3202  00127A                     
  3203                           ;main.c: 179: int nbrTuile =0;
  3204  00127A  0E00               	movlw	0
  3205  00127C  0100               	movlb	0	; force () banked
  3206  00127E  6FC0               	movwf	(gagne@nbrTuile+1)& (0+255),b
  3207  001280  0E00               	movlw	0
  3208  001282  6FBF               	movwf	gagne@nbrTuile& (0+255),b
  3209                           
  3210                           ;main.c: 180: for(int i=0;i<4;i++)
  3211  001284  0E00               	movlw	0
  3212  001286  0100               	movlb	0	; force () banked
  3213  001288  6FC2               	movwf	(gagne@i+1)& (0+255),b
  3214  00128A  0E00               	movlw	0
  3215  00128C  6FC1               	movwf	gagne@i& (0+255),b
  3216  00128E                     
  3217                           ; BSR set to: 0
  3218  00128E  0100               	movlb	0	; force () banked
  3219  001290  BFC2               	btfsc	(gagne@i+1)& (0+255),7,b
  3220  001292  EF54  F009         	goto	u1491
  3221  001296  51C2               	movf	(gagne@i+1)& (0+255),w,b
  3222  001298  E109               	bnz	u1490
  3223  00129A  0E04               	movlw	4
  3224  00129C  5DC1               	subwf	gagne@i& (0+255),w,b
  3225  00129E  A0D8               	btfss	status,0,c
  3226  0012A0  EF54  F009         	goto	u1491
  3227  0012A4  EF56  F009         	goto	u1490
  3228  0012A8                     u1491:
  3229  0012A8  EF58  F009         	goto	l2328
  3230  0012AC                     u1490:
  3231  0012AC  EFBF  F009         	goto	l2344
  3232  0012B0                     l2328:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;main.c: 181: {;main.c: 182: for(int j=0;j<20;j++)
  3236  0012B0  0E00               	movlw	0
  3237  0012B2  0100               	movlb	0	; force () banked
  3238  0012B4  6FC4               	movwf	(gagne@j+1)& (0+255),b
  3239  0012B6  0E00               	movlw	0
  3240  0012B8  6FC3               	movwf	gagne@j& (0+255),b
  3241  0012BA                     
  3242                           ; BSR set to: 0
  3243  0012BA  0100               	movlb	0	; force () banked
  3244  0012BC  BFC4               	btfsc	(gagne@j+1)& (0+255),7,b
  3245  0012BE  EF6A  F009         	goto	u1501
  3246  0012C2  51C4               	movf	(gagne@j+1)& (0+255),w,b
  3247  0012C4  E109               	bnz	u1500
  3248  0012C6  0E14               	movlw	20
  3249  0012C8  5DC3               	subwf	gagne@j& (0+255),w,b
  3250  0012CA  A0D8               	btfss	status,0,c
  3251  0012CC  EF6A  F009         	goto	u1501
  3252  0012D0  EF6C  F009         	goto	u1500
  3253  0012D4                     u1501:
  3254  0012D4  EF6E  F009         	goto	l2334
  3255  0012D8                     u1500:
  3256  0012D8  EFAD  F009         	goto	l2340
  3257  0012DC                     l2334:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;main.c: 183: {;main.c: 184: if(m_tabVue[i][j] == 1)
  3261  0012DC  C0C1  F0B4         	movff	gagne@i,___wmul@multiplier
  3262  0012E0  C0C2  F0B5         	movff	gagne@i+1,___wmul@multiplier+1
  3263  0012E4  0E00               	movlw	0
  3264  0012E6  0100               	movlb	0	; force () banked
  3265  0012E8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3266  0012EA  0E15               	movlw	21
  3267  0012EC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3268  0012EE  ECD8  F00E         	call	___wmul	;wreg free
  3269  0012F2  0E00               	movlw	low _m_tabVue
  3270  0012F4  0100               	movlb	0	; force () banked
  3271  0012F6  6FBC               	movwf	??_gagne& (0+255),b
  3272  0012F8  0E01               	movlw	high _m_tabVue
  3273  0012FA  6FBD               	movwf	(??_gagne+1)& (0+255),b
  3274  0012FC  0100               	movlb	0	; force () banked
  3275  0012FE  51B4               	movf	?___wmul& (0+255),w,b
  3276  001300  0100               	movlb	0	; force () banked
  3277  001302  27BC               	addwf	??_gagne& (0+255),f,b
  3278  001304  0100               	movlb	0	; force () banked
  3279  001306  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3280  001308  0100               	movlb	0	; force () banked
  3281  00130A  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  3282  00130C  0100               	movlb	0	; force () banked
  3283  00130E  51C3               	movf	gagne@j& (0+255),w,b
  3284  001310  0100               	movlb	0	; force () banked
  3285  001312  25BC               	addwf	??_gagne& (0+255),w,b
  3286  001314  6ED9               	movwf	fsr2l,c
  3287  001316  0100               	movlb	0	; force () banked
  3288  001318  51C4               	movf	(gagne@j+1)& (0+255),w,b
  3289  00131A  0100               	movlb	0	; force () banked
  3290  00131C  21BD               	addwfc	(??_gagne+1)& (0+255),w,b
  3291  00131E  6EDA               	movwf	fsr2h,c
  3292  001320  04DE               	decf	postinc2,w,c
  3293  001322  A4D8               	btfss	status,2,c
  3294  001324  EF96  F009         	goto	u1511
  3295  001328  EF98  F009         	goto	u1510
  3296  00132C                     u1511:
  3297  00132C  EF9B  F009         	goto	l118
  3298  001330                     u1510:
  3299  001330                     
  3300                           ; BSR set to: 0
  3301                           ;main.c: 185: {;main.c: 186: nbrTuile++;
  3302  001330  0100               	movlb	0	; force () banked
  3303  001332  4BBF               	infsnz	gagne@nbrTuile& (0+255),f,b
  3304  001334  2BC0               	incf	(gagne@nbrTuile+1)& (0+255),f,b
  3305  001336                     l118:
  3306                           
  3307                           ; BSR set to: 0
  3308  001336  0100               	movlb	0	; force () banked
  3309  001338  4BC3               	infsnz	gagne@j& (0+255),f,b
  3310  00133A  2BC4               	incf	(gagne@j+1)& (0+255),f,b
  3311  00133C                     
  3312                           ; BSR set to: 0
  3313  00133C  0100               	movlb	0	; force () banked
  3314  00133E  BFC4               	btfsc	(gagne@j+1)& (0+255),7,b
  3315  001340  EFAB  F009         	goto	u1521
  3316  001344  51C4               	movf	(gagne@j+1)& (0+255),w,b
  3317  001346  E109               	bnz	u1520
  3318  001348  0E14               	movlw	20
  3319  00134A  5DC3               	subwf	gagne@j& (0+255),w,b
  3320  00134C  A0D8               	btfss	status,0,c
  3321  00134E  EFAB  F009         	goto	u1521
  3322  001352  EFAD  F009         	goto	u1520
  3323  001356                     u1521:
  3324  001356  EF6E  F009         	goto	l2334
  3325  00135A                     u1520:
  3326  00135A                     l2340:
  3327                           
  3328                           ; BSR set to: 0
  3329  00135A  0100               	movlb	0	; force () banked
  3330  00135C  4BC1               	infsnz	gagne@i& (0+255),f,b
  3331  00135E  2BC2               	incf	(gagne@i+1)& (0+255),f,b
  3332  001360                     
  3333                           ; BSR set to: 0
  3334  001360  0100               	movlb	0	; force () banked
  3335  001362  BFC2               	btfsc	(gagne@i+1)& (0+255),7,b
  3336  001364  EFBD  F009         	goto	u1531
  3337  001368  51C2               	movf	(gagne@i+1)& (0+255),w,b
  3338  00136A  E109               	bnz	u1530
  3339  00136C  0E04               	movlw	4
  3340  00136E  5DC1               	subwf	gagne@i& (0+255),w,b
  3341  001370  A0D8               	btfss	status,0,c
  3342  001372  EFBD  F009         	goto	u1531
  3343  001376  EFBF  F009         	goto	u1530
  3344  00137A                     u1531:
  3345  00137A  EF58  F009         	goto	l2328
  3346  00137E                     u1530:
  3347  00137E                     l2344:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;main.c: 187: };main.c: 188: };main.c: 189: };main.c: 190: if(nbrTuile == (*pMines))
  3351  00137E  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  3352  001382  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  3353  001386  0100               	movlb	0	; force () banked
  3354  001388  51BF               	movf	gagne@nbrTuile& (0+255),w,b
  3355  00138A  18DE               	xorwf	postinc2,w,c
  3356  00138C  E107               	bnz	u1541
  3357  00138E  51C0               	movf	(gagne@nbrTuile+1)& (0+255),w,b
  3358  001390  18DE               	xorwf	postinc2,w,c
  3359  001392  A4D8               	btfss	status,2,c
  3360  001394  EFCE  F009         	goto	u1541
  3361  001398  EFD0  F009         	goto	u1540
  3362  00139C                     u1541:
  3363  00139C  EFE8  F009         	goto	l2354
  3364  0013A0                     u1540:
  3365  0013A0                     
  3366                           ; BSR set to: 0
  3367                           ;main.c: 191: {;main.c: 192: (*pMines)= (*pMines)+1;
  3368  0013A0  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  3369  0013A4  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  3370  0013A8  CFDE F0BC          	movff	postinc2,??_gagne
  3371  0013AC  CFDD F0BD          	movff	postdec2,??_gagne+1
  3372  0013B0  0E01               	movlw	1
  3373  0013B2  0100               	movlb	0	; force () banked
  3374  0013B4  27BC               	addwf	??_gagne& (0+255),f,b
  3375  0013B6  0E00               	movlw	0
  3376  0013B8  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  3377  0013BA  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  3378  0013BE  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  3379  0013C2  C0BC  FFDE         	movff	??_gagne,postinc2
  3380  0013C6  C0BD  FFDD         	movff	??_gagne+1,postdec2
  3381  0013CA                     
  3382                           ; BSR set to: 0
  3383                           ;main.c: 193: return 1;
  3384  0013CA  0E01               	movlw	1
  3385  0013CC  EFE9  F009         	goto	l120
  3386  0013D0                     l2354:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 195: else;main.c: 196: {;main.c: 197: return 0;
  3390  0013D0  0E00               	movlw	0
  3391  0013D2                     l120:
  3392                           
  3393                           ; BSR set to: 0
  3394  0013D2  0012               	return		;funcret
  3395  0013D4                     __end_of_gagne:
  3396                           	opt callstack 0
  3397                           
  3398 ;; *************** function _deplace *****************
  3399 ;; Defined at:
  3400 ;;		line 282 in file "main.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3403 ;;		 -> main@posX(2), 
  3404 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3405 ;;		 -> main@posY(2), 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3417 ;;      Params:         0       4       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0
  3419 ;;      Temps:          0       1       0       0       0       0       0
  3420 ;;      Totals:         0       5       0       0       0       0       0
  3421 ;;Total ram usage:        5 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    4
  3424 ;; This function calls:
  3425 ;;		_getAnalog
  3426 ;;		_lcd_gotoXY
  3427 ;;		_lcd_montreCurseur
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text17
  3434  000C46                     __ptext17:
  3435                           	opt callstack 0
  3436  000C46                     _deplace:
  3437                           	opt callstack 26
  3438  000C46                     
  3439                           ;main.c: 284: lcd_montreCurseur();
  3440  000C46  EC11  F00F         	call	_lcd_montreCurseur	;wreg free
  3441                           
  3442                           ;main.c: 285: if(getAnalog(7) > 220)
  3443  000C4A  0E07               	movlw	7
  3444  000C4C  ECAE  F00E         	call	_getAnalog
  3445  000C50  0100               	movlb	0	; force () banked
  3446  000C52  6FBD               	movwf	??_deplace& (0+255),b
  3447  000C54  0EDC               	movlw	220
  3448  000C56  65BD               	cpfsgt	??_deplace& (0+255),b
  3449  000C58  EF30  F006         	goto	u1391
  3450  000C5C  EF32  F006         	goto	u1390
  3451  000C60                     u1391:
  3452  000C60  EF5F  F006         	goto	l2274
  3453  000C64                     u1390:
  3454  000C64                     
  3455                           ; BSR set to: 0
  3456                           ;main.c: 286: {;main.c: 287: (*x) = (*x) +1;
  3457  000C64  C0B9  FFD9         	movff	deplace@x,fsr2l
  3458  000C68  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3459  000C6C  50DF               	movf	indf2,w,c
  3460  000C6E  0100               	movlb	0	; force () banked
  3461  000C70  6FBD               	movwf	??_deplace& (0+255),b
  3462  000C72  29BD               	incf	??_deplace& (0+255),w,b
  3463  000C74  C0B9  FFD9         	movff	deplace@x,fsr2l
  3464  000C78  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3465  000C7C  6EDF               	movwf	indf2,c
  3466  000C7E                     
  3467                           ; BSR set to: 0
  3468                           ;main.c: 288: lcd_gotoXY(((*x)),(*y));
  3469  000C7E  C0BB  FFD9         	movff	deplace@y,fsr2l
  3470  000C82  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3471  000C86  50DF               	movf	indf2,w,c
  3472  000C88  0100               	movlb	0	; force () banked
  3473  000C8A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3474  000C8C  C0B9  FFD9         	movff	deplace@x,fsr2l
  3475  000C90  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3476  000C94  50DF               	movf	indf2,w,c
  3477  000C96  ECDB  F00C         	call	_lcd_gotoXY
  3478  000C9A                     
  3479                           ;main.c: 290: if((*x) > 20)
  3480  000C9A  C0B9  FFD9         	movff	deplace@x,fsr2l
  3481  000C9E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3482  000CA2  0E14               	movlw	20
  3483  000CA4  64DF               	cpfsgt	indf2,c
  3484  000CA6  EF57  F006         	goto	u1401
  3485  000CAA  EF59  F006         	goto	u1400
  3486  000CAE                     u1401:
  3487  000CAE  EF5F  F006         	goto	l2274
  3488  000CB2                     u1400:
  3489  000CB2                     
  3490                           ;main.c: 291: {;main.c: 292: (*x)=1;
  3491  000CB2  C0B9  FFD9         	movff	deplace@x,fsr2l
  3492  000CB6  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3493  000CBA  0E01               	movlw	1
  3494  000CBC  6EDF               	movwf	indf2,c
  3495  000CBE                     l2274:
  3496                           
  3497                           ;main.c: 293: };main.c: 294: };main.c: 295: if(getAnalog(7) < 30)
  3498  000CBE  0E07               	movlw	7
  3499  000CC0  ECAE  F00E         	call	_getAnalog
  3500  000CC4  0100               	movlb	0	; force () banked
  3501  000CC6  6FBD               	movwf	??_deplace& (0+255),b
  3502  000CC8  0E1E               	movlw	30
  3503  000CCA  61BD               	cpfslt	??_deplace& (0+255),b
  3504  000CCC  EF6A  F006         	goto	u1411
  3505  000CD0  EF6C  F006         	goto	u1410
  3506  000CD4                     u1411:
  3507  000CD4  EF99  F006         	goto	l2284
  3508  000CD8                     u1410:
  3509  000CD8                     
  3510                           ; BSR set to: 0
  3511                           ;main.c: 296: {;main.c: 297: (*x) = (*x) -1;
  3512  000CD8  C0B9  FFD9         	movff	deplace@x,fsr2l
  3513  000CDC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3514  000CE0  50DF               	movf	indf2,w,c
  3515  000CE2  0100               	movlb	0	; force () banked
  3516  000CE4  6FBD               	movwf	??_deplace& (0+255),b
  3517  000CE6  05BD               	decf	??_deplace& (0+255),w,b
  3518  000CE8  C0B9  FFD9         	movff	deplace@x,fsr2l
  3519  000CEC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3520  000CF0  6EDF               	movwf	indf2,c
  3521  000CF2                     
  3522                           ; BSR set to: 0
  3523                           ;main.c: 298: lcd_gotoXY(((*x)),(*y));
  3524  000CF2  C0BB  FFD9         	movff	deplace@y,fsr2l
  3525  000CF6  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3526  000CFA  50DF               	movf	indf2,w,c
  3527  000CFC  0100               	movlb	0	; force () banked
  3528  000CFE  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3529  000D00  C0B9  FFD9         	movff	deplace@x,fsr2l
  3530  000D04  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3531  000D08  50DF               	movf	indf2,w,c
  3532  000D0A  ECDB  F00C         	call	_lcd_gotoXY
  3533  000D0E                     
  3534                           ;main.c: 300: if((*x) < 1)
  3535  000D0E  C0B9  FFD9         	movff	deplace@x,fsr2l
  3536  000D12  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3537  000D16  50DF               	movf	indf2,w,c
  3538  000D18  A4D8               	btfss	status,2,c
  3539  000D1A  EF91  F006         	goto	u1421
  3540  000D1E  EF93  F006         	goto	u1420
  3541  000D22                     u1421:
  3542  000D22  EF99  F006         	goto	l2284
  3543  000D26                     u1420:
  3544  000D26                     
  3545                           ;main.c: 301: {;main.c: 302: (*x)=20;
  3546  000D26  C0B9  FFD9         	movff	deplace@x,fsr2l
  3547  000D2A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3548  000D2E  0E14               	movlw	20
  3549  000D30  6EDF               	movwf	indf2,c
  3550  000D32                     l2284:
  3551                           
  3552                           ;main.c: 303: };main.c: 304: };main.c: 305: if(getAnalog(6) > 220)
  3553  000D32  0E06               	movlw	6
  3554  000D34  ECAE  F00E         	call	_getAnalog
  3555  000D38  0100               	movlb	0	; force () banked
  3556  000D3A  6FBD               	movwf	??_deplace& (0+255),b
  3557  000D3C  0EDC               	movlw	220
  3558  000D3E  65BD               	cpfsgt	??_deplace& (0+255),b
  3559  000D40  EFA4  F006         	goto	u1431
  3560  000D44  EFA6  F006         	goto	u1430
  3561  000D48                     u1431:
  3562  000D48  EFD3  F006         	goto	l2294
  3563  000D4C                     u1430:
  3564  000D4C                     
  3565                           ; BSR set to: 0
  3566                           ;main.c: 306: {;main.c: 307: (*y) = (*y) +1;
  3567  000D4C  C0BB  FFD9         	movff	deplace@y,fsr2l
  3568  000D50  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3569  000D54  50DF               	movf	indf2,w,c
  3570  000D56  0100               	movlb	0	; force () banked
  3571  000D58  6FBD               	movwf	??_deplace& (0+255),b
  3572  000D5A  29BD               	incf	??_deplace& (0+255),w,b
  3573  000D5C  C0BB  FFD9         	movff	deplace@y,fsr2l
  3574  000D60  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3575  000D64  6EDF               	movwf	indf2,c
  3576  000D66                     
  3577                           ; BSR set to: 0
  3578                           ;main.c: 308: lcd_gotoXY(((*x)),(*y));
  3579  000D66  C0BB  FFD9         	movff	deplace@y,fsr2l
  3580  000D6A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3581  000D6E  50DF               	movf	indf2,w,c
  3582  000D70  0100               	movlb	0	; force () banked
  3583  000D72  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3584  000D74  C0B9  FFD9         	movff	deplace@x,fsr2l
  3585  000D78  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3586  000D7C  50DF               	movf	indf2,w,c
  3587  000D7E  ECDB  F00C         	call	_lcd_gotoXY
  3588  000D82                     
  3589                           ;main.c: 310: if(*y > 4)
  3590  000D82  C0BB  FFD9         	movff	deplace@y,fsr2l
  3591  000D86  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3592  000D8A  0E04               	movlw	4
  3593  000D8C  64DF               	cpfsgt	indf2,c
  3594  000D8E  EFCB  F006         	goto	u1441
  3595  000D92  EFCD  F006         	goto	u1440
  3596  000D96                     u1441:
  3597  000D96  EFD3  F006         	goto	l2294
  3598  000D9A                     u1440:
  3599  000D9A                     
  3600                           ;main.c: 311: {;main.c: 312: *y=1;
  3601  000D9A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3602  000D9E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3603  000DA2  0E01               	movlw	1
  3604  000DA4  6EDF               	movwf	indf2,c
  3605  000DA6                     l2294:
  3606                           
  3607                           ;main.c: 313: };main.c: 315: };main.c: 316: if(getAnalog(6) < 30)
  3608  000DA6  0E06               	movlw	6
  3609  000DA8  ECAE  F00E         	call	_getAnalog
  3610  000DAC  0100               	movlb	0	; force () banked
  3611  000DAE  6FBD               	movwf	??_deplace& (0+255),b
  3612  000DB0  0E1E               	movlw	30
  3613  000DB2  61BD               	cpfslt	??_deplace& (0+255),b
  3614  000DB4  EFDE  F006         	goto	u1451
  3615  000DB8  EFE0  F006         	goto	u1450
  3616  000DBC                     u1451:
  3617  000DBC  EF0D  F007         	goto	l157
  3618  000DC0                     u1450:
  3619  000DC0                     
  3620                           ; BSR set to: 0
  3621                           ;main.c: 317: {;main.c: 318: (*y) = (*y) -1;
  3622  000DC0  C0BB  FFD9         	movff	deplace@y,fsr2l
  3623  000DC4  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3624  000DC8  50DF               	movf	indf2,w,c
  3625  000DCA  0100               	movlb	0	; force () banked
  3626  000DCC  6FBD               	movwf	??_deplace& (0+255),b
  3627  000DCE  05BD               	decf	??_deplace& (0+255),w,b
  3628  000DD0  C0BB  FFD9         	movff	deplace@y,fsr2l
  3629  000DD4  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3630  000DD8  6EDF               	movwf	indf2,c
  3631  000DDA                     
  3632                           ; BSR set to: 0
  3633                           ;main.c: 319: lcd_gotoXY(((*x)),(*y));
  3634  000DDA  C0BB  FFD9         	movff	deplace@y,fsr2l
  3635  000DDE  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3636  000DE2  50DF               	movf	indf2,w,c
  3637  000DE4  0100               	movlb	0	; force () banked
  3638  000DE6  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3639  000DE8  C0B9  FFD9         	movff	deplace@x,fsr2l
  3640  000DEC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3641  000DF0  50DF               	movf	indf2,w,c
  3642  000DF2  ECDB  F00C         	call	_lcd_gotoXY
  3643  000DF6                     
  3644                           ;main.c: 321: if(*y < 1)
  3645  000DF6  C0BB  FFD9         	movff	deplace@y,fsr2l
  3646  000DFA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3647  000DFE  50DF               	movf	indf2,w,c
  3648  000E00  A4D8               	btfss	status,2,c
  3649  000E02  EF05  F007         	goto	u1461
  3650  000E06  EF07  F007         	goto	u1460
  3651  000E0A                     u1461:
  3652  000E0A  EF0D  F007         	goto	l157
  3653  000E0E                     u1460:
  3654  000E0E                     
  3655                           ;main.c: 322: {;main.c: 323: *y=4;
  3656  000E0E  C0BB  FFD9         	movff	deplace@y,fsr2l
  3657  000E12  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3658  000E16  0E04               	movlw	4
  3659  000E18  6EDF               	movwf	indf2,c
  3660  000E1A                     l157:
  3661  000E1A  0012               	return		;funcret
  3662  000E1C                     __end_of_deplace:
  3663                           	opt callstack 0
  3664                           
  3665 ;; *************** function _lcd_montreCurseur *****************
  3666 ;; Defined at:
  3667 ;;		line 412 in file "Lcd4Lignes.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3681 ;;      Params:         0       0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    3
  3688 ;; This function calls:
  3689 ;;		_lcd_wrCom
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;;		_deplace
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text18
  3697  001E22                     __ptext18:
  3698                           	opt callstack 0
  3699  001E22                     _lcd_montreCurseur:
  3700                           	opt callstack 27
  3701  001E22                     
  3702                           ;Lcd4Lignes.c: 414: lcd_wrCom(0x0F);
  3703  001E22  0E0F               	movlw	15
  3704  001E24  EC4A  F00D         	call	_lcd_wrCom
  3705  001E28  0012               	return		;funcret
  3706  001E2A                     __end_of_lcd_montreCurseur:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _getAnalog *****************
  3710 ;; Defined at:
  3711 ;;		line 396 in file "main.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  canal           1    wreg     unsigned char 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  canal           1    1[BANK0 ] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3725 ;;      Params:         0       0       0       0       0       0       0
  3726 ;;      Locals:         0       1       0       0       0       0       0
  3727 ;;      Temps:          0       1       0       0       0       0       0
  3728 ;;      Totals:         0       2       0       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_deplace
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text19
  3739  001D5C                     __ptext19:
  3740                           	opt callstack 0
  3741  001D5C                     _getAnalog:
  3742                           	opt callstack 29
  3743                           
  3744                           ;incstack = 0
  3745                           ;getAnalog@canal stored from wreg
  3746  001D5C  0100               	movlb	0	; force () banked
  3747  001D5E  6FB5               	movwf	getAnalog@canal& (0+255),b
  3748  001D60                     
  3749                           ;main.c: 398: ADCON0bits.CHS = canal;
  3750  001D60  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  3751  001D64  0100               	movlb	0	; force () banked
  3752  001D66  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3753  001D68  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3754  001D6A  50C2               	movf	194,w,c	;volatile
  3755  001D6C  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3756  001D6E  0BC3               	andlw	-61
  3757  001D70  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3758  001D72  6EC2               	movwf	194,c	;volatile
  3759  001D74                     
  3760                           ;main.c: 400: ADCON0bits.GO_DONE = 1;
  3761  001D74  82C2               	bsf	194,1,c	;volatile
  3762  001D76                     l183:
  3763  001D76  B2C2               	btfsc	194,1,c	;volatile
  3764  001D78  EFC0  F00E         	goto	u211
  3765  001D7C  EFC2  F00E         	goto	u210
  3766  001D80                     u211:
  3767  001D80  EFBB  F00E         	goto	l183
  3768  001D84                     u210:
  3769  001D84                     
  3770                           ;main.c: 403: return ADRESH;
  3771  001D84  50C4               	movf	196,w,c	;volatile
  3772  001D86  0012               	return		;funcret
  3773  001D88                     __end_of_getAnalog:
  3774                           	opt callstack 0
  3775                           
  3776 ;; *************** function _demine *****************
  3777 ;; Defined at:
  3778 ;;		line 354 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  x               1    wreg     unsigned char 
  3781 ;;  y               1   19[BANK0 ] unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  x               1   28[BANK0 ] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         0       1       0       0       0       0       0
  3794 ;;      Locals:         0       1       0       0       0       0       0
  3795 ;;      Temps:          0       8       0       0       0       0       0
  3796 ;;      Totals:         0      10       0       0       0       0       0
  3797 ;;Total ram usage:       10 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    6
  3800 ;; This function calls:
  3801 ;;		_afficheTabVue
  3802 ;;		_enleveTuilesAutour
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text20
  3809  00152C                     __ptext20:
  3810                           	opt callstack 0
  3811  00152C                     _demine:
  3812                           	opt callstack 24
  3813                           
  3814                           ;incstack = 0
  3815                           ;demine@x stored from wreg
  3816  00152C  0100               	movlb	0	; force () banked
  3817  00152E  6FD0               	movwf	demine@x& (0+255),b
  3818  001530                     
  3819                           ;main.c: 356: if(m_tabMines[y-1][x-1] == 2)
  3820  001530  0100               	movlb	0	; force () banked
  3821  001532  51C7               	movf	demine@y& (0+255),w,b
  3822  001534  0D15               	mullw	21
  3823  001536  0EEA               	movlw	234
  3824  001538  0100               	movlb	0	; force () banked
  3825  00153A  6FC8               	movwf	??_demine& (0+255),b
  3826  00153C  0EFF               	movlw	255
  3827  00153E  6FC9               	movwf	(??_demine+1)& (0+255),b
  3828  001540  0E60               	movlw	low _m_tabMines
  3829  001542  6FCA               	movwf	(??_demine+2)& (0+255),b
  3830  001544  0E00               	movlw	high _m_tabMines
  3831  001546  6FCB               	movwf	(??_demine+3)& (0+255),b
  3832  001548  51C8               	movf	??_demine& (0+255),w,b
  3833  00154A  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3834  00154C  51C9               	movf	(??_demine+1)& (0+255),w,b
  3835  00154E  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3836  001550  50F3               	movf	243,w,c
  3837  001552  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3838  001554  50F4               	movf	244,w,c
  3839  001556  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3840  001558  0100               	movlb	0	; force () banked
  3841  00155A  51D0               	movf	demine@x& (0+255),w,b
  3842  00155C  0100               	movlb	0	; force () banked
  3843  00155E  25CA               	addwf	(??_demine+2)& (0+255),w,b
  3844  001560  6ED9               	movwf	fsr2l,c
  3845  001562  0100               	movlb	0	; force () banked
  3846  001564  0E00               	movlw	0
  3847  001566  0100               	movlb	0	; force () banked
  3848  001568  21CB               	addwfc	(??_demine+3)& (0+255),w,b
  3849  00156A  6EDA               	movwf	fsr2h,c
  3850  00156C  0E02               	movlw	2
  3851  00156E  18DE               	xorwf	postinc2,w,c
  3852  001570  A4D8               	btfss	status,2,c
  3853  001572  EFBD  F00A         	goto	u1471
  3854  001576  EFBF  F00A         	goto	u1470
  3855  00157A                     u1471:
  3856  00157A  EFC2  F00A         	goto	l2310
  3857  00157E                     u1470:
  3858  00157E                     
  3859                           ; BSR set to: 0
  3860                           ;main.c: 357: {;main.c: 358: return 0;
  3861  00157E  0E00               	movlw	0
  3862  001580  EF34  F00B         	goto	l171
  3863  001584                     l2310:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;main.c: 359: };main.c: 360: if(m_tabMines[y-1][x-1] == 32)
  3867  001584  0100               	movlb	0	; force () banked
  3868  001586  51C7               	movf	demine@y& (0+255),w,b
  3869  001588  0D15               	mullw	21
  3870  00158A  0EEA               	movlw	234
  3871  00158C  0100               	movlb	0	; force () banked
  3872  00158E  6FC8               	movwf	??_demine& (0+255),b
  3873  001590  0EFF               	movlw	255
  3874  001592  6FC9               	movwf	(??_demine+1)& (0+255),b
  3875  001594  0E60               	movlw	low _m_tabMines
  3876  001596  6FCA               	movwf	(??_demine+2)& (0+255),b
  3877  001598  0E00               	movlw	high _m_tabMines
  3878  00159A  6FCB               	movwf	(??_demine+3)& (0+255),b
  3879  00159C  51C8               	movf	??_demine& (0+255),w,b
  3880  00159E  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3881  0015A0  51C9               	movf	(??_demine+1)& (0+255),w,b
  3882  0015A2  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3883  0015A4  50F3               	movf	243,w,c
  3884  0015A6  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3885  0015A8  50F4               	movf	244,w,c
  3886  0015AA  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3887  0015AC  0100               	movlb	0	; force () banked
  3888  0015AE  51D0               	movf	demine@x& (0+255),w,b
  3889  0015B0  0100               	movlb	0	; force () banked
  3890  0015B2  25CA               	addwf	(??_demine+2)& (0+255),w,b
  3891  0015B4  6ED9               	movwf	fsr2l,c
  3892  0015B6  0100               	movlb	0	; force () banked
  3893  0015B8  0E00               	movlw	0
  3894  0015BA  0100               	movlb	0	; force () banked
  3895  0015BC  21CB               	addwfc	(??_demine+3)& (0+255),w,b
  3896  0015BE  6EDA               	movwf	fsr2h,c
  3897  0015C0  0E20               	movlw	32
  3898  0015C2  18DE               	xorwf	postinc2,w,c
  3899  0015C4  A4D8               	btfss	status,2,c
  3900  0015C6  EFE7  F00A         	goto	u1481
  3901  0015CA  EFE9  F00A         	goto	u1480
  3902  0015CE                     u1481:
  3903  0015CE  EFF3  F00A         	goto	l2314
  3904  0015D2                     u1480:
  3905  0015D2                     
  3906                           ; BSR set to: 0
  3907                           ;main.c: 361: {;main.c: 362: enleveTuilesAutour(x-1,y-1);
  3908  0015D2  0100               	movlb	0	; force () banked
  3909  0015D4  05C7               	decf	demine@y& (0+255),w,b
  3910  0015D6  0100               	movlb	0	; force () banked
  3911  0015D8  6FBA               	movwf	enleveTuilesAutour@y& (0+255),b
  3912  0015DA  0100               	movlb	0	; force () banked
  3913  0015DC  05D0               	decf	demine@x& (0+255),w,b
  3914  0015DE  EC8E  F008         	call	_enleveTuilesAutour
  3915                           
  3916                           ;main.c: 364: }
  3917  0015E2  EF31  F00B         	goto	l2316
  3918  0015E6                     l2314:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;main.c: 365: else;main.c: 366: {;main.c: 367: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1]
      +                          ;
  3922  0015E6  0100               	movlb	0	; force () banked
  3923  0015E8  51C7               	movf	demine@y& (0+255),w,b
  3924  0015EA  0D15               	mullw	21
  3925  0015EC  0EEA               	movlw	234
  3926  0015EE  0100               	movlb	0	; force () banked
  3927  0015F0  6FC8               	movwf	??_demine& (0+255),b
  3928  0015F2  0EFF               	movlw	255
  3929  0015F4  6FC9               	movwf	(??_demine+1)& (0+255),b
  3930  0015F6  0E60               	movlw	low _m_tabMines
  3931  0015F8  6FCA               	movwf	(??_demine+2)& (0+255),b
  3932  0015FA  0E00               	movlw	high _m_tabMines
  3933  0015FC  6FCB               	movwf	(??_demine+3)& (0+255),b
  3934  0015FE  51C8               	movf	??_demine& (0+255),w,b
  3935  001600  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3936  001602  51C9               	movf	(??_demine+1)& (0+255),w,b
  3937  001604  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3938  001606  50F3               	movf	243,w,c
  3939  001608  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3940  00160A  50F4               	movf	244,w,c
  3941  00160C  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3942  00160E  0100               	movlb	0	; force () banked
  3943  001610  51D0               	movf	demine@x& (0+255),w,b
  3944  001612  0100               	movlb	0	; force () banked
  3945  001614  25CA               	addwf	(??_demine+2)& (0+255),w,b
  3946  001616  6ED9               	movwf	fsr2l,c
  3947  001618  0100               	movlb	0	; force () banked
  3948  00161A  0E00               	movlw	0
  3949  00161C  0100               	movlb	0	; force () banked
  3950  00161E  21CB               	addwfc	(??_demine+3)& (0+255),w,b
  3951  001620  6EDA               	movwf	fsr2h,c
  3952  001622  0100               	movlb	0	; force () banked
  3953  001624  51C7               	movf	demine@y& (0+255),w,b
  3954  001626  0D15               	mullw	21
  3955  001628  0EEA               	movlw	234
  3956  00162A  0100               	movlb	0	; force () banked
  3957  00162C  6FCC               	movwf	(??_demine+4)& (0+255),b
  3958  00162E  0EFF               	movlw	255
  3959  001630  6FCD               	movwf	(??_demine+5)& (0+255),b
  3960  001632  0E00               	movlw	low _m_tabVue
  3961  001634  6FCE               	movwf	(??_demine+6)& (0+255),b
  3962  001636  0E01               	movlw	high _m_tabVue
  3963  001638  6FCF               	movwf	(??_demine+7)& (0+255),b
  3964  00163A  51CC               	movf	(??_demine+4)& (0+255),w,b
  3965  00163C  27CE               	addwf	(??_demine+6)& (0+255),f,b
  3966  00163E  51CD               	movf	(??_demine+5)& (0+255),w,b
  3967  001640  23CF               	addwfc	(??_demine+7)& (0+255),f,b
  3968  001642  50F3               	movf	243,w,c
  3969  001644  27CE               	addwf	(??_demine+6)& (0+255),f,b
  3970  001646  50F4               	movf	244,w,c
  3971  001648  23CF               	addwfc	(??_demine+7)& (0+255),f,b
  3972  00164A  0100               	movlb	0	; force () banked
  3973  00164C  51D0               	movf	demine@x& (0+255),w,b
  3974  00164E  0100               	movlb	0	; force () banked
  3975  001650  25CE               	addwf	(??_demine+6)& (0+255),w,b
  3976  001652  6EE1               	movwf	fsr1l,c
  3977  001654  0100               	movlb	0	; force () banked
  3978  001656  0E00               	movlw	0
  3979  001658  0100               	movlb	0	; force () banked
  3980  00165A  21CF               	addwfc	(??_demine+7)& (0+255),w,b
  3981  00165C  6EE2               	movwf	fsr1h,c
  3982  00165E  CFDF FFE7          	movff	indf2,indf1
  3983  001662                     l2316:
  3984                           
  3985                           ;main.c: 369: };main.c: 370: afficheTabVue();
  3986  001662  EC39  F00C         	call	_afficheTabVue	;wreg free
  3987  001666                     
  3988                           ;main.c: 371: return 1;
  3989  001666  0E01               	movlw	1
  3990  001668                     l171:
  3991  001668  0012               	return		;funcret
  3992  00166A                     __end_of_demine:
  3993                           	opt callstack 0
  3994                           
  3995 ;; *************** function _enleveTuilesAutour *****************
  3996 ;; Defined at:
  3997 ;;		line 380 in file "main.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  x               1    wreg     unsigned char 
  4000 ;;  y               1    6[BANK0 ] unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  x               1   11[BANK0 ] unsigned char 
  4003 ;;  j               2   14[BANK0 ] int 
  4004 ;;  i               2   12[BANK0 ] int 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4014 ;;      Params:         0       1       0       0       0       0       0
  4015 ;;      Locals:         0       5       0       0       0       0       0
  4016 ;;      Temps:          0       4       0       0       0       0       0
  4017 ;;      Totals:         0      10       0       0       0       0       0
  4018 ;;Total ram usage:       10 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    1
  4021 ;; This function calls:
  4022 ;;		___wmul
  4023 ;; This function is called by:
  4024 ;;		_demine
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text21
  4029  00111C                     __ptext21:
  4030                           	opt callstack 0
  4031  00111C                     _enleveTuilesAutour:
  4032                           	opt callstack 28
  4033                           
  4034                           ;incstack = 0
  4035                           ;enleveTuilesAutour@x stored from wreg
  4036  00111C  0100               	movlb	0	; force () banked
  4037  00111E  6FBF               	movwf	enleveTuilesAutour@x& (0+255),b
  4038  001120                     
  4039                           ;main.c: 382: for(int i=-1;i<2;i++)
  4040  001120  0100               	movlb	0	; force () banked
  4041  001122  69C0               	setf	enleveTuilesAutour@i& (0+255),b
  4042  001124  69C1               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  4043  001126                     
  4044                           ; BSR set to: 0
  4045  001126  0100               	movlb	0	; force () banked
  4046  001128  BFC1               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  4047  00112A  EFA0  F008         	goto	u1071
  4048  00112E  51C1               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  4049  001130  E109               	bnz	u1070
  4050  001132  0E02               	movlw	2
  4051  001134  5DC0               	subwf	enleveTuilesAutour@i& (0+255),w,b
  4052  001136  A0D8               	btfss	status,0,c
  4053  001138  EFA0  F008         	goto	u1071
  4054  00113C  EFA2  F008         	goto	u1070
  4055  001140                     u1071:
  4056  001140  EFA4  F008         	goto	l176
  4057  001144                     u1070:
  4058  001144  EF3C  F009         	goto	l180
  4059  001148                     l176:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;main.c: 383: {;main.c: 384: for(int j=-1;j<2;j++)
  4063  001148  0100               	movlb	0	; force () banked
  4064  00114A  69C2               	setf	enleveTuilesAutour@j& (0+255),b
  4065  00114C  69C3               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  4066  00114E                     
  4067                           ; BSR set to: 0
  4068  00114E  0100               	movlb	0	; force () banked
  4069  001150  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  4070  001152  EFB4  F008         	goto	u1081
  4071  001156  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  4072  001158  E109               	bnz	u1080
  4073  00115A  0E02               	movlw	2
  4074  00115C  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  4075  00115E  A0D8               	btfss	status,0,c
  4076  001160  EFB4  F008         	goto	u1081
  4077  001164  EFB6  F008         	goto	u1080
  4078  001168                     u1081:
  4079  001168  EFB8  F008         	goto	l2032
  4080  00116C                     u1080:
  4081  00116C  EF2A  F009         	goto	l2038
  4082  001170                     l2032:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 385: {;main.c: 386: m_tabVue[y+i][x+j] = m_tabMines[y+i][x+j];
  4086  001170  C0C0  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  4087  001174  C0C1  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  4088  001178  0E00               	movlw	0
  4089  00117A  0100               	movlb	0	; force () banked
  4090  00117C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4091  00117E  0E15               	movlw	21
  4092  001180  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4093  001182  ECD8  F00E         	call	___wmul	;wreg free
  4094  001186  0100               	movlb	0	; force () banked
  4095  001188  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  4096  00118A  0D15               	mullw	21
  4097  00118C  0E60               	movlw	low _m_tabMines
  4098  00118E  0100               	movlb	0	; force () banked
  4099  001190  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  4100  001192  0E00               	movlw	high _m_tabMines
  4101  001194  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4102  001196  50F3               	movf	243,w,c
  4103  001198  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4104  00119A  50F4               	movf	244,w,c
  4105  00119C  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4106  00119E  0100               	movlb	0	; force () banked
  4107  0011A0  51B4               	movf	?___wmul& (0+255),w,b
  4108  0011A2  0100               	movlb	0	; force () banked
  4109  0011A4  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4110  0011A6  0100               	movlb	0	; force () banked
  4111  0011A8  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4112  0011AA  0100               	movlb	0	; force () banked
  4113  0011AC  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4114  0011AE  0100               	movlb	0	; force () banked
  4115  0011B0  51BF               	movf	enleveTuilesAutour@x& (0+255),w,b
  4116  0011B2  0100               	movlb	0	; force () banked
  4117  0011B4  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4118  0011B6  0E00               	movlw	0
  4119  0011B8  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4120  0011BA  0100               	movlb	0	; force () banked
  4121  0011BC  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  4122  0011BE  0100               	movlb	0	; force () banked
  4123  0011C0  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4124  0011C2  6ED9               	movwf	fsr2l,c
  4125  0011C4  0100               	movlb	0	; force () banked
  4126  0011C6  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  4127  0011C8  0100               	movlb	0	; force () banked
  4128  0011CA  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4129  0011CC  6EDA               	movwf	fsr2h,c
  4130  0011CE  C0C0  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  4131  0011D2  C0C1  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  4132  0011D6  0E00               	movlw	0
  4133  0011D8  0100               	movlb	0	; force () banked
  4134  0011DA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4135  0011DC  0E15               	movlw	21
  4136  0011DE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4137  0011E0  ECD8  F00E         	call	___wmul	;wreg free
  4138  0011E4  0100               	movlb	0	; force () banked
  4139  0011E6  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  4140  0011E8  0D15               	mullw	21
  4141  0011EA  0E00               	movlw	low _m_tabVue
  4142  0011EC  0100               	movlb	0	; force () banked
  4143  0011EE  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4144  0011F0  0E01               	movlw	high _m_tabVue
  4145  0011F2  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4146  0011F4  50F3               	movf	243,w,c
  4147  0011F6  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4148  0011F8  50F4               	movf	244,w,c
  4149  0011FA  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4150  0011FC  0100               	movlb	0	; force () banked
  4151  0011FE  51B4               	movf	?___wmul& (0+255),w,b
  4152  001200  0100               	movlb	0	; force () banked
  4153  001202  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4154  001204  0100               	movlb	0	; force () banked
  4155  001206  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4156  001208  0100               	movlb	0	; force () banked
  4157  00120A  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4158  00120C  0100               	movlb	0	; force () banked
  4159  00120E  51BF               	movf	enleveTuilesAutour@x& (0+255),w,b
  4160  001210  0100               	movlb	0	; force () banked
  4161  001212  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4162  001214  0E00               	movlw	0
  4163  001216  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4164  001218  0100               	movlb	0	; force () banked
  4165  00121A  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  4166  00121C  0100               	movlb	0	; force () banked
  4167  00121E  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4168  001220  6EE1               	movwf	fsr1l,c
  4169  001222  0100               	movlb	0	; force () banked
  4170  001224  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  4171  001226  0100               	movlb	0	; force () banked
  4172  001228  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4173  00122A  6EE2               	movwf	fsr1h,c
  4174  00122C  CFDF FFE7          	movff	indf2,indf1
  4175  001230                     
  4176                           ; BSR set to: 0
  4177  001230  0100               	movlb	0	; force () banked
  4178  001232  4BC2               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  4179  001234  2BC3               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  4180  001236                     
  4181                           ; BSR set to: 0
  4182  001236  0100               	movlb	0	; force () banked
  4183  001238  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  4184  00123A  EF28  F009         	goto	u1091
  4185  00123E  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  4186  001240  E109               	bnz	u1090
  4187  001242  0E02               	movlw	2
  4188  001244  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  4189  001246  A0D8               	btfss	status,0,c
  4190  001248  EF28  F009         	goto	u1091
  4191  00124C  EF2A  F009         	goto	u1090
  4192  001250                     u1091:
  4193  001250  EFB8  F008         	goto	l2032
  4194  001254                     u1090:
  4195  001254                     l2038:
  4196                           
  4197                           ; BSR set to: 0
  4198  001254  0100               	movlb	0	; force () banked
  4199  001256  4BC0               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  4200  001258  2BC1               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  4201  00125A                     
  4202                           ; BSR set to: 0
  4203  00125A  0100               	movlb	0	; force () banked
  4204  00125C  BFC1               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  4205  00125E  EF3A  F009         	goto	u1101
  4206  001262  51C1               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  4207  001264  E109               	bnz	u1100
  4208  001266  0E02               	movlw	2
  4209  001268  5DC0               	subwf	enleveTuilesAutour@i& (0+255),w,b
  4210  00126A  A0D8               	btfss	status,0,c
  4211  00126C  EF3A  F009         	goto	u1101
  4212  001270  EF3C  F009         	goto	u1100
  4213  001274                     u1101:
  4214  001274  EFA4  F008         	goto	l176
  4215  001278                     u1100:
  4216  001278                     l180:
  4217                           
  4218                           ; BSR set to: 0
  4219  001278  0012               	return		;funcret
  4220  00127A                     __end_of_enleveTuilesAutour:
  4221                           	opt callstack 0
  4222                           
  4223 ;; *************** function _afficheTabVue *****************
  4224 ;; Defined at:
  4225 ;;		line 328 in file "main.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  i               2   17[BANK0 ] int 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4239 ;;      Params:         0       0       0       0       0       0       0
  4240 ;;      Locals:         0       2       0       0       0       0       0
  4241 ;;      Temps:          0       2       0       0       0       0       0
  4242 ;;      Totals:         0       4       0       0       0       0       0
  4243 ;;Total ram usage:        4 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    5
  4246 ;; This function calls:
  4247 ;;		___wmul
  4248 ;;		_lcd_gotoXY
  4249 ;;		_lcd_putMessage
  4250 ;; This function is called by:
  4251 ;;		_demine
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text22
  4256  001872                     __ptext22:
  4257                           	opt callstack 0
  4258  001872                     _afficheTabVue:
  4259                           	opt callstack 24
  4260  001872                     
  4261                           ;main.c: 330: for(int i =0;i<4;i++)
  4262  001872  0E00               	movlw	0
  4263  001874  0100               	movlb	0	; force () banked
  4264  001876  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  4265  001878  0E00               	movlw	0
  4266  00187A  6FC5               	movwf	afficheTabVue@i& (0+255),b
  4267  00187C                     
  4268                           ; BSR set to: 0
  4269  00187C  0100               	movlb	0	; force () banked
  4270  00187E  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4271  001880  EF4B  F00C         	goto	u1051
  4272  001884  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4273  001886  E109               	bnz	u1050
  4274  001888  0E04               	movlw	4
  4275  00188A  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  4276  00188C  A0D8               	btfss	status,0,c
  4277  00188E  EF4B  F00C         	goto	u1051
  4278  001892  EF4D  F00C         	goto	u1050
  4279  001896                     u1051:
  4280  001896  EF4F  F00C         	goto	l2014
  4281  00189A                     u1050:
  4282  00189A  EF89  F00C         	goto	l162
  4283  00189E                     l2014:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;main.c: 331: {;main.c: 332: lcd_gotoXY(1,i+1);
  4287  00189E  0100               	movlb	0	; force () banked
  4288  0018A0  29C5               	incf	afficheTabVue@i& (0+255),w,b
  4289  0018A2  0100               	movlb	0	; force () banked
  4290  0018A4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4291  0018A6  0E01               	movlw	1
  4292  0018A8  ECDB  F00C         	call	_lcd_gotoXY
  4293  0018AC                     
  4294                           ;main.c: 333: lcd_putMessage(m_tabVue[i]);
  4295  0018AC  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  4296  0018B0  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  4297  0018B4  0E00               	movlw	0
  4298  0018B6  0100               	movlb	0	; force () banked
  4299  0018B8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4300  0018BA  0E15               	movlw	21
  4301  0018BC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4302  0018BE  ECD8  F00E         	call	___wmul	;wreg free
  4303  0018C2  0E00               	movlw	low _m_tabVue
  4304  0018C4  0100               	movlb	0	; force () banked
  4305  0018C6  25B4               	addwf	?___wmul& (0+255),w,b
  4306  0018C8  0100               	movlb	0	; force () banked
  4307  0018CA  6FC3               	movwf	??_afficheTabVue& (0+255),b
  4308  0018CC  0E01               	movlw	high _m_tabVue
  4309  0018CE  0100               	movlb	0	; force () banked
  4310  0018D0  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  4311  0018D2  0100               	movlb	0	; force () banked
  4312  0018D4  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  4313  0018D6  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  4314  0018DA  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  4315  0018DE  0100               	movlb	0	; force () banked
  4316  0018E0  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  4317  0018E2  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4318  0018E4  A4D8               	btfss	status,2,c
  4319  0018E6  0E20               	movlw	32
  4320  0018E8  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4321  0018EA  EC35  F00B         	call	_lcd_putMessage	;wreg free
  4322  0018EE  0100               	movlb	0	; force () banked
  4323  0018F0  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  4324  0018F2  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  4325  0018F4                     
  4326                           ; BSR set to: 0
  4327  0018F4  0100               	movlb	0	; force () banked
  4328  0018F6  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4329  0018F8  EF87  F00C         	goto	u1061
  4330  0018FC  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4331  0018FE  E109               	bnz	u1060
  4332  001900  0E04               	movlw	4
  4333  001902  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  4334  001904  A0D8               	btfss	status,0,c
  4335  001906  EF87  F00C         	goto	u1061
  4336  00190A  EF89  F00C         	goto	u1060
  4337  00190E                     u1061:
  4338  00190E  EF4F  F00C         	goto	l2014
  4339  001912                     u1060:
  4340  001912                     l162:
  4341                           
  4342                           ; BSR set to: 0
  4343  001912  0012               	return		;funcret
  4344  001914                     __end_of_afficheTabVue:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _afficheTabMine *****************
  4348 ;; Defined at:
  4349 ;;		line 338 in file "main.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  i               2   17[BANK0 ] int 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4363 ;;      Params:         0       0       0       0       0       0       0
  4364 ;;      Locals:         0       2       0       0       0       0       0
  4365 ;;      Temps:          0       2       0       0       0       0       0
  4366 ;;      Totals:         0       4       0       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    5
  4370 ;; This function calls:
  4371 ;;		___wmul
  4372 ;;		_lcd_gotoXY
  4373 ;;		_lcd_putMessage
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text23
  4380  001914                     __ptext23:
  4381                           	opt callstack 0
  4382  001914                     _afficheTabMine:
  4383                           	opt callstack 25
  4384  001914                     
  4385                           ;main.c: 340: for(int i =0;i<4;i++)
  4386  001914  0E00               	movlw	0
  4387  001916  0100               	movlb	0	; force () banked
  4388  001918  6FC6               	movwf	(afficheTabMine@i+1)& (0+255),b
  4389  00191A  0E00               	movlw	0
  4390  00191C  6FC5               	movwf	afficheTabMine@i& (0+255),b
  4391  00191E                     
  4392                           ; BSR set to: 0
  4393  00191E  0100               	movlb	0	; force () banked
  4394  001920  BFC6               	btfsc	(afficheTabMine@i+1)& (0+255),7,b
  4395  001922  EF9C  F00C         	goto	u1551
  4396  001926  51C6               	movf	(afficheTabMine@i+1)& (0+255),w,b
  4397  001928  E109               	bnz	u1550
  4398  00192A  0E04               	movlw	4
  4399  00192C  5DC5               	subwf	afficheTabMine@i& (0+255),w,b
  4400  00192E  A0D8               	btfss	status,0,c
  4401  001930  EF9C  F00C         	goto	u1551
  4402  001934  EF9E  F00C         	goto	u1550
  4403  001938                     u1551:
  4404  001938  EFA0  F00C         	goto	l2364
  4405  00193C                     u1550:
  4406  00193C  EFDA  F00C         	goto	l167
  4407  001940                     l2364:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;main.c: 341: {;main.c: 342: lcd_gotoXY(1,i+1);
  4411  001940  0100               	movlb	0	; force () banked
  4412  001942  29C5               	incf	afficheTabMine@i& (0+255),w,b
  4413  001944  0100               	movlb	0	; force () banked
  4414  001946  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4415  001948  0E01               	movlw	1
  4416  00194A  ECDB  F00C         	call	_lcd_gotoXY
  4417  00194E                     
  4418                           ;main.c: 343: lcd_putMessage(m_tabMines[i]);
  4419  00194E  C0C5  F0B4         	movff	afficheTabMine@i,___wmul@multiplier
  4420  001952  C0C6  F0B5         	movff	afficheTabMine@i+1,___wmul@multiplier+1
  4421  001956  0E00               	movlw	0
  4422  001958  0100               	movlb	0	; force () banked
  4423  00195A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4424  00195C  0E15               	movlw	21
  4425  00195E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4426  001960  ECD8  F00E         	call	___wmul	;wreg free
  4427  001964  0E60               	movlw	low _m_tabMines
  4428  001966  0100               	movlb	0	; force () banked
  4429  001968  25B4               	addwf	?___wmul& (0+255),w,b
  4430  00196A  0100               	movlb	0	; force () banked
  4431  00196C  6FC3               	movwf	??_afficheTabMine& (0+255),b
  4432  00196E  0E00               	movlw	high _m_tabMines
  4433  001970  0100               	movlb	0	; force () banked
  4434  001972  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  4435  001974  0100               	movlb	0	; force () banked
  4436  001976  6FC4               	movwf	(??_afficheTabMine+1)& (0+255),b
  4437  001978  C0C3  F0BA         	movff	??_afficheTabMine,lcd_putMessage@chaine
  4438  00197C  C0C4  F0BB         	movff	??_afficheTabMine+1,lcd_putMessage@chaine+1
  4439  001980  0100               	movlb	0	; force () banked
  4440  001982  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  4441  001984  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4442  001986  A4D8               	btfss	status,2,c
  4443  001988  0E20               	movlw	32
  4444  00198A  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4445  00198C  EC35  F00B         	call	_lcd_putMessage	;wreg free
  4446  001990  0100               	movlb	0	; force () banked
  4447  001992  4BC5               	infsnz	afficheTabMine@i& (0+255),f,b
  4448  001994  2BC6               	incf	(afficheTabMine@i+1)& (0+255),f,b
  4449  001996                     
  4450                           ; BSR set to: 0
  4451  001996  0100               	movlb	0	; force () banked
  4452  001998  BFC6               	btfsc	(afficheTabMine@i+1)& (0+255),7,b
  4453  00199A  EFD8  F00C         	goto	u1561
  4454  00199E  51C6               	movf	(afficheTabMine@i+1)& (0+255),w,b
  4455  0019A0  E109               	bnz	u1560
  4456  0019A2  0E04               	movlw	4
  4457  0019A4  5DC5               	subwf	afficheTabMine@i& (0+255),w,b
  4458  0019A6  A0D8               	btfss	status,0,c
  4459  0019A8  EFD8  F00C         	goto	u1561
  4460  0019AC  EFDA  F00C         	goto	u1560
  4461  0019B0                     u1561:
  4462  0019B0  EFA0  F00C         	goto	l2364
  4463  0019B4                     u1560:
  4464  0019B4                     l167:
  4465                           
  4466                           ; BSR set to: 0
  4467  0019B4  0012               	return		;funcret
  4468  0019B6                     __end_of_afficheTabMine:
  4469                           	opt callstack 0
  4470                           
  4471 ;; *************** function _lcd_putMessage *****************
  4472 ;; Defined at:
  4473 ;;		line 387 in file "Lcd4Lignes.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  4476 ;;		 -> m_tabMines(84), m_tabVue(84), accueil(15), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  j               1   14[BANK0 ] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4488 ;;      Params:         0       3       0       0       0       0       0
  4489 ;;      Locals:         0       1       0       0       0       0       0
  4490 ;;      Temps:          0       5       0       0       0       0       0
  4491 ;;      Totals:         0       9       0       0       0       0       0
  4492 ;;Total ram usage:        9 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    4
  4495 ;; This function calls:
  4496 ;;		_lcd_ecritChar
  4497 ;; This function is called by:
  4498 ;;		_main
  4499 ;;		_initTabVue
  4500 ;;		_afficheTabVue
  4501 ;;		_afficheTabMine
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text24
  4506  00166A                     __ptext24:
  4507                           	opt callstack 0
  4508  00166A                     _lcd_putMessage:
  4509                           	opt callstack 26
  4510  00166A                     
  4511                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4512  00166A  0E00               	movlw	0
  4513  00166C  0100               	movlb	0	; force () banked
  4514  00166E  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  4515  001670  EF62  F00B         	goto	l1932
  4516  001674                     l1928:
  4517                           
  4518                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4519  001674  0100               	movlb	0	; force () banked
  4520  001676  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  4521  001678  0100               	movlb	0	; force () banked
  4522  00167A  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  4523  00167C  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4524  00167E  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  4525  001680  0100               	movlb	0	; force () banked
  4526  001682  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4527  001684  0100               	movlb	0	; force () banked
  4528  001686  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4529  001688  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4530  00168A  0100               	movlb	0	; force () banked
  4531  00168C  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4532  00168E  0100               	movlb	0	; force () banked
  4533  001690  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4534  001692  0E00               	movlw	0
  4535  001694  0100               	movlb	0	; force () banked
  4536  001696  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4537  001698  0100               	movlb	0	; force () banked
  4538  00169A  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4539  00169C  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4540  0016A0  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4541  0016A4  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4542  0016A8  BAF8               	btfsc	tblptru,5,c
  4543  0016AA  D003               	bra	u887
  4544  0016AC  0008               	tblrd		*
  4545  0016AE  50F5               	movf	tablat,w,c
  4546  0016B0  D005               	bra	u880
  4547  0016B2                     u887:
  4548  0016B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  4549  0016B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  4550  0016BA  50EF               	movf	indf0,w,c
  4551  0016BC                     u880:
  4552  0016BC  EC0F  F00E         	call	_lcd_ecritChar
  4553  0016C0  0100               	movlb	0	; force () banked
  4554  0016C2  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  4555  0016C4                     l1932:
  4556                           
  4557                           ; BSR set to: 0
  4558  0016C4  0100               	movlb	0	; force () banked
  4559  0016C6  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  4560  0016C8  0100               	movlb	0	; force () banked
  4561  0016CA  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  4562  0016CC  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4563  0016CE  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  4564  0016D0  0100               	movlb	0	; force () banked
  4565  0016D2  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4566  0016D4  0100               	movlb	0	; force () banked
  4567  0016D6  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4568  0016D8  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4569  0016DA  0100               	movlb	0	; force () banked
  4570  0016DC  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4571  0016DE  0100               	movlb	0	; force () banked
  4572  0016E0  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4573  0016E2  0E00               	movlw	0
  4574  0016E4  0100               	movlb	0	; force () banked
  4575  0016E6  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4576  0016E8  0100               	movlb	0	; force () banked
  4577  0016EA  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4578  0016EC  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4579  0016F0  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4580  0016F4  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4581  0016F8  BAF8               	btfsc	tblptru,5,c
  4582  0016FA  D003               	bra	u897
  4583  0016FC  0008               	tblrd		*
  4584  0016FE  50F5               	movf	tablat,w,c
  4585  001700  D005               	bra	u890
  4586  001702                     u897:
  4587  001702  CFF6 FFE9          	movff	tblptrl,fsr0l
  4588  001706  CFF7 FFEA          	movff	tblptrh,fsr0h
  4589  00170A  50EF               	movf	indf0,w,c
  4590  00170C                     u890:
  4591  00170C  0900               	iorlw	0
  4592  00170E  A4D8               	btfss	status,2,c
  4593  001710  EF8C  F00B         	goto	u901
  4594  001714  EF8E  F00B         	goto	u900
  4595  001718                     u901:
  4596  001718  EF3A  F00B         	goto	l1928
  4597  00171C                     u900:
  4598  00171C  0012               	return		;funcret
  4599  00171E                     __end_of_lcd_putMessage:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function _lcd_ecritChar *****************
  4603 ;; Defined at:
  4604 ;;		line 359 in file "Lcd4Lignes.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  car             1    wreg     unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  car             1    3[BANK0 ] unsigned char 
  4609 ;;  posRam          1    4[BANK0 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4619 ;;      Params:         0       0       0       0       0       0       0
  4620 ;;      Locals:         0       2       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0
  4622 ;;      Totals:         0       2       0       0       0       0       0
  4623 ;;Total ram usage:        2 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    3
  4626 ;; This function calls:
  4627 ;;		_lcd_wrCom
  4628 ;;		_lcd_wrData
  4629 ;; This function is called by:
  4630 ;;		_lcd_putMessage
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text25
  4635  001C1E                     __ptext25:
  4636                           	opt callstack 0
  4637  001C1E                     _lcd_ecritChar:
  4638                           	opt callstack 26
  4639                           
  4640                           ;incstack = 0
  4641                           ;lcd_ecritChar@car stored from wreg
  4642  001C1E  0100               	movlb	0	; force () banked
  4643  001C20  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  4644  001C22                     
  4645                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4646  001C22  0100               	movlb	0	; force () banked
  4647  001C24  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  4648  001C26  EC94  F00E         	call	_lcd_wrData
  4649  001C2A  0100               	movlb	0	; force () banked
  4650  001C2C  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  4651                           
  4652                           ;Lcd4Lignes.c: 364: switch(posRam)
  4653  001C2E  EF28  F00E         	goto	l1910
  4654  001C32                     l1902:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4658  001C32  0EC0               	movlw	192
  4659  001C34  EC4A  F00D         	call	_lcd_wrCom
  4660                           
  4661                           ;Lcd4Lignes.c: 368: break;
  4662  001C38  EF38  F00E         	goto	l310
  4663  001C3C                     l1904:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4667  001C3C  0E94               	movlw	148
  4668  001C3E  EC4A  F00D         	call	_lcd_wrCom
  4669                           
  4670                           ;Lcd4Lignes.c: 371: break;
  4671  001C42  EF38  F00E         	goto	l310
  4672  001C46                     l1906:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4676  001C46  0ED4               	movlw	212
  4677  001C48  EC4A  F00D         	call	_lcd_wrCom
  4678                           
  4679                           ;Lcd4Lignes.c: 374: break;
  4680  001C4C  EF38  F00E         	goto	l310
  4681  001C50                     l1910:
  4682                           
  4683                           ; BSR set to: 0
  4684  001C50  0100               	movlb	0	; force () banked
  4685  001C52  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4686                           
  4687                           ; Switch size 1, requested type "simple"
  4688                           ; Number of cases is 3, Range of values is 148 to 212
  4689                           ; switch strategies available:
  4690                           ; Name         Instructions Cycles
  4691                           ; simple_byte           10     6 (average)
  4692                           ;	Chosen strategy is simple_byte
  4693  001C54  0A94               	xorlw	148	; case 148
  4694  001C56  B4D8               	btfsc	status,2,c
  4695  001C58  EF19  F00E         	goto	l1902
  4696  001C5C  0A54               	xorlw	84	; case 192
  4697  001C5E  B4D8               	btfsc	status,2,c
  4698  001C60  EF23  F00E         	goto	l1906
  4699  001C64  0A14               	xorlw	20	; case 212
  4700  001C66  B4D8               	btfsc	status,2,c
  4701  001C68  EF1E  F00E         	goto	l1904
  4702  001C6C  EF38  F00E         	goto	l310
  4703  001C70                     l310:
  4704  001C70  0012               	return		;funcret
  4705  001C72                     __end_of_lcd_ecritChar:
  4706                           	opt callstack 0
  4707                           
  4708 ;; *************** function _lcd_wrData *****************
  4709 ;; Defined at:
  4710 ;;		line 188 in file "Lcd4Lignes.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  caractere       1    wreg     unsigned char 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  caractere       1    2[BANK0 ] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      unsigned char 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4724 ;;      Params:         0       0       0       0       0       0       0
  4725 ;;      Locals:         0       1       0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0
  4727 ;;      Totals:         0       1       0       0       0       0       0
  4728 ;;Total ram usage:        1 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    2
  4731 ;; This function calls:
  4732 ;;		_lcd_busy
  4733 ;;		_lcd_ecrireDonnees
  4734 ;;		_lcd_strobeEnableBit
  4735 ;; This function is called by:
  4736 ;;		_lcd_ecritChar
  4737 ;;		_lcd_initCGRam
  4738 ;;		_lcd_effaceChar
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text26
  4743  001D28                     __ptext26:
  4744                           	opt callstack 0
  4745  001D28                     _lcd_wrData:
  4746                           	opt callstack 26
  4747                           
  4748                           ;incstack = 0
  4749                           ;lcd_wrData@caractere stored from wreg
  4750  001D28  0100               	movlb	0	; force () banked
  4751  001D2A  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  4752  001D2C                     
  4753                           ;Lcd4Lignes.c: 190: lcd_busy();
  4754  001D2C  EC39  F00E         	call	_lcd_busy	;wreg free
  4755  001D30                     
  4756                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4757  001D30  0E00               	movlw	0
  4758  001D32  6E95               	movwf	149,c	;volatile
  4759  001D34                     
  4760                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4761  001D34  8080               	bsf	128,0,c	;volatile
  4762  001D36                     
  4763                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4764  001D36  9280               	bcf	128,1,c	;volatile
  4765  001D38                     
  4766                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4767  001D38  0100               	movlb	0	; force () banked
  4768  001D3A  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  4769  001D3C  0B0F               	andlw	15
  4770  001D3E  ECEC  F00E         	call	_lcd_ecrireDonnees
  4771  001D42                     
  4772                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4773  001D42  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4774  001D46                     
  4775                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4776  001D46  0100               	movlb	0	; force () banked
  4777  001D48  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  4778  001D4A  ECEC  F00E         	call	_lcd_ecrireDonnees
  4779  001D4E                     
  4780                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4781  001D4E  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4782  001D52                     
  4783                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4784  001D52  0E0F               	movlw	15
  4785  001D54  6E95               	movwf	149,c	;volatile
  4786  001D56                     
  4787                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4788                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4789  001D56  EC39  F00E         	call	_lcd_busy	;wreg free
  4790  001D5A  0012               	return		;funcret
  4791  001D5C                     __end_of_lcd_wrData:
  4792                           	opt callstack 0
  4793                           
  4794 ;; *************** function _lcd_gotoXY *****************
  4795 ;; Defined at:
  4796 ;;		line 314 in file "Lcd4Lignes.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  x               1    wreg     unsigned char 
  4799 ;;  y               1    3[BANK0 ] unsigned char 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  x               1    4[BANK0 ] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4811 ;;      Params:         0       1       0       0       0       0       0
  4812 ;;      Locals:         0       1       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0
  4814 ;;      Totals:         0       2       0       0       0       0       0
  4815 ;;Total ram usage:        2 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		_lcd_wrCom
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;;		_deplace
  4823 ;;		_afficheTabVue
  4824 ;;		_afficheTabMine
  4825 ;;		_lcd_effaceLigne
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text27
  4830  0019B6                     __ptext27:
  4831                           	opt callstack 0
  4832  0019B6                     _lcd_gotoXY:
  4833                           	opt callstack 27
  4834                           
  4835                           ;incstack = 0
  4836                           ;lcd_gotoXY@x stored from wreg
  4837  0019B6  0100               	movlb	0	; force () banked
  4838  0019B8  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  4839  0019BA                     
  4840                           ;Lcd4Lignes.c: 316: switch(y)
  4841  0019BA  EFFF  F00C         	goto	l1924
  4842  0019BE                     l1914:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4846  0019BE  0100               	movlb	0	; force () banked
  4847  0019C0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4848  0019C2  0F7F               	addlw	127
  4849  0019C4  0980               	iorlw	128
  4850  0019C6  EC4A  F00D         	call	_lcd_wrCom
  4851                           
  4852                           ;Lcd4Lignes.c: 320: break;
  4853  0019CA  EF13  F00D         	goto	l299
  4854  0019CE                     l1916:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4858  0019CE  0100               	movlb	0	; force () banked
  4859  0019D0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4860  0019D2  0FBF               	addlw	191
  4861  0019D4  0980               	iorlw	128
  4862  0019D6  EC4A  F00D         	call	_lcd_wrCom
  4863                           
  4864                           ;Lcd4Lignes.c: 323: break;
  4865  0019DA  EF13  F00D         	goto	l299
  4866  0019DE                     l1918:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4870  0019DE  0100               	movlb	0	; force () banked
  4871  0019E0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4872  0019E2  0F93               	addlw	147
  4873  0019E4  0980               	iorlw	128
  4874  0019E6  EC4A  F00D         	call	_lcd_wrCom
  4875                           
  4876                           ;Lcd4Lignes.c: 326: break;
  4877  0019EA  EF13  F00D         	goto	l299
  4878  0019EE                     l1920:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4882  0019EE  0100               	movlb	0	; force () banked
  4883  0019F0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4884  0019F2  0FD3               	addlw	211
  4885  0019F4  0980               	iorlw	128
  4886  0019F6  EC4A  F00D         	call	_lcd_wrCom
  4887                           
  4888                           ;Lcd4Lignes.c: 329: break;
  4889  0019FA  EF13  F00D         	goto	l299
  4890  0019FE                     l1924:
  4891  0019FE  0100               	movlb	0	; force () banked
  4892  001A00  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  4893                           
  4894                           ; Switch size 1, requested type "simple"
  4895                           ; Number of cases is 4, Range of values is 1 to 4
  4896                           ; switch strategies available:
  4897                           ; Name         Instructions Cycles
  4898                           ; simple_byte           13     7 (average)
  4899                           ;	Chosen strategy is simple_byte
  4900  001A02  0A01               	xorlw	1	; case 1
  4901  001A04  B4D8               	btfsc	status,2,c
  4902  001A06  EFDF  F00C         	goto	l1914
  4903  001A0A  0A03               	xorlw	3	; case 2
  4904  001A0C  B4D8               	btfsc	status,2,c
  4905  001A0E  EFE7  F00C         	goto	l1916
  4906  001A12  0A01               	xorlw	1	; case 3
  4907  001A14  B4D8               	btfsc	status,2,c
  4908  001A16  EFEF  F00C         	goto	l1918
  4909  001A1A  0A07               	xorlw	7	; case 4
  4910  001A1C  B4D8               	btfsc	status,2,c
  4911  001A1E  EFF7  F00C         	goto	l1920
  4912  001A22  EF13  F00D         	goto	l299
  4913  001A26                     l299:
  4914  001A26  0012               	return		;funcret
  4915  001A28                     __end_of_lcd_gotoXY:
  4916                           	opt callstack 0
  4917                           
  4918 ;; *************** function _lcd_wrCom *****************
  4919 ;; Defined at:
  4920 ;;		line 156 in file "Lcd4Lignes.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  commande        1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  commande        1    2[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4934 ;;      Params:         0       0       0       0       0       0       0
  4935 ;;      Locals:         0       1       0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0
  4937 ;;      Totals:         0       1       0       0       0       0       0
  4938 ;;Total ram usage:        1 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		_lcd_busy
  4943 ;;		_lcd_ecrireDonnees
  4944 ;;		_lcd_strobeEnableBit
  4945 ;; This function is called by:
  4946 ;;		_lcd_init
  4947 ;;		_lcd_effaceAffichage
  4948 ;;		_lcd_curseurHome
  4949 ;;		_lcd_gotoXY
  4950 ;;		_lcd_ecritChar
  4951 ;;		_lcd_cacheCurseur
  4952 ;;		_lcd_montreCurseur
  4953 ;;		_lcd_initCGRam
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text28
  4958  001A94                     __ptext28:
  4959                           	opt callstack 0
  4960  001A94                     _lcd_wrCom:
  4961                           	opt callstack 26
  4962                           
  4963                           ;incstack = 0
  4964                           ;lcd_wrCom@commande stored from wreg
  4965  001A94  0100               	movlb	0	; force () banked
  4966  001A96  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4967  001A98                     
  4968                           ;Lcd4Lignes.c: 158: lcd_busy();
  4969  001A98  EC39  F00E         	call	_lcd_busy	;wreg free
  4970  001A9C                     
  4971                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4972  001A9C  0E00               	movlw	0
  4973  001A9E  6E95               	movwf	149,c	;volatile
  4974  001AA0                     
  4975                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4976  001AA0  9080               	bcf	128,0,c	;volatile
  4977  001AA2                     
  4978                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4979  001AA2  9280               	bcf	128,1,c	;volatile
  4980  001AA4                     
  4981                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4982  001AA4  0100               	movlb	0	; force () banked
  4983  001AA6  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4984  001AA8  0B0F               	andlw	15
  4985  001AAA  ECEC  F00E         	call	_lcd_ecrireDonnees
  4986  001AAE                     
  4987                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4988  001AAE  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4989  001AB2                     
  4990                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4991  001AB2  0100               	movlb	0	; force () banked
  4992  001AB4  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4993  001AB6  ECEC  F00E         	call	_lcd_ecrireDonnees
  4994  001ABA                     
  4995                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4996  001ABA  EC15  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4997  001ABE                     
  4998                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4999  001ABE  0E03               	movlw	3
  5000  001AC0                     u1707:
  5001  001AC0  2EE8               	decfsz	wreg,f,c
  5002  001AC2  D7FE               	bra	u1707
  5003  001AC4  F000               	nop	
  5004  001AC6                     
  5005                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  5006  001AC6  0100               	movlb	0	; force () banked
  5007  001AC8  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  5008  001ACA  B4D8               	btfsc	status,2,c
  5009  001ACC  EF6A  F00D         	goto	u861
  5010  001AD0  EF6C  F00D         	goto	u860
  5011  001AD4                     u861:
  5012  001AD4  EF76  F00D         	goto	l1862
  5013  001AD8                     u860:
  5014  001AD8                     
  5015                           ; BSR set to: 0
  5016  001AD8  0E02               	movlw	2
  5017  001ADA  0100               	movlb	0	; force () banked
  5018  001ADC  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5019  001ADE  A4D8               	btfss	status,2,c
  5020  001AE0  EF74  F00D         	goto	u871
  5021  001AE4  EF76  F00D         	goto	u870
  5022  001AE8                     u871:
  5023  001AE8  EF7B  F00D         	goto	l1864
  5024  001AEC                     u870:
  5025  001AEC                     l1862:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  5029  001AEC  0EA6               	movlw	166
  5030  001AEE                     u1717:
  5031  001AEE  2EE8               	decfsz	wreg,f,c
  5032  001AF0  D7FE               	bra	u1717
  5033  001AF2  F000 F000          	nop2	
  5034  001AF6                     l1864:
  5035                           
  5036                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  5037  001AF6  0E0F               	movlw	15
  5038  001AF8  6E95               	movwf	149,c	;volatile
  5039  001AFA                     
  5040                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  5041  001AFA  EC39  F00E         	call	_lcd_busy	;wreg free
  5042  001AFE  0012               	return		;funcret
  5043  001B00                     __end_of_lcd_wrCom:
  5044                           	opt callstack 0
  5045                           
  5046 ;; *************** function _lcd_strobeEnableBit *****************
  5047 ;; Defined at:
  5048 ;;		line 431 in file "Lcd4Lignes.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		None
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5062 ;;      Params:         0       0       0       0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0       0       0
  5065 ;;      Totals:         0       0       0       0       0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_lcd_wrCom
  5072 ;;		_lcd_wrData
  5073 ;;		_lcd_resetSequence
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text29
  5078  001E2A                     __ptext29:
  5079                           	opt callstack 0
  5080  001E2A                     _lcd_strobeEnableBit:
  5081                           	opt callstack 27
  5082  001E2A                     
  5083                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  5084  001E2A  8480               	bsf	128,2,c	;volatile
  5085                           
  5086                           ;Lcd4Lignes.c: 434: __nop();
  5087  001E2C  F000               	nop	
  5088                           
  5089                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  5090  001E2E  9480               	bcf	128,2,c	;volatile
  5091  001E30  0012               	return		;funcret
  5092  001E32                     __end_of_lcd_strobeEnableBit:
  5093                           	opt callstack 0
  5094                           
  5095 ;; *************** function _lcd_ecrireDonnees *****************
  5096 ;; Defined at:
  5097 ;;		line 107 in file "Lcd4Lignes.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  donnee          1    wreg     unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  donnee          1    1[BANK0 ] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5111 ;;      Params:         0       0       0       0       0       0       0
  5112 ;;      Locals:         0       1       0       0       0       0       0
  5113 ;;      Temps:          0       1       0       0       0       0       0
  5114 ;;      Totals:         0       2       0       0       0       0       0
  5115 ;;Total ram usage:        2 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_lcd_wrCom
  5121 ;;		_lcd_wrData
  5122 ;;		_lcd_resetSequence
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text30
  5127  001DD8                     __ptext30:
  5128                           	opt callstack 0
  5129  001DD8                     _lcd_ecrireDonnees:
  5130                           	opt callstack 27
  5131                           
  5132                           ;incstack = 0
  5133                           ;lcd_ecrireDonnees@donnee stored from wreg
  5134  001DD8  0100               	movlb	0	; force () banked
  5135  001DDA  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5136  001DDC                     
  5137                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5138  001DDC  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5139  001DE0  0EF0               	movlw	240
  5140  001DE2  0100               	movlb	0	; force () banked
  5141  001DE4  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5142  001DE6  0100               	movlb	0	; force () banked
  5143  001DE8  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5144  001DEA  0B0F               	andlw	15
  5145  001DEC  0100               	movlb	0	; force () banked
  5146  001DEE  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5147  001DF0  6E83               	movwf	131,c	;volatile
  5148  001DF2                     
  5149                           ; BSR set to: 0
  5150  001DF2  0012               	return		;funcret
  5151  001DF4                     __end_of_lcd_ecrireDonnees:
  5152                           	opt callstack 0
  5153                           
  5154 ;; *************** function _lcd_busy *****************
  5155 ;; Defined at:
  5156 ;;		line 124 in file "Lcd4Lignes.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  adresse         1    1[BANK0 ] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      unsigned char 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5170 ;;      Params:         0       0       0       0       0       0       0
  5171 ;;      Locals:         0       1       0       0       0       0       0
  5172 ;;      Temps:          0       1       0       0       0       0       0
  5173 ;;      Totals:         0       2       0       0       0       0       0
  5174 ;;Total ram usage:        2 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    1
  5177 ;; This function calls:
  5178 ;;		_lcd_lireDonnees
  5179 ;; This function is called by:
  5180 ;;		_lcd_wrCom
  5181 ;;		_lcd_wrData
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text31
  5186  001C72                     __ptext31:
  5187                           	opt callstack 0
  5188  001C72                     _lcd_busy:
  5189                           	opt callstack 26
  5190  001C72                     
  5191                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  5192  001C72  9080               	bcf	128,0,c	;volatile
  5193                           
  5194                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  5195  001C74  8280               	bsf	128,1,c	;volatile
  5196  001C76                     l261:
  5197                           
  5198                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  5199  001C76  8480               	bsf	128,2,c	;volatile
  5200                           
  5201                           ;Lcd4Lignes.c: 134: __nop();
  5202  001C78  F000               	nop	
  5203  001C7A                     
  5204                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  5205  001C7A  EC19  F00F         	call	_lcd_lireDonnees	;wreg free
  5206  001C7E  0100               	movlb	0	; force () banked
  5207  001C80  6FB4               	movwf	??_lcd_busy& (0+255),b
  5208  001C82  39B4               	swapf	??_lcd_busy& (0+255),w,b
  5209  001C84  0BF0               	andlw	240
  5210  001C86  0100               	movlb	0	; force () banked
  5211  001C88  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  5212  001C8A                     
  5213                           ; BSR set to: 0
  5214                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  5215  001C8A  9480               	bcf	128,2,c	;volatile
  5216  001C8C                     
  5217                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  5218  001C8C  8480               	bsf	128,2,c	;volatile
  5219  001C8E                     
  5220                           ;Lcd4Lignes.c: 139: __nop();
  5221  001C8E  F000               	nop	
  5222                           
  5223                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  5224  001C90  EC19  F00F         	call	_lcd_lireDonnees	;wreg free
  5225  001C94  0100               	movlb	0	; force () banked
  5226  001C96  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  5227  001C98                     
  5228                           ; BSR set to: 0
  5229                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  5230  001C98  9480               	bcf	128,2,c	;volatile
  5231  001C9A                     
  5232                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  5233  001C9A  0100               	movlb	0	; force () banked
  5234  001C9C  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  5235  001C9E  EF53  F00E         	goto	u851
  5236  001CA2  EF55  F00E         	goto	u850
  5237  001CA6                     u851:
  5238  001CA6  EF3B  F00E         	goto	l261
  5239  001CAA                     u850:
  5240  001CAA                     
  5241                           ; BSR set to: 0
  5242                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  5243  001CAA  9280               	bcf	128,1,c	;volatile
  5244  001CAC                     
  5245                           ; BSR set to: 0
  5246                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  5247  001CAC  0100               	movlb	0	; force () banked
  5248  001CAE  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  5249  001CB0  0B7F               	andlw	127
  5250  001CB2                     
  5251                           ; BSR set to: 0
  5252  001CB2  0012               	return		;funcret
  5253  001CB4                     __end_of_lcd_busy:
  5254                           	opt callstack 0
  5255                           
  5256 ;; *************** function _lcd_lireDonnees *****************
  5257 ;; Defined at:
  5258 ;;		line 93 in file "Lcd4Lignes.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      unsigned char 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5272 ;;      Params:         0       0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_lcd_busy
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text32
  5286  001E32                     __ptext32:
  5287                           	opt callstack 0
  5288  001E32                     _lcd_lireDonnees:
  5289                           	opt callstack 26
  5290  001E32                     
  5291                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  5292  001E32  5083               	movf	131,w,c	;volatile
  5293  001E34  0B0F               	andlw	15
  5294  001E36  0012               	return		;funcret
  5295  001E38                     __end_of_lcd_lireDonnees:
  5296                           	opt callstack 0
  5297                           
  5298 ;; *************** function ___wmul *****************
  5299 ;; Defined at:
  5300 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5303 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  product         2    4[BANK0 ] unsigned int 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  2    0[BANK0 ] unsigned int 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0, prodl, prodh
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5315 ;;      Params:         0       4       0       0       0       0       0
  5316 ;;      Locals:         0       2       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0
  5318 ;;      Totals:         0       6       0       0       0       0       0
  5319 ;;Total ram usage:        6 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_initTabVue
  5325 ;;		_rempliMines
  5326 ;;		_gagne
  5327 ;;		_metToucheCombien
  5328 ;;		_calculToucheCombien
  5329 ;;		_afficheTabVue
  5330 ;;		_afficheTabMine
  5331 ;;		_enleveTuilesAutour
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text33
  5336  001DB0                     __ptext33:
  5337                           	opt callstack 0
  5338  001DB0                     ___wmul:
  5339                           	opt callstack 29
  5340  001DB0  0100               	movlb	0	; () banked
  5341  001DB2  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5342  001DB4  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5343  001DB6  CFF3 F0B8          	movff	prodl,___wmul@product
  5344  001DBA  CFF4 F0B9          	movff	prodh,___wmul@product+1
  5345  001DBE  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5346  001DC0  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5347  001DC2  50F3               	movf	243,w,c
  5348  001DC4  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5349  001DC6  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5350  001DC8  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5351  001DCA  50F3               	movf	243,w,c
  5352  001DCC  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5353  001DCE                     
  5354                           ; BSR set to: 0
  5355  001DCE  C0B8  F0B4         	movff	___wmul@product,?___wmul
  5356  001DD2  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  5357  001DD6                     
  5358                           ; BSR set to: 0
  5359  001DD6  0012               	return		;funcret
  5360  001DD8                     __end_of___wmul:
  5361                           	opt callstack 0
  5362                           
  5363                           	psect	param0
  5364  0000                     tosu	equ	0xFFF
  5365                           tosh	equ	0xFFE
  5366                           tosl	equ	0xFFD
  5367                           stkptr	equ	0xFFC
  5368                           pclatu	equ	0xFFB
  5369                           pclath	equ	0xFFA
  5370                           pcl	equ	0xFF9
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           prodh	equ	0xFF4
  5376                           prodl	equ	0xFF3
  5377                           indf0	equ	0xFEF
  5378                           postinc0	equ	0xFEE
  5379                           postdec0	equ	0xFED
  5380                           preinc0	equ	0xFEC
  5381                           plusw0	equ	0xFEB
  5382                           fsr0h	equ	0xFEA
  5383                           fsr0l	equ	0xFE9
  5384                           wreg	equ	0xFE8
  5385                           indf1	equ	0xFE7
  5386                           postinc1	equ	0xFE6
  5387                           postdec1	equ	0xFE5
  5388                           preinc1	equ	0xFE4
  5389                           plusw1	equ	0xFE3
  5390                           fsr1h	equ	0xFE2
  5391                           fsr1l	equ	0xFE1
  5392                           bsr	equ	0xFE0
  5393                           indf2	equ	0xFDF
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           preinc2	equ	0xFDC
  5397                           plusw2	equ	0xFDB
  5398                           fsr2h	equ	0xFDA
  5399                           fsr2l	equ	0xFD9
  5400                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    15
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     44     132
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), accueil(CODE[15]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nb(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_cacheCurseur->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->_lcd_putMessage
    _gagne->___wmul
    _deplace->_lcd_gotoXY
    _lcd_montreCurseur->_lcd_wrCom
    _demine->_afficheTabVue
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _afficheTabMine->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   41880
                                             36 BANK0      8     8      0
                     _afficheTabMine
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                  _lcd_montreCurseur
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    4846
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     8     8      0    8268
                                             16 BANK0      8     8      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    4398
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           8     8      0    4511
                                             15 BANK0      8     8      0
                             ___wmul
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _gagne                                               11     9      2    3901
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1877
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
                  _lcd_montreCurseur
 ---------------------------------------------------------------------------------
 (1) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    9737
                                             19 BANK0     10     9      1
                      _afficheTabVue
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  10     9      1    3943
                                              6 BANK0     10     9      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        4     4      0    5422
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMine                                       4     4      0    5422
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     707
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1026
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3599
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMine
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       ___wmul
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         ___wmul (ARG)
         _lcd_ecritChar (ARG)
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
       ___wmul
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_montreCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
   _initTabVue
     ___wmul
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_montreCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      15        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 11:59:51 2019

 __end_of_calculToucheCombien 0A2A                            l79 1490                            l99 0FA0  
        ??_enleveTuilesAutour 00BB           ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l111 0C44                           l120 13D2  
                         l130 111A                           l310 1C70                           l118 1336  
                         l162 1912                           l322 1E28                           l146 0A28  
                         l171 1668                           l332 1E30                           l316 171C  
                         l180 1278                           l261 1C76                           l157 0E1A  
                         l262 1CAA                           l335 1DD6                           l255 1E36  
                         l263 1CB2                           l167 19B4                           l183 1D76  
                         l319 1E20                           l272 1D5A                           l176 1148  
                         l281 1E10                           l329 1870                           l258 1DF2  
                         l186 1D86                           l346 1A82                           l275 1B68  
                         l347 1A92                           l284 1E18                           l269 1AFE  
                         l189 1D26                           l278 1DAE                           l299 1A26  
                         l579 17CE                           l999 1E02                  __CFG_CPB$OFF 000000  
                         u210 1D84                           u211 1D80                  __CFG_CPD$OFF 000000  
                         u900 171C                           u901 1718                           u910 1A48  
                         u911 1A44                           u920 1A82                           u921 1A7E  
                         u850 1CAA                           u930 064E                           u851 1CA6  
                         u931 064A                           u860 1AD8                           u940 067E  
                         u861 1AD4                           u941 067A                           u870 1AEC  
                         u950 06B4                           u871 1AE8                           u951 06B0  
                         u880 16BC                           u960 06E4                           u961 06E0  
                         u890 170C                           u970 074A                           u971 0746  
                         u980 07B6                           u981 07B2                           u990 0822  
                         u887 16B2                           u991 081E                           u897 1702  
                __CFG_BORV$18 000000                  ___awmod@sign 00C7                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E  
                __CFG_LVP$OFF 000000                          l1002 1C1C                          l2000 09C0  
                        l2010 187C                          l2002 0A1E                          l2020 18F4  
                        l2100 185A                          l2004 0A24                          l2014 189E  
                        l2022 1120                          l2102 186C                          l2110 173A  
                        l2016 18AC                          l2008 1872                          l2040 125A  
                        l2032 1170                          l2024 1126                          l2200 0F82  
                        l2120 176E                          l2112 173E                          l2104 171E  
                        l2018 18EE                          l2034 1230                          l1330 1D60  
                        l2042 1DF4                          l2050 1B1A                          l2130 17A8  
                        l2122 1776                          l2114 174C                          l2106 1724  
                        l2210 0A98                          l2202 0A2A                          l2036 1236  
                        l2028 114E                          l1332 1D74                          l2300 0DF6  
                        l2140 1CF4                          l2060 1B34                          l2052 1B1C  
                        l2044 1B00                          l2124 1784                          l2132 17AE  
                        l2116 1754                          l2108 1732                          l2220 0B26  
                        l2204 0A6C                          l2038 1254                          l2310 1584  
                        l1334 1D74                          l2302 0E0E                          l2150 1D16  
                        l2142 1CFC                          l2070 1B52                          l2062 1B38  
                        l2054 1B22                          l2046 1B04                          l2134 17BE  
                        l2126 179A                          l2118 1766                          l2230 0C1E  
                        l2222 0B2C                          l2214 0ABA                          l2312 15D2  
                        l2304 1530                          l1336 1D84                          l2152 1D18  
                        l2144 1D06                          l2080 17D6                          l2072 1B58  
                        l2064 1B40                          l2056 1B26                          l2048 1B18  
                        l2160 1D88                          l2240 0FD4                          l2136 17C6  
                        l2128 17A2                          l2224 0B4E                          l2216 0B02  
                        l2232 0C24                          l2208 0A8E                          l2400 144A  
                        l2314 15E6                          l2306 157E                          l2330 12BA  
                        l2322 127A                          l2170 0E30                          l2154 1D1C  
                        l2146 1D08                          l2082 17DC                          l2074 1B5C  
                        l2066 1B46                          l2058 1B2E                          l2162 1DAA  
                        l2250 106E                          l2242 0FDE                          l2234 0FA2  
                        l2226 0B80                          l2218 0B08                          l2410 1482  
                        l2402 1456                          l2316 1662                          l2340 135A  
                        l2324 128E                          l2180 0E7E                          l2156 1D1E  
                        l2148 1D14                          l2164 1E04                          l2092 180E  
                        l2076 1B64                          l2068 1B4A                          l2252 1080  
                        l2260 10F6                          l2236 0FB2                          l2228 0BD6  
                        l2420 14EC                          l2404 145A                          l2318 1666  
                        l2270 0C9A                          l2342 1360                          l2334 12DC  
                        l2182 0EC6                          l2174 0E52                          l2158 1D22  
                        l2166 1E1A                          l2094 1840                          l2086 17F2  
                        l2078 17D0                          l2262 10FC                          l2254 10CC  
                        l2246 1000                          l2422 14FA                          l2414 149E  
                        l2430 1512                          l2406 1466                          l2360 191E  
                        l2280 0D0E                          l2272 0CB2                          l2264 0C46  
                        l2336 1330                          l2344 137E                          l2328 12B0  
                        l2192 0F16                          l2184 0ECC                          l2176 0E5C  
                        l2168 0E1C                          l2096 1844                          l2088 17F8  
                        l2256 10D2                          l2248 1056                          l2424 14FE  
                        l2416 14C6                          l2408 146A                          l1810 1DDC  
                        l2370 1996                          l2290 0D82                          l2282 0D26  
                        l2266 0C64                          l2274 0CBE                          l2346 13A0  
                        l2354 13D0                          l2338 133C                          l2194 0F58  
                        l2186 0EEA                          l2098 1856                          l2258 10D8  
                        l2426 1502                          l2418 14E8                          l1820 1C8C  
                        l1812 1C72                          l1900 1C22                          l2364 1940  
                        l2292 0D9A                          l2276 0CD8                          l2284 0D32  
                        l2268 0C7E                          l2348 13CA                          l2196 0F5E  
                        l2188 0EF4                          l2428 150E                          l2380 13D4  
                        l1806 1E32                          l1830 1CAC                          l1822 1C8E  
                        l1814 1C7A                          l1902 1C32                          l1910 1C50  
                        l2366 194E                          l2358 1914                          l2286 0D4C  
                        l2294 0DA6                          l2278 0CF2                          l2198 0F7C  
                        l2390 1402                          l2382 13F2                          l1824 1C98  
                        l1816 1C8A                          l1840 1AA0                          l1920 19EE  
                        l1912 19BA                          l1904 1C3C                          l2368 1990  
                        l2296 0DC0                          l2288 0D66                          l2392 140E  
                        l2384 13F6                          l1826 1C9A                          l1818 1C8C  
                        l1834 1E2A                          l1850 1AB2                          l1842 1AA0  
                        l1914 19BE                          l1906 1C46                          l1930 16C0  
                        l2298 0DDA                          l2394 1426                          l2386 13FA  
                        l1828 1C9A                          l1860 1AD8                          l1852 1AB2  
                        l1844 1AA2                          l1836 1A98                          l1916 19CE  
                        l1924 19FE                          l1932 16C4                          l2396 1442  
                        l2388 13FE                          l1862 1AEC                          l1854 1ABA  
                        l1846 1AA4                          l1838 1A9C                          l1918 19DE  
                        l1926 166A                          l1934 1E12                          l1950 1A62  
                        l1942 1A28                          l2398 1446                          l1936 1DB0  
                        l1864 1AF6                          l1856 1ABE                          l1848 1AAE  
                        l1880 1D36                          l1872 1D2C                          l1928 1674  
                        l1952 1E22                          l1944 1A3A                          l1938 1DCE  
                        l1866 1AFA                          l1858 1AC6                          l1890 1D4E  
                        l1882 1D38                          l1874 1D30                          l1970 06B4  
                        l1962 0612                          l1946 1A48                          l1954 1BC8  
                        l1868 1AFA                          l1892 1D52                          l1884 1D42  
                        l1876 1D34                          l1980 07BC                          l1972 06E4  
                        l1964 0618                          l1948 1A58                          l1956 1BFE  
                        l1894 1D52                          l1886 1D46                          l1878 1D34  
                        l1990 08F2                          l1982 0822                          l1974 074A  
                        l1966 064E                          l1958 1C10                          l1896 1D56  
                        l1888 1D46                          l1992 08F8                          l1984 0828  
                        l1976 0750                          l1968 067E                          l1994 0956  
                        l1986 088E                          l1978 07B6                          l1996 095C  
                        l1988 0894                          l1998 09BA                          u1000 088E  
                        u1001 088A                          u1010 08F2                          u1011 08EE  
                        u1100 1278                          u1020 0956                          u1101 1274  
                        u1021 0952                          u1110 17EE                          u1030 09BA  
                        u1111 17EA                          u1031 09B6                          u1120 180A  
                        u1040 0A1E                          u1200 17BE                          u1121 1806  
                        u1041 0A1A                          u1201 17BA                          u1050 189A  
                        u1210 0E4E                          u1130 1856                          u1051 1896  
                        u1211 0E4A                          u1131 1852                          u1060 1912  
                        u1220 0E7A                          u1140 186C                          u1300 0B4A  
                        u1061 190E                          u1221 0E76                          u1141 1868  
                        u1301 0B46                          u1070 1144                          u1230 0EEA  
                        u1150 1732                          u1310 0BD6                          u1071 1140  
                        u1231 0EE6                          u1151 172E                          u1311 0BD2  
                        u1080 116C                          u1400 0CB2                          u1240 0F12  
                        u1160 174C                          u1320 0C44                          u1081 1168  
                        u1401 0CAE                          u1241 0F0E                          u1161 1748  
                        u1321 0C40                          u1090 1254                          u1410 0CD8  
                        u1250 0F7C                          u1330 0FD0                          u1170 1766  
                        u1091 1250                          u1411 0CD4                          u1251 0F78  
                        u1331 0FCC                          u1171 1762                          u1420 0D26  
                        u1500 12D8                          u1260 0FA0                          u1340 0FFC  
                        u1180 1784                          u1421 0D22                          u1501 12D4  
                        u1261 0F9C                          u1341 0FF8                          u1181 1780  
                        u1430 0D4C                          u1510 1330                          u1350 1056  
                        u1190 179A                          u1270 0A8A                          u1431 0D48  
                        u1511 132C                          u1351 1052                          u1191 1796  
                        u1271 0A86                          u1440 0D9A                          u1520 135A  
                        u1360 1080                          u1280 0AB6                          u1600 14C6  
                        u1441 0D96                          u1521 1356                          u1361 107C  
                        u1281 0AB2                          u1601 14C2                          u1450 0DC0  
                        u1530 137E                          u1370 10F6                          u1290 0B26  
                        u1610 14E4                          u1451 0DBC                          u1531 137A  
                        u1371 10F2                          u1291 0B22                          u1611 14E0  
                        u1460 0E0E                          u1540 13A0                          u1380 111A  
                        u1620 14FA                          u1461 0E0A                          u1541 139C  
                        u1381 1116                          u1621 14F6                          u1550 193C  
                        u1470 157E                          u1390 0C64                          u1551 1938  
                        u1471 157A                          u1391 0C60                          u1560 19B4  
                        u1480 15D2                          u1561 19B0                          u1481 15CE  
                        u1490 12AC                          u1707 1AC0                          u1491 12A8  
                        u1580 1490                          u1717 1AEE                          u1581 148C  
                        u1637 1432                          u1590 149E                          u1647 151A  
                        u1591 149A                          u1657 1B0C                          u1667 1B28  
                        u1677 1B3A                          u1687 1B4C                          u1697 1B5E  
                        _RCIF 007CF5                          _TMR1 000FCE              ??_initialisation 00B6  
                        _main 13D4                          _rand 1BC8                          fsr0h 000FEA  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000  
            ??_afficheTabMine 00C3                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00B7                         ?_main 00B4                         ?_rand 00C0  
             __end_of___awmod 17D0                         _ANSEL 000F7E                         _RCREG 000FAE  
             __end_of_accueil 0610                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 0E1C  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _gagne 127A                         _randx 00E0                         _srand 1DF4  
                       tablat 000FF5                         status 000FD8      __end_of_lcd_cacheCurseur 1E22  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 0FA2  
             __initialization 1B6A                  __end_of_main 152C                  __end_of_rand 1C1E  
         enleveTuilesAutour@i 00C0           enleveTuilesAutour@j 00C2           enleveTuilesAutour@x 00BF  
         enleveTuilesAutour@y 00BA          lcd_putMessage@chaine 00BA    calculToucheCombien@colonne 00BC  
                      ??_main 00D8                        ??_rand 00C2                 __activetblptr 000003  
                      ?_gagne 00BA                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      ?_srand 00B4                        _ANSELH 000F7F                   initTabVue@g 00C7  
                 initTabVue@i 00C5                   initTabVue@j 00C9                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA                getAnalog@canal 00B5  
            __end_of_lcd_busy 1CB4              __end_of_lcd_init 1DB0                        ___lmul 1A28  
                      ___wmul 1DB0                __CFG_STVREN$ON 000000                     ??___awmod 00C6  
                      _demine 152C                        gagne@i 00C1                        gagne@j 00C3  
                      clear_0 1BB0                        clear_1 1BBC               ___awmod@divisor 00C4  
                   ??_deplace 00BD               ___awmod@counter 00C6                        main@nb 00DA  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 00B4        __size_of_afficheTabVue 00A2  
           _lcd_resetSequence 1B00                    __accesstop 0060       __end_of__initialization 1BC2  
         _lcd_strobeEnableBit 1E2A            ?_lcd_resetSequence 00B4                 ___rparam_used 000000  
         _lcd_effaceAffichage 1E04                  __pidataBANK0 1E38                  __pidataBANK1 1CB4  
         ??_lcd_resetSequence 00B6                 __end_of_gagne 13D4                 __end_of_srand 1E04  
        ?_lcd_strobeEnableBit 00B4     calculToucheCombien@nombre 00C3            __size_of_getAnalog 002C  
           _lcd_montreCurseur 1E22            ?_lcd_montreCurseur 00B4          ?_lcd_effaceAffichage 00B4  
          __size_of_lcd_wrCom 006C                       ??_gagne 00BC     __end_of_lcd_resetSequence 1B6A  
                     ??_srand 00B6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 1DD8  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BD  
         ??_lcd_montreCurseur 00B7            ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4                       ?___wmul 00B4  
                     ?_demine 00C7                 _afficheTabVue 1872     __end_of_lcd_montreCurseur 1E2A  
              ___lmul@product 00BC   __size_of_enleveTuilesAutour 015E         ??_lcd_strobeEnableBit 00B4  
__size_of_calculToucheCombien 0418      __end_of_metToucheCombien 111C                    _lcd_gotoXY 19B6  
       ??_lcd_effaceAffichage 00B7                    _lcd_wrData 1D28     __end_of_lcd_ecrireDonnees 1DF4  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 1D88             ?_lcd_cacheCurseur 00B4  
        __size_of_rempliMines 021C                       __Hparam 0000                       __Lparam 0000  
          ??_lcd_cacheCurseur 00B7                    _initTabVue 0E1C             __end_of_lcd_wrCom 1B00  
              ?_afficheTabVue 00B4               __size_of___lmul 006C                       ___awmod 171E  
          rempliMines@colonne 00D2               __size_of___wmul 0028               __size_of_demine 013E  
                     _accueil 0601                  __psmallconst 0600                       __pcinit 1B6A  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 0C46  
                     __ptext0 13D4                       __ptext1 0A2A                       __ptext2 1BC8  
                     __ptext3 1A28                       __ptext4 171E                       __ptext5 0FA2  
                     __ptext6 0612                       __ptext7 1D88                       __ptext8 1B00  
                     __ptext9 17D0         __end_of_lcd_ecritChar 1C72               lcd_busy@adresse 00B5  
                   _T1CONbits 000FCD              ___awmod@dividend 00C2                       demine@x 00D0  
                     demine@y 00C7              lcd_ecritChar@car 00B7                 gagne@nbrTuile 00BF  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 1BC2         __end_of_lcd_initCGRam 1872             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8    __size_of_lcd_montreCurseur 0008  
                   _PORTAbits 000F80                     _PORTBbits 000F81       __size_of_afficheTabMine 00A2  
                 ?_lcd_gotoXY 00B7                     _TRISCbits 000F94                   ?_lcd_wrData 00B4  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC        rempliMines@endroitMine 00CD  
             ??_afficheTabVue 00C3                   ?_initTabVue 00B4                __end_of___lmul 1A94  
              __end_of___wmul 1DD8                   _BAUDCONbits 000FB8                __end_of_demine 166A  
         start_initialization 1B6A           _calculToucheCombien 0612           __size_of_lcd_gotoXY 0072  
                    ??___lmul 00BC                      ??___wmul 00B8                 rempliMines@nb 00C8  
         __size_of_lcd_wrData 0034                      ??_demine 00C8                   __pdataBANK0 00E0  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4           __size_of_initTabVue 0186  
          ??_metToucheCombien 00C4             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 1D5C   __end_of_lcd_strobeEnableBit 1E32  
              _initialisation 1CF4    __end_of_enleveTuilesAutour 127A                      ?___awmod 00C2  
                    ?_deplace 00B9   __end_of_lcd_effaceAffichage 1E12                _afficheTabMine 1914  
                   _lcd_wrCom 1A94         ??_calculToucheCombien 00BE     __size_of_lcd_cacheCurseur 0008  
                 __smallconst 0600                __size_of_gagne 015A               _lcd_lireDonnees 1E32  
         lcd_wrData@caractere 00B6                __size_of_srand 0010                 ??_rempliMines 00CA  
             _lcd_curseurHome 1E12                ___wmul@product 00B8        __end_of_initialisation 1D28  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4  
      __end_of_afficheTabMine 19B6                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 1B7E                     copy_data1 1B9E                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 0C46                  ??_initTabVue 00C3            __CFG_BOREN$SBORDIS 000000  
                rempliMines@g 00CE                  rempliMines@i 00D4                  rempliMines@j 00D6  
          __end_of_lcd_gotoXY 1A28            __end_of_lcd_wrData 1D5C               ?_afficheTabMine 00B4  
            __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2  
             afficheTabMine@i 00C5              __size_of_deplace 01D6       __end_of_lcd_lireDonnees 1E38  
                    _matCGRAM 0154       __end_of_lcd_curseurHome 1E1A                      __ptext10 1E12  
                    __ptext11 1E04                      __ptext20 152C                      __ptext12 1E1A  
                    __ptext21 111C                      __ptext13 1CF4                      __ptext30 1DD8  
                    __ptext22 1872                      __ptext14 1DF4                      __ptext31 1C72  
                    __ptext23 1914                      __ptext15 0E1C                      __ptext32 1E32  
                    __ptext24 166A                      __ptext16 127A                      __ptext33 1DB0  
                    __ptext25 1C1E                      __ptext17 0C46                      __ptext26 1D28  
                    __ptext18 1E22                      __ptext27 19B6                      __ptext19 1D5C  
                    __ptext28 1A94                      __ptext29 1E2A             metToucheCombien@i 00C8  
           metToucheCombien@j 00CA                      _lcd_busy 1C72                      _lcd_init 1D88  
          __end_of_initTabVue 0FA2      calculToucheCombien@ligne 00BA                      _m_tabVue 0100  
            rempliMines@ligne 00D0                 __size_of_main 0158                 __size_of_rand 0056  
                 gagne@pMines 00BA                      deplace@x 00B9                      deplace@y 00BB  
                 ??_getAnalog 00B4        metToucheCombien@nombre 00C7         __end_of_afficheTabVue 1914  
                    main@posX 00DC                      main@posY 00DE                   ??_lcd_wrCom 00B6  
            _lcd_cacheCurseur 1E1A                 _lcd_ecritChar 1C1E                afficheTabVue@i 00C5  
               _lcd_initCGRam 17D0                   _rempliMines 0A2A     __size_of_metToucheCombien 017A  
              _lcd_putMessage 166A                ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4  
          _enleveTuilesAutour 111C              ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4  
         ?_enleveTuilesAutour 00BA             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 171E  
