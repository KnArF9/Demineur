

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 12:14:05 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45K20 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  0018C6                     __pidataBANK0:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _randx
    87  0018C6  0001               	dw	1
    88  0018C8  0000               	dw	0
    89                           
    90                           	psect	idataBANK1
    91  001742                     __pidataBANK1:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _matCGRAM
    95  001742  0D                 	db	13
    96  001743  1F                 	db	31
    97  001744  1F                 	db	31
    98  001745  1F                 	db	31
    99  001746  1F                 	db	31
   100  001747  1F                 	db	31
   101  001748  1F                 	db	31
   102  001749  0D                 	db	13
   103  00174A  0E                 	db	14
   104  00174B  1F                 	db	31
   105  00174C  1F                 	db	31
   106  00174D  1F                 	db	31
   107  00174E  1F                 	db	31
   108  00174F  1F                 	db	31
   109  001750  1F                 	db	31
   110  001751  0E                 	db	14
   111  001752  00                 	db	0
   112  001753  04                 	db	4
   113  001754  0E                 	db	14
   114  001755  1F                 	db	31
   115  001756  1F                 	db	31
   116  001757  0E                 	db	14
   117  001758  04                 	db	4
   118  001759  00                 	db	0
   119  00175A  0E                 	db	14
   120  00175B  1B                 	db	27
   121  00175C  0A                 	db	10
   122  00175D  1F                 	db	31
   123  00175E  11                 	db	17
   124  00175F  1F                 	db	31
   125  001760  0A                 	db	10
   126  001761  0A                 	db	10
   127  001762  08                 	db	8
   128  001763  04                 	db	4
   129  001764  1F                 	db	31
   130  001765  10                 	db	16
   131  001766  1E                 	db	30
   132  001767  10                 	db	16
   133  001768  1F                 	db	31
   134  001769  00                 	db	0
   135  00176A  04                 	db	4
   136  00176B  0A                 	db	10
   137  00176C  0E                 	db	14
   138  00176D  11                 	db	17
   139  00176E  1F                 	db	31
   140  00176F  10                 	db	16
   141  001770  0E                 	db	14
   142  001771  00                 	db	0
   143  001772  08                 	db	8
   144  001773  04                 	db	4
   145  001774  0E                 	db	14
   146  001775  01                 	db	1
   147  001776  0F                 	db	15
   148  001777  11                 	db	17
   149  001778  0F                 	db	15
   150  001779  00                 	db	0
   151  00177A  04                 	db	4
   152  00177B  0A                 	db	10
   153  00177C  0E                 	db	14
   154  00177D  01                 	db	1
   155  00177E  0F                 	db	15
   156  00177F  11                 	db	17
   157  001780  0F                 	db	15
   158  001781  00                 	db	0
   159                           
   160                           	psect	smallconst
   161  000600                     __psmallconst:
   162                           	opt callstack 0
   163  000600  00                 	db	0
   164  000601                     _accueil:
   165                           	opt callstack 0
   166  000601  4C                 	db	76
   167  000602  61                 	db	97
   168  000603  62                 	db	98
   169  000604  6F                 	db	111
   170  000605  36                 	db	54
   171  000606  20                 	db	32
   172  000607  64                 	db	100
   173  000608  65                 	db	101
   174  000609  20                 	db	32
   175  00060A  46                 	db	70
   176  00060B  72                 	db	114
   177  00060C  61                 	db	97
   178  00060D  6E                 	db	110
   179  00060E  6B                 	db	107
   180  00060F  00                 	db	0
   181  000610                     __end_of_accueil:
   182                           	opt callstack 0
   183  0000                     _PORTAbits	set	3968
   184  0000                     _PORTD	set	3971
   185  0000                     _TRISCbits	set	3988
   186  0000                     _ANSELbits	set	3966
   187  0000                     _TRISA	set	3986
   188  0000                     _ANSEL	set	3966
   189  0000                     _TRISB	set	3987
   190  0000                     _ANSELH	set	3967
   191  0000                     _TRISD	set	3989
   192  0000                     _PORTBbits	set	3969
   193  0000                     _TMR1	set	4046
   194  0000                     _RCREG	set	4014
   195  0000                     _TXREG	set	4013
   196  0000                     _RCSTAbits	set	4011
   197  0000                     _TXSTAbits	set	4012
   198  0000                     _BAUDCONbits	set	4024
   199  0000                     _SPBRG	set	4015
   200  0000                     _SPBRGH	set	4016
   201  0000                     _ADCON2bits	set	4032
   202  0000                     _ADCON1	set	4033
   203  0000                     _T1CONbits	set	4045
   204  0000                     _ADRESH	set	4036
   205  0000                     _ADCON0bits	set	4034
   206  0000                     _RCIF	set	31989
   207                           
   208                           ; #config settings
   209  000610  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           	psect	cinit
   212  0015B4                     __pcinit:
   213                           	opt callstack 0
   214  0015B4                     start_initialization:
   215                           	opt callstack 0
   216  0015B4                     __initialization:
   217                           	opt callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK1 (64 bytes)
   220                           ; load TBLPTR registers with __pidataBANK1
   221  0015B4  0E42               	movlw	low __pidataBANK1
   222  0015B6  6EF6               	movwf	tblptrl,c
   223  0015B8  0E17               	movlw	high __pidataBANK1
   224  0015BA  6EF7               	movwf	tblptrh,c
   225  0015BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   226  0015BE  6EF8               	movwf	tblptru,c
   227  0015C0  EE01  F054         	lfsr	0,__pdataBANK1
   228  0015C4  EE10 F040          	lfsr	1,64
   229  0015C8                     copy_data0:
   230  0015C8  0009               	tblrd		*+
   231  0015CA  CFF5 FFEE          	movff	tablat,postinc0
   232  0015CE  50E5               	movf	postdec1,w,c
   233  0015D0  50E1               	movf	fsr1l,w,c
   234  0015D2  E1FA               	bnz	copy_data0
   235                           
   236                           ; Initialize objects allocated to BANK0 (4 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238  0015D4  0EC6               	movlw	low __pidataBANK0
   239  0015D6  6EF6               	movwf	tblptrl,c
   240  0015D8  0E18               	movlw	high __pidataBANK0
   241  0015DA  6EF7               	movwf	tblptrh,c
   242  0015DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243  0015DE  6EF8               	movwf	tblptru,c
   244  0015E0  EE00  F0E0         	lfsr	0,__pdataBANK0
   245  0015E4  EE10 F004          	lfsr	1,4
   246  0015E8                     copy_data1:
   247  0015E8  0009               	tblrd		*+
   248  0015EA  CFF5 FFEE          	movff	tablat,postinc0
   249  0015EE  50E5               	movf	postdec1,w,c
   250  0015F0  50E1               	movf	fsr1l,w,c
   251  0015F2  E1FA               	bnz	copy_data1
   252                           
   253                           ; Clear objects allocated to BANK1 (84 bytes)
   254  0015F4  EE01  F000         	lfsr	0,__pbssBANK1
   255  0015F8  0E54               	movlw	84
   256  0015FA                     clear_0:
   257  0015FA  6AEE               	clrf	postinc0,c
   258  0015FC  06E8               	decf	wreg,f,c
   259  0015FE  E1FD               	bnz	clear_0
   260                           
   261                           ; Clear objects allocated to BANK0 (84 bytes)
   262  001600  EE00  F060         	lfsr	0,__pbssBANK0
   263  001604  0E54               	movlw	84
   264  001606                     clear_1:
   265  001606  6AEE               	clrf	postinc0,c
   266  001608  06E8               	decf	wreg,f,c
   267  00160A  E1FD               	bnz	clear_1
   268  00160C                     end_of_initialization:
   269                           	opt callstack 0
   270  00160C                     __end_of__initialization:
   271                           	opt callstack 0
   272  00160C  0100               	movlb	0
   273  00160E  EF91  F008         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssBANK0
   276  000060                     __pbssBANK0:
   277                           	opt callstack 0
   278  000060                     _m_tabMines:
   279                           	opt callstack 0
   280  000060                     	ds	84
   281                           
   282                           	psect	dataBANK0
   283  0000E0                     __pdataBANK0:
   284                           	opt callstack 0
   285  0000E0                     _randx:
   286                           	opt callstack 0
   287  0000E0                     	ds	4
   288                           
   289                           	psect	bssBANK1
   290  000100                     __pbssBANK1:
   291                           	opt callstack 0
   292  000100                     _m_tabVue:
   293                           	opt callstack 0
   294  000100                     	ds	84
   295                           
   296                           	psect	dataBANK1
   297  000154                     __pdataBANK1:
   298                           	opt callstack 0
   299  000154                     _matCGRAM:
   300                           	opt callstack 0
   301  000154                     	ds	64
   302                           
   303                           	psect	cstackBANK0
   304  0000B4                     __pcstackBANK0:
   305                           	opt callstack 0
   306  0000B4                     ??_getAnalog:
   307  0000B4                     ??_lcd_ecrireDonnees:
   308  0000B4                     ??_lcd_busy:
   309  0000B4                     ?___wmul:
   310                           	opt callstack 0
   311  0000B4                     ?___lmul:
   312                           	opt callstack 0
   313  0000B4                     ___wmul@multiplier:
   314                           	opt callstack 0
   315  0000B4                     srand@x:
   316                           	opt callstack 0
   317  0000B4                     ___lmul@multiplier:
   318                           	opt callstack 0
   319                           
   320                           ; 4 bytes @ 0x0
   321  0000B4                     	ds	1
   322  0000B5                     getAnalog@canal:
   323                           	opt callstack 0
   324  0000B5                     lcd_ecrireDonnees@donnee:
   325                           	opt callstack 0
   326  0000B5                     lcd_busy@adresse:
   327                           	opt callstack 0
   328                           
   329                           ; 1 bytes @ 0x1
   330  0000B5                     	ds	1
   331  0000B6                     ??_lcd_resetSequence:
   332  0000B6                     lcd_wrCom@commande:
   333                           	opt callstack 0
   334  0000B6                     lcd_wrData@caractere:
   335                           	opt callstack 0
   336  0000B6                     ___wmul@multiplicand:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x2
   340  0000B6                     	ds	1
   341  0000B7                     ??_lcd_initCGRam:
   342  0000B7                     lcd_gotoXY@y:
   343                           	opt callstack 0
   344  0000B7                     lcd_ecritChar@car:
   345                           	opt callstack 0
   346                           
   347                           ; 1 bytes @ 0x3
   348  0000B7                     	ds	1
   349  0000B8                     lcd_gotoXY@x:
   350                           	opt callstack 0
   351  0000B8                     lcd_ecritChar@posRam:
   352                           	opt callstack 0
   353  0000B8                     ___wmul@product:
   354                           	opt callstack 0
   355  0000B8                     ___lmul@multiplicand:
   356                           	opt callstack 0
   357                           
   358                           ; 4 bytes @ 0x4
   359  0000B8                     	ds	1
   360  0000B9                     demine@y:
   361                           	opt callstack 0
   362  0000B9                     lcd_initCGRam@i:
   363                           	opt callstack 0
   364  0000B9                     deplace@x:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x5
   368  0000B9                     	ds	1
   369  0000BA                     ??_demine:
   370  0000BA                     lcd_initCGRam@j:
   371                           	opt callstack 0
   372  0000BA                     calculToucheCombien@ligne:
   373                           	opt callstack 0
   374  0000BA                     lcd_putMessage@chaine:
   375                           	opt callstack 0
   376                           
   377                           ; 3 bytes @ 0x6
   378  0000BA                     	ds	1
   379  0000BB                     deplace@y:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x7
   383  0000BB                     	ds	1
   384  0000BC                     demine@x:
   385                           	opt callstack 0
   386  0000BC                     calculToucheCombien@colonne:
   387                           	opt callstack 0
   388  0000BC                     ___lmul@product:
   389                           	opt callstack 0
   390                           
   391                           ; 4 bytes @ 0x8
   392  0000BC                     	ds	1
   393  0000BD                     ??_lcd_putMessage:
   394  0000BD                     ??_deplace:
   395                           
   396                           ; 1 bytes @ 0x9
   397  0000BD                     	ds	1
   398  0000BE                     ??_calculToucheCombien:
   399                           
   400                           ; 1 bytes @ 0xA
   401  0000BE                     	ds	2
   402  0000C0                     ?_rand:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0xC
   406  0000C0                     	ds	2
   407  0000C2                     ?___awmod:
   408                           	opt callstack 0
   409  0000C2                     lcd_putMessage@j:
   410                           	opt callstack 0
   411  0000C2                     ___awmod@dividend:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0xE
   415  0000C2                     	ds	1
   416  0000C3                     ??_initTabVue:
   417  0000C3                     calculToucheCombien@nombre:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0xF
   421  0000C3                     	ds	1
   422  0000C4                     ??_metToucheCombien:
   423  0000C4                     ___awmod@divisor:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x10
   427  0000C4                     	ds	1
   428  0000C5                     initTabVue@i:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x11
   432  0000C5                     	ds	1
   433  0000C6                     ___awmod@counter:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x12
   437  0000C6                     	ds	1
   438  0000C7                     metToucheCombien@nombre:
   439                           	opt callstack 0
   440  0000C7                     ___awmod@sign:
   441                           	opt callstack 0
   442  0000C7                     initTabVue@j:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x13
   446  0000C7                     	ds	1
   447  0000C8                     rempliMines@nb:
   448                           	opt callstack 0
   449  0000C8                     metToucheCombien@i:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x14
   453  0000C8                     	ds	1
   454  0000C9                     initTabVue@g:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x15
   458  0000C9                     	ds	1
   459  0000CA                     ??_rempliMines:
   460  0000CA                     metToucheCombien@j:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x16
   464  0000CA                     	ds	3
   465  0000CD                     rempliMines@endroitMine:
   466                           	opt callstack 0
   467                           
   468                           ; 1 bytes @ 0x19
   469  0000CD                     	ds	1
   470  0000CE                     rempliMines@g:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x1A
   474  0000CE                     	ds	2
   475  0000D0                     rempliMines@ligne:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x1C
   479  0000D0                     	ds	2
   480  0000D2                     rempliMines@colonne:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0x1E
   484  0000D2                     	ds	2
   485  0000D4                     rempliMines@i:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x20
   489  0000D4                     	ds	2
   490  0000D6                     rempliMines@j:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x22
   494  0000D6                     	ds	2
   495  0000D8                     ??_main:
   496                           
   497                           ; 1 bytes @ 0x24
   498  0000D8                     	ds	2
   499  0000DA                     main@nb:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x26
   503  0000DA                     	ds	2
   504  0000DC                     main@posX:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x28
   508  0000DC                     	ds	2
   509  0000DE                     main@posY:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x2A
   513  0000DE                     	ds	2
   514                           
   515 ;;
   516 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   517 ;;
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 63 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  posY            2   42[BANK0 ] int 
   525 ;;  posX            2   40[BANK0 ] int 
   526 ;;  nb              2   38[BANK0 ] int 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   536 ;;      Params:         0       0       0       0       0       0       0
   537 ;;      Locals:         0       6       0       0       0       0       0
   538 ;;      Temps:          0       2       0       0       0       0       0
   539 ;;      Totals:         0       8       0       0       0       0       0
   540 ;;Total ram usage:        8 bytes
   541 ;; Hardware stack levels required when called:    6
   542 ;; This function calls:
   543 ;;		_demine
   544 ;;		_deplace
   545 ;;		_initTabVue
   546 ;;		_initialisation
   547 ;;		_lcd_cacheCurseur
   548 ;;		_lcd_effaceAffichage
   549 ;;		_lcd_gotoXY
   550 ;;		_lcd_init
   551 ;;		_lcd_montreCurseur
   552 ;;		_lcd_putMessage
   553 ;;		_metToucheCombien
   554 ;;		_rempliMines
   555 ;; This function is called by:
   556 ;;		Startup code after reset
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text0
   561  001122                     __ptext0:
   562                           	opt callstack 0
   563  001122                     _main:
   564                           	opt callstack 25
   565  001122                     
   566                           ;main.c: 65: int nb = 10;
   567  001122  0E00               	movlw	0
   568  001124  0100               	movlb	0	; force () banked
   569  001126  6FDB               	movwf	(main@nb+1)& (0+255),b
   570  001128  0E0A               	movlw	10
   571  00112A  6FDA               	movwf	main@nb& (0+255),b
   572                           
   573                           ;main.c: 66: int posX=10;
   574  00112C  0E00               	movlw	0
   575  00112E  0100               	movlb	0	; force () banked
   576  001130  6FDD               	movwf	(main@posX+1)& (0+255),b
   577  001132  0E0A               	movlw	10
   578  001134  6FDC               	movwf	main@posX& (0+255),b
   579                           
   580                           ;main.c: 67: int posY=2;
   581  001136  0E00               	movlw	0
   582  001138  0100               	movlb	0	; force () banked
   583  00113A  6FDF               	movwf	(main@posY+1)& (0+255),b
   584  00113C  0E02               	movlw	2
   585  00113E  6FDE               	movwf	main@posY& (0+255),b
   586  001140                     
   587                           ; BSR set to: 0
   588                           ;main.c: 68: initialisation();
   589  001140  ECC1  F00B         	call	_initialisation	;wreg free
   590  001144                     
   591                           ;main.c: 69: lcd_init();
   592  001144  EC0B  F00C         	call	_lcd_init	;wreg free
   593  001148                     
   594                           ;main.c: 70: lcd_effaceAffichage();
   595  001148  EC49  F00C         	call	_lcd_effaceAffichage	;wreg free
   596  00114C                     
   597                           ;main.c: 71: lcd_cacheCurseur();
   598  00114C  EC58  F00C         	call	_lcd_cacheCurseur	;wreg free
   599  001150                     
   600                           ;main.c: 72: lcd_gotoXY(1,1);
   601  001150  0E01               	movlw	1
   602  001152  0100               	movlb	0	; force () banked
   603  001154  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   604  001156  0E01               	movlw	1
   605  001158  EC00  F00A         	call	_lcd_gotoXY
   606  00115C                     
   607                           ;main.c: 73: lcd_putMessage(accueil);
   608  00115C  0E01               	movlw	low _accueil
   609  00115E  0100               	movlb	0	; force () banked
   610  001160  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   611  001162  0E06               	movlw	high _accueil
   612  001164  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   613  001166  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   614  001168  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   615  00116A  A4D8               	btfss	status,2,c
   616  00116C  0E00               	movlw	low (__mediumconst shr (0+16))
   617  00116E  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   618  001170  ECFC  F008         	call	_lcd_putMessage	;wreg free
   619  001174                     
   620                           ;main.c: 74: _delay((unsigned long)((1000)*(1000000/4000.0)));
   621  001174  0E02               	movlw	2
   622  001176  0100               	movlb	0	; force () banked
   623  001178  6FD9               	movwf	(??_main+1)& (0+255),b
   624  00117A  0E45               	movlw	69
   625  00117C  6FD8               	movwf	??_main& (0+255),b
   626  00117E  0EA9               	movlw	169
   627  001180                     u1237:
   628  001180  2EE8               	decfsz	wreg,f,c
   629  001182  D7FE               	bra	u1237
   630  001184  2FD8               	decfsz	??_main& (0+255),f,b
   631  001186  D7FC               	bra	u1237
   632  001188  2FD9               	decfsz	(??_main+1)& (0+255),f,b
   633  00118A  D7FA               	bra	u1237
   634  00118C  F000 F000          	nop2	
   635  001190                     
   636                           ;main.c: 75: lcd_effaceAffichage();
   637  001190  EC49  F00C         	call	_lcd_effaceAffichage	;wreg free
   638  001194                     
   639                           ;main.c: 76: initTabVue();
   640  001194  EC0A  F007         	call	_initTabVue	;wreg free
   641  001198                     
   642                           ;main.c: 77: rempliMines(nb);
   643  001198  C0DA  F0C8         	movff	main@nb,rempliMines@nb
   644  00119C  C0DB  F0C9         	movff	main@nb+1,rempliMines@nb+1
   645  0011A0  EC13  F005         	call	_rempliMines	;wreg free
   646  0011A4                     
   647                           ;main.c: 78: metToucheCombien();
   648  0011A4  ECD4  F007         	call	_metToucheCombien	;wreg free
   649  0011A8                     l2151:
   650                           
   651                           ;main.c: 81: {;main.c: 82: lcd_montreCurseur();
   652  0011A8  EC50  F00C         	call	_lcd_montreCurseur	;wreg free
   653  0011AC                     
   654                           ;main.c: 83: deplace(&posX,&posY);
   655  0011AC  0EDC               	movlw	low main@posX
   656  0011AE  0100               	movlb	0	; force () banked
   657  0011B0  6FB9               	movwf	deplace@x& (0+255),b
   658  0011B2  0E00               	movlw	high main@posX
   659  0011B4  6FBA               	movwf	(deplace@x+1)& (0+255),b
   660  0011B6  0EDE               	movlw	low main@posY
   661  0011B8  0100               	movlb	0	; force () banked
   662  0011BA  6FBB               	movwf	deplace@y& (0+255),b
   663  0011BC  0E00               	movlw	high main@posY
   664  0011BE  6FBC               	movwf	(deplace@y+1)& (0+255),b
   665  0011C0  EC21  F006         	call	_deplace	;wreg free
   666  0011C4                     
   667                           ;main.c: 84: if(PORTBbits.RB1 == 0)
   668  0011C4  B281               	btfsc	129,1,c	;volatile
   669  0011C6  EFE7  F008         	goto	u1221
   670  0011CA  EFE9  F008         	goto	u1220
   671  0011CE                     u1221:
   672  0011CE  EFEF  F008         	goto	l2159
   673  0011D2                     u1220:
   674  0011D2                     
   675                           ;main.c: 85: {;main.c: 86: if(demine(posX,posY) == 1)
   676  0011D2  C0DE  F0B9         	movff	main@posY,demine@y
   677  0011D6  0100               	movlb	0	; force () banked
   678  0011D8  51DC               	movf	main@posX& (0+255),w,b
   679  0011DA  EC5E  F00B         	call	_demine
   680  0011DE                     l2159:
   681                           
   682                           ;main.c: 89: };main.c: 90: };main.c: 91: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   683  0011DE  0E21               	movlw	33
   684  0011E0  0100               	movlb	0	; force () banked
   685  0011E2  6FD8               	movwf	??_main& (0+255),b
   686  0011E4  0E76               	movlw	118
   687  0011E6                     u1247:
   688  0011E6  2EE8               	decfsz	wreg,f,c
   689  0011E8  D7FE               	bra	u1247
   690  0011EA  2FD8               	decfsz	??_main& (0+255),f,b
   691  0011EC  D7FC               	bra	u1247
   692  0011EE  F000               	nop	
   693  0011F0  EFD4  F008         	goto	l2151
   694  0011F4  EF00  F000         	goto	start
   695  0011F8                     __end_of_main:
   696                           	opt callstack 0
   697                           
   698 ;; *************** function _rempliMines *****************
   699 ;; Defined at:
   700 ;;		line 126 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  nb              2   20[BANK0 ] int 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  j               2   34[BANK0 ] int 
   705 ;;  i               2   32[BANK0 ] int 
   706 ;;  colonne         2   30[BANK0 ] int 
   707 ;;  ligne           2   28[BANK0 ] int 
   708 ;;  g               2   26[BANK0 ] int 
   709 ;;  endroitMine     1   25[BANK0 ] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         0       2       0       0       0       0       0
   720 ;;      Locals:         0      11       0       0       0       0       0
   721 ;;      Temps:          0       3       0       0       0       0       0
   722 ;;      Totals:         0      16       0       0       0       0       0
   723 ;;Total ram usage:       16 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    2
   726 ;; This function calls:
   727 ;;		___awmod
   728 ;;		___wmul
   729 ;;		_rand
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text1
   736  000A26                     __ptext1:
   737                           	opt callstack 0
   738  000A26                     _rempliMines:
   739                           	opt callstack 28
   740  000A26                     
   741                           ;main.c: 128: int i=0;
   742  000A26  0E00               	movlw	0
   743  000A28  0100               	movlb	0	; force () banked
   744  000A2A  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   745  000A2C  0E00               	movlw	0
   746  000A2E  6FD4               	movwf	rempliMines@i& (0+255),b
   747                           
   748                           ;main.c: 129: int j=0;
   749  000A30  0E00               	movlw	0
   750  000A32  0100               	movlb	0	; force () banked
   751  000A34  6FD7               	movwf	(rempliMines@j+1)& (0+255),b
   752  000A36  0E00               	movlw	0
   753  000A38  6FD6               	movwf	rempliMines@j& (0+255),b
   754                           
   755                           ;main.c: 130: int g=0;
   756  000A3A  0E00               	movlw	0
   757  000A3C  0100               	movlb	0	; force () banked
   758  000A3E  6FCF               	movwf	(rempliMines@g+1)& (0+255),b
   759  000A40  0E00               	movlw	0
   760  000A42  6FCE               	movwf	rempliMines@g& (0+255),b
   761                           
   762                           ;main.c: 131: char endroitMine =0;
   763  000A44  0E00               	movlw	0
   764  000A46  0100               	movlb	0	; force () banked
   765  000A48  6FCD               	movwf	rempliMines@endroitMine& (0+255),b
   766                           
   767                           ;main.c: 132: int ligne =0;
   768  000A4A  0E00               	movlw	0
   769  000A4C  0100               	movlb	0	; force () banked
   770  000A4E  6FD1               	movwf	(rempliMines@ligne+1)& (0+255),b
   771  000A50  0E00               	movlw	0
   772  000A52  6FD0               	movwf	rempliMines@ligne& (0+255),b
   773                           
   774                           ;main.c: 133: int colonne=0;
   775  000A54  0E00               	movlw	0
   776  000A56  0100               	movlb	0	; force () banked
   777  000A58  6FD3               	movwf	(rempliMines@colonne+1)& (0+255),b
   778  000A5A  0E00               	movlw	0
   779  000A5C  6FD2               	movwf	rempliMines@colonne& (0+255),b
   780                           
   781                           ;main.c: 135: for(i=0;i<4;i++)
   782  000A5E  0E00               	movlw	0
   783  000A60  0100               	movlb	0	; force () banked
   784  000A62  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   785  000A64  0E00               	movlw	0
   786  000A66  6FD4               	movwf	rempliMines@i& (0+255),b
   787  000A68                     
   788                           ; BSR set to: 0
   789  000A68  0100               	movlb	0	; force () banked
   790  000A6A  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   791  000A6C  EF41  F005         	goto	u1011
   792  000A70  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   793  000A72  E109               	bnz	u1010
   794  000A74  0E04               	movlw	4
   795  000A76  5DD4               	subwf	rempliMines@i& (0+255),w,b
   796  000A78  A0D8               	btfss	status,0,c
   797  000A7A  EF41  F005         	goto	u1011
   798  000A7E  EF43  F005         	goto	u1010
   799  000A82                     u1011:
   800  000A82  EF45  F005         	goto	l2017
   801  000A86                     u1010:
   802  000A86  EF10  F006         	goto	l2041
   803  000A8A                     l2017:
   804                           
   805                           ; BSR set to: 0
   806                           ;main.c: 136: {;main.c: 137: for(j=0;j<20;j++)
   807  000A8A  0E00               	movlw	0
   808  000A8C  0100               	movlb	0	; force () banked
   809  000A8E  6FD7               	movwf	(rempliMines@j+1)& (0+255),b
   810  000A90  0E00               	movlw	0
   811  000A92  6FD6               	movwf	rempliMines@j& (0+255),b
   812  000A94                     
   813                           ; BSR set to: 0
   814  000A94  0100               	movlb	0	; force () banked
   815  000A96  BFD7               	btfsc	(rempliMines@j+1)& (0+255),7,b
   816  000A98  EF57  F005         	goto	u1021
   817  000A9C  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   818  000A9E  E109               	bnz	u1020
   819  000AA0  0E14               	movlw	20
   820  000AA2  5DD6               	subwf	rempliMines@j& (0+255),w,b
   821  000AA4  A0D8               	btfss	status,0,c
   822  000AA6  EF57  F005         	goto	u1021
   823  000AAA  EF59  F005         	goto	u1020
   824  000AAE                     u1021:
   825  000AAE  EF5B  F005         	goto	l2023
   826  000AB2                     u1020:
   827  000AB2  EF91  F005         	goto	l2029
   828  000AB6                     l2023:
   829                           
   830                           ; BSR set to: 0
   831                           ;main.c: 138: {;main.c: 139: m_tabMines[i][j] = ' ';
   832  000AB6  C0D4  F0B4         	movff	rempliMines@i,___wmul@multiplier
   833  000ABA  C0D5  F0B5         	movff	rempliMines@i+1,___wmul@multiplier+1
   834  000ABE  0E00               	movlw	0
   835  000AC0  0100               	movlb	0	; force () banked
   836  000AC2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   837  000AC4  0E15               	movlw	21
   838  000AC6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   839  000AC8  EC1F  F00C         	call	___wmul	;wreg free
   840  000ACC  0E60               	movlw	low _m_tabMines
   841  000ACE  0100               	movlb	0	; force () banked
   842  000AD0  6FCA               	movwf	??_rempliMines& (0+255),b
   843  000AD2  0E00               	movlw	high _m_tabMines
   844  000AD4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   845  000AD6  0100               	movlb	0	; force () banked
   846  000AD8  51B4               	movf	?___wmul& (0+255),w,b
   847  000ADA  0100               	movlb	0	; force () banked
   848  000ADC  27CA               	addwf	??_rempliMines& (0+255),f,b
   849  000ADE  0100               	movlb	0	; force () banked
   850  000AE0  51B5               	movf	(?___wmul+1)& (0+255),w,b
   851  000AE2  0100               	movlb	0	; force () banked
   852  000AE4  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   853  000AE6  0100               	movlb	0	; force () banked
   854  000AE8  51D6               	movf	rempliMines@j& (0+255),w,b
   855  000AEA  0100               	movlb	0	; force () banked
   856  000AEC  25CA               	addwf	??_rempliMines& (0+255),w,b
   857  000AEE  6ED9               	movwf	fsr2l,c
   858  000AF0  0100               	movlb	0	; force () banked
   859  000AF2  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   860  000AF4  0100               	movlb	0	; force () banked
   861  000AF6  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   862  000AF8  6EDA               	movwf	fsr2h,c
   863  000AFA  0E20               	movlw	32
   864  000AFC  6EDF               	movwf	indf2,c
   865  000AFE                     
   866                           ; BSR set to: 0
   867  000AFE  0100               	movlb	0	; force () banked
   868  000B00  4BD6               	infsnz	rempliMines@j& (0+255),f,b
   869  000B02  2BD7               	incf	(rempliMines@j+1)& (0+255),f,b
   870  000B04                     
   871                           ; BSR set to: 0
   872  000B04  0100               	movlb	0	; force () banked
   873  000B06  BFD7               	btfsc	(rempliMines@j+1)& (0+255),7,b
   874  000B08  EF8F  F005         	goto	u1031
   875  000B0C  51D7               	movf	(rempliMines@j+1)& (0+255),w,b
   876  000B0E  E109               	bnz	u1030
   877  000B10  0E14               	movlw	20
   878  000B12  5DD6               	subwf	rempliMines@j& (0+255),w,b
   879  000B14  A0D8               	btfss	status,0,c
   880  000B16  EF8F  F005         	goto	u1031
   881  000B1A  EF91  F005         	goto	u1030
   882  000B1E                     u1031:
   883  000B1E  EF5B  F005         	goto	l2023
   884  000B22                     u1030:
   885  000B22                     l2029:
   886                           
   887                           ; BSR set to: 0
   888  000B22  0100               	movlb	0	; force () banked
   889  000B24  4BD4               	infsnz	rempliMines@i& (0+255),f,b
   890  000B26  2BD5               	incf	(rempliMines@i+1)& (0+255),f,b
   891  000B28                     
   892                           ; BSR set to: 0
   893  000B28  0100               	movlb	0	; force () banked
   894  000B2A  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   895  000B2C  EFA1  F005         	goto	u1041
   896  000B30  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   897  000B32  E109               	bnz	u1040
   898  000B34  0E04               	movlw	4
   899  000B36  5DD4               	subwf	rempliMines@i& (0+255),w,b
   900  000B38  A0D8               	btfss	status,0,c
   901  000B3A  EFA1  F005         	goto	u1041
   902  000B3E  EFA3  F005         	goto	u1040
   903  000B42                     u1041:
   904  000B42  EF45  F005         	goto	l2017
   905  000B46                     u1040:
   906  000B46  EF10  F006         	goto	l2041
   907  000B4A                     l2033:
   908                           
   909                           ; BSR set to: 0
   910                           ;main.c: 145: {;main.c: 146: colonne =rand()%20;
   911  000B4A  EC09  F00B         	call	_rand	;wreg free
   912  000B4E  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   913  000B52  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   914  000B56  0E00               	movlw	0
   915  000B58  0100               	movlb	0	; force () banked
   916  000B5A  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   917  000B5C  0E14               	movlw	20
   918  000B5E  6FC4               	movwf	___awmod@divisor& (0+255),b
   919  000B60  EC56  F009         	call	___awmod	;wreg free
   920  000B64  C0C2  F0D2         	movff	?___awmod,rempliMines@colonne
   921  000B68  C0C3  F0D3         	movff	?___awmod+1,rempliMines@colonne+1
   922                           
   923                           ;main.c: 147: ligne = rand()%4;
   924  000B6C  EC09  F00B         	call	_rand	;wreg free
   925  000B70  0E03               	movlw	3
   926  000B72  0100               	movlb	0	; force () banked
   927  000B74  15C0               	andwf	?_rand& (0+255),w,b
   928  000B76  0100               	movlb	0	; force () banked
   929  000B78  6FD0               	movwf	rempliMines@ligne& (0+255),b
   930  000B7A  6BD1               	clrf	(rempliMines@ligne+1)& (0+255),b
   931  000B7C                     
   932                           ; BSR set to: 0
   933                           ;main.c: 148: }while(m_tabMines[ligne][colonne] != ' ');
   934  000B7C  C0D0  F0B4         	movff	rempliMines@ligne,___wmul@multiplier
   935  000B80  C0D1  F0B5         	movff	rempliMines@ligne+1,___wmul@multiplier+1
   936  000B84  0E00               	movlw	0
   937  000B86  0100               	movlb	0	; force () banked
   938  000B88  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   939  000B8A  0E15               	movlw	21
   940  000B8C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   941  000B8E  EC1F  F00C         	call	___wmul	;wreg free
   942  000B92  0E60               	movlw	low _m_tabMines
   943  000B94  0100               	movlb	0	; force () banked
   944  000B96  6FCA               	movwf	??_rempliMines& (0+255),b
   945  000B98  0E00               	movlw	high _m_tabMines
   946  000B9A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   947  000B9C  0100               	movlb	0	; force () banked
   948  000B9E  51B4               	movf	?___wmul& (0+255),w,b
   949  000BA0  0100               	movlb	0	; force () banked
   950  000BA2  27CA               	addwf	??_rempliMines& (0+255),f,b
   951  000BA4  0100               	movlb	0	; force () banked
   952  000BA6  51B5               	movf	(?___wmul+1)& (0+255),w,b
   953  000BA8  0100               	movlb	0	; force () banked
   954  000BAA  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   955  000BAC  0100               	movlb	0	; force () banked
   956  000BAE  51D2               	movf	rempliMines@colonne& (0+255),w,b
   957  000BB0  0100               	movlb	0	; force () banked
   958  000BB2  25CA               	addwf	??_rempliMines& (0+255),w,b
   959  000BB4  6ED9               	movwf	fsr2l,c
   960  000BB6  0100               	movlb	0	; force () banked
   961  000BB8  51D3               	movf	(rempliMines@colonne+1)& (0+255),w,b
   962  000BBA  0100               	movlb	0	; force () banked
   963  000BBC  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   964  000BBE  6EDA               	movwf	fsr2h,c
   965  000BC0  0E20               	movlw	32
   966  000BC2  18DE               	xorwf	postinc2,w,c
   967  000BC4  A4D8               	btfss	status,2,c
   968  000BC6  EFE7  F005         	goto	u1051
   969  000BCA  EFE9  F005         	goto	u1050
   970  000BCE                     u1051:
   971  000BCE  EFA5  F005         	goto	l2033
   972  000BD2                     u1050:
   973  000BD2                     
   974                           ; BSR set to: 0
   975                           ;main.c: 149: m_tabMines[ligne][colonne] = 2;
   976  000BD2  C0D0  F0B4         	movff	rempliMines@ligne,___wmul@multiplier
   977  000BD6  C0D1  F0B5         	movff	rempliMines@ligne+1,___wmul@multiplier+1
   978  000BDA  0E00               	movlw	0
   979  000BDC  0100               	movlb	0	; force () banked
   980  000BDE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   981  000BE0  0E15               	movlw	21
   982  000BE2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   983  000BE4  EC1F  F00C         	call	___wmul	;wreg free
   984  000BE8  0E60               	movlw	low _m_tabMines
   985  000BEA  0100               	movlb	0	; force () banked
   986  000BEC  6FCA               	movwf	??_rempliMines& (0+255),b
   987  000BEE  0E00               	movlw	high _m_tabMines
   988  000BF0  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   989  000BF2  0100               	movlb	0	; force () banked
   990  000BF4  51B4               	movf	?___wmul& (0+255),w,b
   991  000BF6  0100               	movlb	0	; force () banked
   992  000BF8  27CA               	addwf	??_rempliMines& (0+255),f,b
   993  000BFA  0100               	movlb	0	; force () banked
   994  000BFC  51B5               	movf	(?___wmul+1)& (0+255),w,b
   995  000BFE  0100               	movlb	0	; force () banked
   996  000C00  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   997  000C02  0100               	movlb	0	; force () banked
   998  000C04  51D2               	movf	rempliMines@colonne& (0+255),w,b
   999  000C06  0100               	movlb	0	; force () banked
  1000  000C08  25CA               	addwf	??_rempliMines& (0+255),w,b
  1001  000C0A  6ED9               	movwf	fsr2l,c
  1002  000C0C  0100               	movlb	0	; force () banked
  1003  000C0E  51D3               	movf	(rempliMines@colonne+1)& (0+255),w,b
  1004  000C10  0100               	movlb	0	; force () banked
  1005  000C12  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1006  000C14  6EDA               	movwf	fsr2h,c
  1007  000C16  0E02               	movlw	2
  1008  000C18  6EDF               	movwf	indf2,c
  1009  000C1A                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 150: g++;
  1012  000C1A  0100               	movlb	0	; force () banked
  1013  000C1C  4BCE               	infsnz	rempliMines@g& (0+255),f,b
  1014  000C1E  2BCF               	incf	(rempliMines@g+1)& (0+255),f,b
  1015  000C20                     l2041:
  1016                           
  1017                           ; BSR set to: 0
  1018  000C20  0100               	movlb	0	; force () banked
  1019  000C22  51C8               	movf	rempliMines@nb& (0+255),w,b
  1020  000C24  0100               	movlb	0	; force () banked
  1021  000C26  19CE               	xorwf	rempliMines@g& (0+255),w,b
  1022  000C28  E109               	bnz	u1061
  1023  000C2A  0100               	movlb	0	; force () banked
  1024  000C2C  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1025  000C2E  0100               	movlb	0	; force () banked
  1026  000C30  19CF               	xorwf	(rempliMines@g+1)& (0+255),w,b
  1027  000C32  A4D8               	btfss	status,2,c
  1028  000C34  EF1E  F006         	goto	u1061
  1029  000C38  EF20  F006         	goto	u1060
  1030  000C3C                     u1061:
  1031  000C3C  EFA5  F005         	goto	l2033
  1032  000C40                     u1060:
  1033  000C40                     
  1034                           ; BSR set to: 0
  1035  000C40  0012               	return		;funcret
  1036  000C42                     __end_of_rempliMines:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function _rand *****************
  1040 ;; Defined at:
  1041 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2   12[BANK0 ] int 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         0       2       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         0       2       0       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		___lmul
  1064 ;; This function is called by:
  1065 ;;		_rempliMines
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text2
  1070  001612                     __ptext2:
  1071                           	opt callstack 0
  1072  001612                     _rand:
  1073                           	opt callstack 28
  1074  001612  C0E0  F0B4         	movff	_randx,___lmul@multiplier
  1075  001616  C0E1  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1076  00161A  C0E2  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1077  00161E  C0E3  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1078  001622  0E6D               	movlw	109
  1079  001624  0100               	movlb	0	; () banked
  1080  001626  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1081  001628  0E4E               	movlw	78
  1082  00162A  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1083  00162C  0EC6               	movlw	198
  1084  00162E  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1085  001630  0E41               	movlw	65
  1086  001632  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1087  001634  EC39  F00A         	call	___lmul	;wreg free
  1088  001638  C0B4  F0E0         	movff	?___lmul,_randx
  1089  00163C  C0B5  F0E1         	movff	?___lmul+1,_randx+1
  1090  001640  C0B6  F0E2         	movff	?___lmul+2,_randx+2
  1091  001644  C0B7  F0E3         	movff	?___lmul+3,_randx+3
  1092  001648  0E39               	movlw	57
  1093  00164A  0100               	movlb	0	; () banked
  1094  00164C  27E0               	addwf	_randx& (0+255),f,b
  1095  00164E  0E30               	movlw	48
  1096  001650  23E1               	addwfc	(_randx+1)& (0+255),f,b
  1097  001652  0E00               	movlw	0
  1098  001654  23E2               	addwfc	(_randx+2)& (0+255),f,b
  1099  001656  0E00               	movlw	0
  1100  001658  23E3               	addwfc	(_randx+3)& (0+255),f,b
  1101  00165A                     
  1102                           ; BSR set to: 0
  1103  00165A  0EFF               	movlw	255
  1104  00165C  15E2               	andwf	(_randx+2)& (0+255),w,b
  1105  00165E  6FC0               	movwf	?_rand& (0+255),b
  1106  001660  0E7F               	movlw	127
  1107  001662  15E3               	andwf	(_randx+3)& (0+255),w,b
  1108  001664  6FC1               	movwf	(?_rand+1)& (0+255),b
  1109  001666                     
  1110                           ; BSR set to: 0
  1111  001666  0012               	return		;funcret
  1112  001668                     __end_of_rand:
  1113                           	opt callstack 0
  1114                           
  1115 ;; *************** function ___lmul *****************
  1116 ;; Defined at:
  1117 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1120 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  product         4    8[BANK0 ] unsigned long 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  4    0[BANK0 ] unsigned long 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       8       0       0       0       0       0
  1133 ;;      Locals:         0       4       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0
  1135 ;;      Totals:         0      12       0       0       0       0       0
  1136 ;;Total ram usage:       12 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_rand
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text3
  1146  001472                     __ptext3:
  1147                           	opt callstack 0
  1148  001472                     ___lmul:
  1149                           	opt callstack 28
  1150  001472  0E00               	movlw	0
  1151  001474  0100               	movlb	0	; () banked
  1152  001476  6FBC               	movwf	___lmul@product& (0+255),b
  1153  001478  0E00               	movlw	0
  1154  00147A  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1155  00147C  0E00               	movlw	0
  1156  00147E  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1157  001480  0E00               	movlw	0
  1158  001482  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1159  001484                     l1765:
  1160                           
  1161                           ; BSR set to: 0
  1162  001484  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1163  001486  EF47  F00A         	goto	u681
  1164  00148A  EF49  F00A         	goto	u680
  1165  00148E                     u681:
  1166  00148E  EF51  F00A         	goto	l1769
  1167  001492                     u680:
  1168  001492                     
  1169                           ; BSR set to: 0
  1170  001492  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1171  001494  27BC               	addwf	___lmul@product& (0+255),f,b
  1172  001496  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1173  001498  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1174  00149A  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1175  00149C  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1176  00149E  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1177  0014A0  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1178  0014A2                     l1769:
  1179                           
  1180                           ; BSR set to: 0
  1181  0014A2  90D8               	bcf	status,0,c
  1182  0014A4  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1183  0014A6  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1184  0014A8  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1185  0014AA  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1186  0014AC                     
  1187                           ; BSR set to: 0
  1188  0014AC  90D8               	bcf	status,0,c
  1189  0014AE  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1190  0014B0  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1191  0014B2  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1192  0014B4  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1193  0014B6  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1194  0014B8  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1195  0014BA  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1196  0014BC  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1197  0014BE  A4D8               	btfss	status,2,c
  1198  0014C0  EF64  F00A         	goto	u691
  1199  0014C4  EF66  F00A         	goto	u690
  1200  0014C8                     u691:
  1201  0014C8  EF42  F00A         	goto	l1765
  1202  0014CC                     u690:
  1203  0014CC                     
  1204                           ; BSR set to: 0
  1205  0014CC  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1206  0014D0  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1207  0014D4  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1208  0014D8  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1209  0014DC                     
  1210                           ; BSR set to: 0
  1211  0014DC  0012               	return		;funcret
  1212  0014DE                     __end_of___lmul:
  1213                           	opt callstack 0
  1214                           
  1215 ;; *************** function ___awmod *****************
  1216 ;; Defined at:
  1217 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  dividend        2   14[BANK0 ] int 
  1220 ;;  divisor         2   16[BANK0 ] int 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  sign            1   19[BANK0 ] unsigned char 
  1223 ;;  counter         1   18[BANK0 ] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2   14[BANK0 ] int 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1233 ;;      Params:         0       4       0       0       0       0       0
  1234 ;;      Locals:         0       2       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0
  1236 ;;      Totals:         0       6       0       0       0       0       0
  1237 ;;Total ram usage:        6 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_rempliMines
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text4
  1247  0012AC                     __ptext4:
  1248                           	opt callstack 0
  1249  0012AC                     ___awmod:
  1250                           	opt callstack 29
  1251  0012AC  0E00               	movlw	0
  1252  0012AE  0100               	movlb	0	; () banked
  1253  0012B0  6FC7               	movwf	___awmod@sign& (0+255),b
  1254  0012B2                     
  1255                           ; BSR set to: 0
  1256  0012B2  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1257  0012B4  EF60  F009         	goto	u890
  1258  0012B8  EF5E  F009         	goto	u891
  1259  0012BC                     u891:
  1260  0012BC  EF66  F009         	goto	l1919
  1261  0012C0                     u890:
  1262  0012C0                     
  1263                           ; BSR set to: 0
  1264  0012C0  6DC2               	negf	___awmod@dividend& (0+255),b
  1265  0012C2  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1266  0012C4  B0D8               	btfsc	status,0,c
  1267  0012C6  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1268  0012C8                     
  1269                           ; BSR set to: 0
  1270  0012C8  0E01               	movlw	1
  1271  0012CA  6FC7               	movwf	___awmod@sign& (0+255),b
  1272  0012CC                     l1919:
  1273                           
  1274                           ; BSR set to: 0
  1275  0012CC  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1276  0012CE  EF6D  F009         	goto	u900
  1277  0012D2  EF6B  F009         	goto	u901
  1278  0012D6                     u901:
  1279  0012D6  EF71  F009         	goto	l1923
  1280  0012DA                     u900:
  1281  0012DA                     
  1282                           ; BSR set to: 0
  1283  0012DA  6DC4               	negf	___awmod@divisor& (0+255),b
  1284  0012DC  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1285  0012DE  B0D8               	btfsc	status,0,c
  1286  0012E0  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1287  0012E2                     l1923:
  1288                           
  1289                           ; BSR set to: 0
  1290  0012E2  51C4               	movf	___awmod@divisor& (0+255),w,b
  1291  0012E4  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1292  0012E6  B4D8               	btfsc	status,2,c
  1293  0012E8  EF78  F009         	goto	u911
  1294  0012EC  EF7A  F009         	goto	u910
  1295  0012F0                     u911:
  1296  0012F0  EF9E  F009         	goto	l1939
  1297  0012F4                     u910:
  1298  0012F4                     
  1299                           ; BSR set to: 0
  1300  0012F4  0E01               	movlw	1
  1301  0012F6  6FC6               	movwf	___awmod@counter& (0+255),b
  1302  0012F8  EF82  F009         	goto	l1929
  1303  0012FC                     l1927:
  1304                           
  1305                           ; BSR set to: 0
  1306  0012FC  90D8               	bcf	status,0,c
  1307  0012FE  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1308  001300  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1309  001302  2BC6               	incf	___awmod@counter& (0+255),f,b
  1310  001304                     l1929:
  1311                           
  1312                           ; BSR set to: 0
  1313  001304  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1314  001306  EF87  F009         	goto	u921
  1315  00130A  EF89  F009         	goto	u920
  1316  00130E                     u921:
  1317  00130E  EF7E  F009         	goto	l1927
  1318  001312                     u920:
  1319  001312                     l1931:
  1320                           
  1321                           ; BSR set to: 0
  1322  001312  51C4               	movf	___awmod@divisor& (0+255),w,b
  1323  001314  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1324  001316  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1325  001318  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1326  00131A  A0D8               	btfss	status,0,c
  1327  00131C  EF92  F009         	goto	u931
  1328  001320  EF94  F009         	goto	u930
  1329  001324                     u931:
  1330  001324  EF98  F009         	goto	l1935
  1331  001328                     u930:
  1332  001328                     
  1333                           ; BSR set to: 0
  1334  001328  51C4               	movf	___awmod@divisor& (0+255),w,b
  1335  00132A  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1336  00132C  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1337  00132E  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1338  001330                     l1935:
  1339                           
  1340                           ; BSR set to: 0
  1341  001330  90D8               	bcf	status,0,c
  1342  001332  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1343  001334  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1344  001336                     
  1345                           ; BSR set to: 0
  1346  001336  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1347  001338  EF89  F009         	goto	l1931
  1348  00133C                     l1939:
  1349                           
  1350                           ; BSR set to: 0
  1351  00133C  51C7               	movf	___awmod@sign& (0+255),w,b
  1352  00133E  B4D8               	btfsc	status,2,c
  1353  001340  EFA4  F009         	goto	u941
  1354  001344  EFA6  F009         	goto	u940
  1355  001348                     u941:
  1356  001348  EFAA  F009         	goto	l1943
  1357  00134C                     u940:
  1358  00134C                     
  1359                           ; BSR set to: 0
  1360  00134C  6DC2               	negf	___awmod@dividend& (0+255),b
  1361  00134E  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1362  001350  B0D8               	btfsc	status,0,c
  1363  001352  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1364  001354                     l1943:
  1365                           
  1366                           ; BSR set to: 0
  1367  001354  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1368  001358  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1369  00135C                     
  1370                           ; BSR set to: 0
  1371  00135C  0012               	return		;funcret
  1372  00135E                     __end_of___awmod:
  1373                           	opt callstack 0
  1374                           
  1375 ;; *************** function _metToucheCombien *****************
  1376 ;; Defined at:
  1377 ;;		line 163 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  j               2   22[BANK0 ] int 
  1382 ;;  i               2   20[BANK0 ] int 
  1383 ;;  nombre          1   19[BANK0 ] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         0       5       0       0       0       0       0
  1395 ;;      Temps:          0       3       0       0       0       0       0
  1396 ;;      Totals:         0       8       0       0       0       0       0
  1397 ;;Total ram usage:        8 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    2
  1400 ;; This function calls:
  1401 ;;		___wmul
  1402 ;;		_calculToucheCombien
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text5
  1409  000FA8                     __ptext5:
  1410                           	opt callstack 0
  1411  000FA8                     _metToucheCombien:
  1412                           	opt callstack 28
  1413  000FA8                     
  1414                           ;main.c: 165: char nombre=0;
  1415  000FA8  0E00               	movlw	0
  1416  000FAA  0100               	movlb	0	; force () banked
  1417  000FAC  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1418                           
  1419                           ;main.c: 166: for(int i=0;i<4;i++)
  1420  000FAE  0E00               	movlw	0
  1421  000FB0  0100               	movlb	0	; force () banked
  1422  000FB2  6FC9               	movwf	(metToucheCombien@i+1)& (0+255),b
  1423  000FB4  0E00               	movlw	0
  1424  000FB6  6FC8               	movwf	metToucheCombien@i& (0+255),b
  1425  000FB8                     
  1426                           ; BSR set to: 0
  1427  000FB8  0100               	movlb	0	; force () banked
  1428  000FBA  BFC9               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1429  000FBC  EFE9  F007         	goto	u1071
  1430  000FC0  51C9               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1431  000FC2  E109               	bnz	u1070
  1432  000FC4  0E04               	movlw	4
  1433  000FC6  5DC8               	subwf	metToucheCombien@i& (0+255),w,b
  1434  000FC8  A0D8               	btfss	status,0,c
  1435  000FCA  EFE9  F007         	goto	u1071
  1436  000FCE  EFEB  F007         	goto	u1070
  1437  000FD2                     u1071:
  1438  000FD2  EFED  F007         	goto	l2049
  1439  000FD6                     u1070:
  1440  000FD6  EF90  F008         	goto	l108
  1441  000FDA                     l2049:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 167: {;main.c: 168: for(int j=0;j<20;j++)
  1445  000FDA  0E00               	movlw	0
  1446  000FDC  0100               	movlb	0	; force () banked
  1447  000FDE  6FCB               	movwf	(metToucheCombien@j+1)& (0+255),b
  1448  000FE0  0E00               	movlw	0
  1449  000FE2  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1450  000FE4                     
  1451                           ; BSR set to: 0
  1452  000FE4  0100               	movlb	0	; force () banked
  1453  000FE6  BFCB               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1454  000FE8  EFFF  F007         	goto	u1081
  1455  000FEC  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1456  000FEE  E109               	bnz	u1080
  1457  000FF0  0E14               	movlw	20
  1458  000FF2  5DCA               	subwf	metToucheCombien@j& (0+255),w,b
  1459  000FF4  A0D8               	btfss	status,0,c
  1460  000FF6  EFFF  F007         	goto	u1081
  1461  000FFA  EF01  F008         	goto	u1080
  1462  000FFE                     u1081:
  1463  000FFE  EF03  F008         	goto	l2055
  1464  001002                     u1080:
  1465  001002  EF7E  F008         	goto	l2069
  1466  001006                     l2055:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 169: {;main.c: 170: if(m_tabMines[i][j] != 2)
  1470  001006  C0C8  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1471  00100A  C0C9  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1472  00100E  0E00               	movlw	0
  1473  001010  0100               	movlb	0	; force () banked
  1474  001012  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1475  001014  0E15               	movlw	21
  1476  001016  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1477  001018  EC1F  F00C         	call	___wmul	;wreg free
  1478  00101C  0E60               	movlw	low _m_tabMines
  1479  00101E  0100               	movlb	0	; force () banked
  1480  001020  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1481  001022  0E00               	movlw	high _m_tabMines
  1482  001024  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1483  001026  0100               	movlb	0	; force () banked
  1484  001028  51B4               	movf	?___wmul& (0+255),w,b
  1485  00102A  0100               	movlb	0	; force () banked
  1486  00102C  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1487  00102E  0100               	movlb	0	; force () banked
  1488  001030  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1489  001032  0100               	movlb	0	; force () banked
  1490  001034  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1491  001036  0100               	movlb	0	; force () banked
  1492  001038  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1493  00103A  0100               	movlb	0	; force () banked
  1494  00103C  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1495  00103E  6ED9               	movwf	fsr2l,c
  1496  001040  0100               	movlb	0	; force () banked
  1497  001042  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1498  001044  0100               	movlb	0	; force () banked
  1499  001046  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1500  001048  6EDA               	movwf	fsr2h,c
  1501  00104A  0E02               	movlw	2
  1502  00104C  18DE               	xorwf	postinc2,w,c
  1503  00104E  B4D8               	btfsc	status,2,c
  1504  001050  EF2C  F008         	goto	u1091
  1505  001054  EF2E  F008         	goto	u1090
  1506  001058                     u1091:
  1507  001058  EF3A  F008         	goto	l2059
  1508  00105C                     u1090:
  1509  00105C                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 171: {;main.c: 172: nombre = (calculToucheCombien(i,j));
  1512  00105C  C0C8  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1513  001060  C0C9  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1514  001064  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1515  001068  C0CB  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1516  00106C  EC09  F003         	call	_calculToucheCombien	;wreg free
  1517  001070  0100               	movlb	0	; force () banked
  1518  001072  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1519  001074                     l2059:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 173: };main.c: 174: if(nombre != 0)
  1523  001074  0100               	movlb	0	; force () banked
  1524  001076  51C7               	movf	metToucheCombien@nombre& (0+255),w,b
  1525  001078  B4D8               	btfsc	status,2,c
  1526  00107A  EF41  F008         	goto	u1101
  1527  00107E  EF43  F008         	goto	u1100
  1528  001082                     u1101:
  1529  001082  EF69  F008         	goto	l2063
  1530  001086                     u1100:
  1531  001086                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 175: {;main.c: 176: m_tabMines[i][j] = nombre+48;
  1534  001086  C0C8  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1535  00108A  C0C9  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1536  00108E  0E00               	movlw	0
  1537  001090  0100               	movlb	0	; force () banked
  1538  001092  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1539  001094  0E15               	movlw	21
  1540  001096  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1541  001098  EC1F  F00C         	call	___wmul	;wreg free
  1542  00109C  0E60               	movlw	low _m_tabMines
  1543  00109E  0100               	movlb	0	; force () banked
  1544  0010A0  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1545  0010A2  0E00               	movlw	high _m_tabMines
  1546  0010A4  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1547  0010A6  0100               	movlb	0	; force () banked
  1548  0010A8  51B4               	movf	?___wmul& (0+255),w,b
  1549  0010AA  0100               	movlb	0	; force () banked
  1550  0010AC  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1551  0010AE  0100               	movlb	0	; force () banked
  1552  0010B0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1553  0010B2  0100               	movlb	0	; force () banked
  1554  0010B4  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1555  0010B6  0100               	movlb	0	; force () banked
  1556  0010B8  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1557  0010BA  0100               	movlb	0	; force () banked
  1558  0010BC  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1559  0010BE  6ED9               	movwf	fsr2l,c
  1560  0010C0  0100               	movlb	0	; force () banked
  1561  0010C2  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1562  0010C4  0100               	movlb	0	; force () banked
  1563  0010C6  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1564  0010C8  6EDA               	movwf	fsr2h,c
  1565  0010CA  0100               	movlb	0	; force () banked
  1566  0010CC  51C7               	movf	metToucheCombien@nombre& (0+255),w,b
  1567  0010CE  0F30               	addlw	48
  1568  0010D0  6EDF               	movwf	indf2,c
  1569  0010D2                     l2063:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 178: };main.c: 179: nombre = 0;
  1573  0010D2  0E00               	movlw	0
  1574  0010D4  0100               	movlb	0	; force () banked
  1575  0010D6  6FC7               	movwf	metToucheCombien@nombre& (0+255),b
  1576  0010D8                     
  1577                           ; BSR set to: 0
  1578  0010D8  0100               	movlb	0	; force () banked
  1579  0010DA  4BCA               	infsnz	metToucheCombien@j& (0+255),f,b
  1580  0010DC  2BCB               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1581  0010DE                     
  1582                           ; BSR set to: 0
  1583  0010DE  0100               	movlb	0	; force () banked
  1584  0010E0  BFCB               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1585  0010E2  EF7C  F008         	goto	u1111
  1586  0010E6  51CB               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1587  0010E8  E109               	bnz	u1110
  1588  0010EA  0E14               	movlw	20
  1589  0010EC  5DCA               	subwf	metToucheCombien@j& (0+255),w,b
  1590  0010EE  A0D8               	btfss	status,0,c
  1591  0010F0  EF7C  F008         	goto	u1111
  1592  0010F4  EF7E  F008         	goto	u1110
  1593  0010F8                     u1111:
  1594  0010F8  EF03  F008         	goto	l2055
  1595  0010FC                     u1110:
  1596  0010FC                     l2069:
  1597                           
  1598                           ; BSR set to: 0
  1599  0010FC  0100               	movlb	0	; force () banked
  1600  0010FE  4BC8               	infsnz	metToucheCombien@i& (0+255),f,b
  1601  001100  2BC9               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1602  001102                     
  1603                           ; BSR set to: 0
  1604  001102  0100               	movlb	0	; force () banked
  1605  001104  BFC9               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1606  001106  EF8E  F008         	goto	u1121
  1607  00110A  51C9               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1608  00110C  E109               	bnz	u1120
  1609  00110E  0E04               	movlw	4
  1610  001110  5DC8               	subwf	metToucheCombien@i& (0+255),w,b
  1611  001112  A0D8               	btfss	status,0,c
  1612  001114  EF8E  F008         	goto	u1121
  1613  001118  EF90  F008         	goto	u1120
  1614  00111C                     u1121:
  1615  00111C  EFED  F007         	goto	l2049
  1616  001120                     u1120:
  1617  001120                     l108:
  1618                           
  1619                           ; BSR set to: 0
  1620  001120  0012               	return		;funcret
  1621  001122                     __end_of_metToucheCombien:
  1622                           	opt callstack 0
  1623                           
  1624 ;; *************** function _calculToucheCombien *****************
  1625 ;; Defined at:
  1626 ;;		line 189 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  ligne           2    6[BANK0 ] int 
  1629 ;;  colonne         2    8[BANK0 ] int 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  nombre          1   15[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1641 ;;      Params:         0       4       0       0       0       0       0
  1642 ;;      Locals:         0       1       0       0       0       0       0
  1643 ;;      Temps:          0       5       0       0       0       0       0
  1644 ;;      Totals:         0      10       0       0       0       0       0
  1645 ;;Total ram usage:       10 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    1
  1648 ;; This function calls:
  1649 ;;		___wmul
  1650 ;; This function is called by:
  1651 ;;		_metToucheCombien
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text6
  1656  000612                     __ptext6:
  1657                           	opt callstack 0
  1658  000612                     _calculToucheCombien:
  1659                           	opt callstack 28
  1660  000612                     
  1661                           ;main.c: 191: char nombre=0;
  1662  000612  0E00               	movlw	0
  1663  000614  0100               	movlb	0	; force () banked
  1664  000616  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1665  000618                     
  1666                           ; BSR set to: 0
  1667                           ;main.c: 192: if((ligne-1 > 0 && ligne+1 < 4) && (colonne-1 > 0 && colonne+1 < 21) )
  1668  000618  0EFF               	movlw	255
  1669  00061A  0100               	movlb	0	; force () banked
  1670  00061C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1671  00061E  0EFF               	movlw	255
  1672  000620  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1673  000622  C0BA  F0C0         	movff	calculToucheCombien@ligne,??_calculToucheCombien+2
  1674  000626  C0BB  F0C1         	movff	calculToucheCombien@ligne+1,??_calculToucheCombien+3
  1675  00062A  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1676  00062C  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1677  00062E  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1678  000630  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1679  000632  BFC1               	btfsc	(??_calculToucheCombien+3)& (0+255),7,b
  1680  000634  EF24  F003         	goto	u731
  1681  000638  51C1               	movf	(??_calculToucheCombien+3)& (0+255),w,b
  1682  00063A  E108               	bnz	u730
  1683  00063C  05C0               	decf	(??_calculToucheCombien+2)& (0+255),w,b
  1684  00063E  A0D8               	btfss	status,0,c
  1685  000640  EF24  F003         	goto	u731
  1686  000644  EF26  F003         	goto	u730
  1687  000648                     u731:
  1688  000648  EF10  F005         	goto	l1845
  1689  00064C                     u730:
  1690  00064C                     
  1691                           ; BSR set to: 0
  1692  00064C  0E01               	movlw	1
  1693  00064E  0100               	movlb	0	; force () banked
  1694  000650  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1695  000652  0100               	movlb	0	; force () banked
  1696  000654  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1697  000656  0E00               	movlw	0
  1698  000658  0100               	movlb	0	; force () banked
  1699  00065A  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1700  00065C  0100               	movlb	0	; force () banked
  1701  00065E  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1702  000660  BFBF               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1703  000662  EF3E  F003         	goto	u740
  1704  000666  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1705  000668  E107               	bnz	u741
  1706  00066A  0E04               	movlw	4
  1707  00066C  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1708  00066E  B0D8               	btfsc	status,0,c
  1709  000670  EF3C  F003         	goto	u741
  1710  000674  EF3E  F003         	goto	u740
  1711  000678                     u741:
  1712  000678  EF10  F005         	goto	l1845
  1713  00067C                     u740:
  1714  00067C                     
  1715                           ; BSR set to: 0
  1716  00067C  0EFF               	movlw	255
  1717  00067E  0100               	movlb	0	; force () banked
  1718  000680  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1719  000682  0EFF               	movlw	255
  1720  000684  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1721  000686  C0BC  F0C0         	movff	calculToucheCombien@colonne,??_calculToucheCombien+2
  1722  00068A  C0BD  F0C1         	movff	calculToucheCombien@colonne+1,??_calculToucheCombien+3
  1723  00068E  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1724  000690  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1725  000692  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1726  000694  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1727  000696  BFC1               	btfsc	(??_calculToucheCombien+3)& (0+255),7,b
  1728  000698  EF56  F003         	goto	u751
  1729  00069C  51C1               	movf	(??_calculToucheCombien+3)& (0+255),w,b
  1730  00069E  E108               	bnz	u750
  1731  0006A0  05C0               	decf	(??_calculToucheCombien+2)& (0+255),w,b
  1732  0006A2  A0D8               	btfss	status,0,c
  1733  0006A4  EF56  F003         	goto	u751
  1734  0006A8  EF58  F003         	goto	u750
  1735  0006AC                     u751:
  1736  0006AC  EF10  F005         	goto	l1845
  1737  0006B0                     u750:
  1738  0006B0                     
  1739                           ; BSR set to: 0
  1740  0006B0  0E01               	movlw	1
  1741  0006B2  0100               	movlb	0	; force () banked
  1742  0006B4  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1743  0006B6  0100               	movlb	0	; force () banked
  1744  0006B8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1745  0006BA  0E00               	movlw	0
  1746  0006BC  0100               	movlb	0	; force () banked
  1747  0006BE  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1748  0006C0  0100               	movlb	0	; force () banked
  1749  0006C2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1750  0006C4  BFBF               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1751  0006C6  EF70  F003         	goto	u760
  1752  0006CA  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1753  0006CC  E107               	bnz	u761
  1754  0006CE  0E15               	movlw	21
  1755  0006D0  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1756  0006D2  B0D8               	btfsc	status,0,c
  1757  0006D4  EF6E  F003         	goto	u761
  1758  0006D8  EF70  F003         	goto	u760
  1759  0006DC                     u761:
  1760  0006DC  EF10  F005         	goto	l1845
  1761  0006E0                     u760:
  1762  0006E0                     
  1763                           ; BSR set to: 0
  1764                           ;main.c: 193: {;main.c: 195: if(m_tabMines[ligne-1][colonne-1]== 2)
  1765  0006E0  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1766  0006E4  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1767  0006E8  0E00               	movlw	0
  1768  0006EA  0100               	movlb	0	; force () banked
  1769  0006EC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1770  0006EE  0E15               	movlw	21
  1771  0006F0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1772  0006F2  EC1F  F00C         	call	___wmul	;wreg free
  1773  0006F6  0EEA               	movlw	234
  1774  0006F8  0100               	movlb	0	; force () banked
  1775  0006FA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1776  0006FC  0EFF               	movlw	255
  1777  0006FE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1778  000700  0E60               	movlw	low _m_tabMines
  1779  000702  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1780  000704  0E00               	movlw	high _m_tabMines
  1781  000706  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1782  000708  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1783  00070A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1784  00070C  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1785  00070E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1786  000710  0100               	movlb	0	; force () banked
  1787  000712  51B4               	movf	?___wmul& (0+255),w,b
  1788  000714  0100               	movlb	0	; force () banked
  1789  000716  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1790  000718  0100               	movlb	0	; force () banked
  1791  00071A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1792  00071C  0100               	movlb	0	; force () banked
  1793  00071E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1794  000720  0100               	movlb	0	; force () banked
  1795  000722  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1796  000724  0100               	movlb	0	; force () banked
  1797  000726  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1798  000728  6ED9               	movwf	fsr2l,c
  1799  00072A  0100               	movlb	0	; force () banked
  1800  00072C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1801  00072E  0100               	movlb	0	; force () banked
  1802  000730  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1803  000732  6EDA               	movwf	fsr2h,c
  1804  000734  0E02               	movlw	2
  1805  000736  18DE               	xorwf	postinc2,w,c
  1806  000738  A4D8               	btfss	status,2,c
  1807  00073A  EFA1  F003         	goto	u771
  1808  00073E  EFA3  F003         	goto	u770
  1809  000742                     u771:
  1810  000742  EFA6  F003         	goto	l1817
  1811  000746                     u770:
  1812  000746                     
  1813                           ; BSR set to: 0
  1814                           ;main.c: 196: {;main.c: 197: nombre = nombre+1;
  1815  000746  0100               	movlb	0	; force () banked
  1816  000748  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1817  00074A  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1818  00074C                     l1817:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;main.c: 198: };main.c: 199: if(m_tabMines[ligne-1][colonne]== 2)
  1822  00074C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1823  000750  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1824  000754  0E00               	movlw	0
  1825  000756  0100               	movlb	0	; force () banked
  1826  000758  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1827  00075A  0E15               	movlw	21
  1828  00075C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1829  00075E  EC1F  F00C         	call	___wmul	;wreg free
  1830  000762  0EEB               	movlw	235
  1831  000764  0100               	movlb	0	; force () banked
  1832  000766  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1833  000768  0EFF               	movlw	255
  1834  00076A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1835  00076C  0E60               	movlw	low _m_tabMines
  1836  00076E  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1837  000770  0E00               	movlw	high _m_tabMines
  1838  000772  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1839  000774  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1840  000776  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1841  000778  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1842  00077A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1843  00077C  0100               	movlb	0	; force () banked
  1844  00077E  51B4               	movf	?___wmul& (0+255),w,b
  1845  000780  0100               	movlb	0	; force () banked
  1846  000782  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1847  000784  0100               	movlb	0	; force () banked
  1848  000786  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1849  000788  0100               	movlb	0	; force () banked
  1850  00078A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1851  00078C  0100               	movlb	0	; force () banked
  1852  00078E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1853  000790  0100               	movlb	0	; force () banked
  1854  000792  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1855  000794  6ED9               	movwf	fsr2l,c
  1856  000796  0100               	movlb	0	; force () banked
  1857  000798  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1858  00079A  0100               	movlb	0	; force () banked
  1859  00079C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1860  00079E  6EDA               	movwf	fsr2h,c
  1861  0007A0  0E02               	movlw	2
  1862  0007A2  18DE               	xorwf	postinc2,w,c
  1863  0007A4  A4D8               	btfss	status,2,c
  1864  0007A6  EFD7  F003         	goto	u781
  1865  0007AA  EFD9  F003         	goto	u780
  1866  0007AE                     u781:
  1867  0007AE  EFDC  F003         	goto	l1821
  1868  0007B2                     u780:
  1869  0007B2                     
  1870                           ; BSR set to: 0
  1871                           ;main.c: 200: {;main.c: 201: nombre = nombre+1;
  1872  0007B2  0100               	movlb	0	; force () banked
  1873  0007B4  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1874  0007B6  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1875  0007B8                     l1821:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 202: };main.c: 203: if(m_tabMines[ligne-1][colonne+1]== 2)
  1879  0007B8  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1880  0007BC  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1881  0007C0  0E00               	movlw	0
  1882  0007C2  0100               	movlb	0	; force () banked
  1883  0007C4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1884  0007C6  0E15               	movlw	21
  1885  0007C8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1886  0007CA  EC1F  F00C         	call	___wmul	;wreg free
  1887  0007CE  0EEC               	movlw	236
  1888  0007D0  0100               	movlb	0	; force () banked
  1889  0007D2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1890  0007D4  0EFF               	movlw	255
  1891  0007D6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1892  0007D8  0E60               	movlw	low _m_tabMines
  1893  0007DA  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1894  0007DC  0E00               	movlw	high _m_tabMines
  1895  0007DE  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1896  0007E0  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1897  0007E2  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1898  0007E4  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1899  0007E6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1900  0007E8  0100               	movlb	0	; force () banked
  1901  0007EA  51B4               	movf	?___wmul& (0+255),w,b
  1902  0007EC  0100               	movlb	0	; force () banked
  1903  0007EE  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1904  0007F0  0100               	movlb	0	; force () banked
  1905  0007F2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1906  0007F4  0100               	movlb	0	; force () banked
  1907  0007F6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1908  0007F8  0100               	movlb	0	; force () banked
  1909  0007FA  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1910  0007FC  0100               	movlb	0	; force () banked
  1911  0007FE  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1912  000800  6ED9               	movwf	fsr2l,c
  1913  000802  0100               	movlb	0	; force () banked
  1914  000804  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1915  000806  0100               	movlb	0	; force () banked
  1916  000808  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1917  00080A  6EDA               	movwf	fsr2h,c
  1918  00080C  0E02               	movlw	2
  1919  00080E  18DE               	xorwf	postinc2,w,c
  1920  000810  A4D8               	btfss	status,2,c
  1921  000812  EF0D  F004         	goto	u791
  1922  000816  EF0F  F004         	goto	u790
  1923  00081A                     u791:
  1924  00081A  EF12  F004         	goto	l1825
  1925  00081E                     u790:
  1926  00081E                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 204: {;main.c: 205: nombre = nombre+1;
  1929  00081E  0100               	movlb	0	; force () banked
  1930  000820  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1931  000822  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1932  000824                     l1825:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;main.c: 206: };main.c: 207: if(m_tabMines[ligne][colonne-1]== 2)
  1936  000824  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1937  000828  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1938  00082C  0E00               	movlw	0
  1939  00082E  0100               	movlb	0	; force () banked
  1940  000830  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1941  000832  0E15               	movlw	21
  1942  000834  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1943  000836  EC1F  F00C         	call	___wmul	;wreg free
  1944  00083A  0EFF               	movlw	255
  1945  00083C  0100               	movlb	0	; force () banked
  1946  00083E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1947  000840  0EFF               	movlw	255
  1948  000842  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1949  000844  0E60               	movlw	low _m_tabMines
  1950  000846  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1951  000848  0E00               	movlw	high _m_tabMines
  1952  00084A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1953  00084C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  1954  00084E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1955  000850  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1956  000852  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1957  000854  0100               	movlb	0	; force () banked
  1958  000856  51B4               	movf	?___wmul& (0+255),w,b
  1959  000858  0100               	movlb	0	; force () banked
  1960  00085A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1961  00085C  0100               	movlb	0	; force () banked
  1962  00085E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1963  000860  0100               	movlb	0	; force () banked
  1964  000862  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1965  000864  0100               	movlb	0	; force () banked
  1966  000866  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1967  000868  0100               	movlb	0	; force () banked
  1968  00086A  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1969  00086C  6ED9               	movwf	fsr2l,c
  1970  00086E  0100               	movlb	0	; force () banked
  1971  000870  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1972  000872  0100               	movlb	0	; force () banked
  1973  000874  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1974  000876  6EDA               	movwf	fsr2h,c
  1975  000878  0E02               	movlw	2
  1976  00087A  18DE               	xorwf	postinc2,w,c
  1977  00087C  A4D8               	btfss	status,2,c
  1978  00087E  EF43  F004         	goto	u801
  1979  000882  EF45  F004         	goto	u800
  1980  000886                     u801:
  1981  000886  EF48  F004         	goto	l1829
  1982  00088A                     u800:
  1983  00088A                     
  1984                           ; BSR set to: 0
  1985                           ;main.c: 208: {;main.c: 209: nombre = nombre+1;
  1986  00088A  0100               	movlb	0	; force () banked
  1987  00088C  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  1988  00088E  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  1989  000890                     l1829:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 210: };main.c: 211: if(m_tabMines[ligne][colonne+1]== 2)
  1993  000890  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1994  000894  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1995  000898  0E00               	movlw	0
  1996  00089A  0100               	movlb	0	; force () banked
  1997  00089C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1998  00089E  0E15               	movlw	21
  1999  0008A0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2000  0008A2  EC1F  F00C         	call	___wmul	;wreg free
  2001  0008A6  0E60               	movlw	low _m_tabMines
  2002  0008A8  0100               	movlb	0	; force () banked
  2003  0008AA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2004  0008AC  0E00               	movlw	high _m_tabMines
  2005  0008AE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2006  0008B0  0E01               	movlw	1
  2007  0008B2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2008  0008B4  0E00               	movlw	0
  2009  0008B6  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2010  0008B8  0100               	movlb	0	; force () banked
  2011  0008BA  51B4               	movf	?___wmul& (0+255),w,b
  2012  0008BC  0100               	movlb	0	; force () banked
  2013  0008BE  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2014  0008C0  0100               	movlb	0	; force () banked
  2015  0008C2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2016  0008C4  0100               	movlb	0	; force () banked
  2017  0008C6  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2018  0008C8  0100               	movlb	0	; force () banked
  2019  0008CA  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2020  0008CC  0100               	movlb	0	; force () banked
  2021  0008CE  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2022  0008D0  6ED9               	movwf	fsr2l,c
  2023  0008D2  0100               	movlb	0	; force () banked
  2024  0008D4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2025  0008D6  0100               	movlb	0	; force () banked
  2026  0008D8  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2027  0008DA  6EDA               	movwf	fsr2h,c
  2028  0008DC  0E02               	movlw	2
  2029  0008DE  18DE               	xorwf	postinc2,w,c
  2030  0008E0  A4D8               	btfss	status,2,c
  2031  0008E2  EF75  F004         	goto	u811
  2032  0008E6  EF77  F004         	goto	u810
  2033  0008EA                     u811:
  2034  0008EA  EF7A  F004         	goto	l1833
  2035  0008EE                     u810:
  2036  0008EE                     
  2037                           ; BSR set to: 0
  2038                           ;main.c: 212: {;main.c: 213: nombre = nombre+1;
  2039  0008EE  0100               	movlb	0	; force () banked
  2040  0008F0  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2041  0008F2  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2042  0008F4                     l1833:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;main.c: 214: };main.c: 215: if(m_tabMines[ligne+1][colonne-1]== 2)
  2046  0008F4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2047  0008F8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2048  0008FC  0E00               	movlw	0
  2049  0008FE  0100               	movlb	0	; force () banked
  2050  000900  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2051  000902  0E15               	movlw	21
  2052  000904  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2053  000906  EC1F  F00C         	call	___wmul	;wreg free
  2054  00090A  0E60               	movlw	low _m_tabMines
  2055  00090C  0100               	movlb	0	; force () banked
  2056  00090E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2057  000910  0E00               	movlw	high _m_tabMines
  2058  000912  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2059  000914  0E14               	movlw	20
  2060  000916  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2061  000918  0E00               	movlw	0
  2062  00091A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2063  00091C  0100               	movlb	0	; force () banked
  2064  00091E  51B4               	movf	?___wmul& (0+255),w,b
  2065  000920  0100               	movlb	0	; force () banked
  2066  000922  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2067  000924  0100               	movlb	0	; force () banked
  2068  000926  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2069  000928  0100               	movlb	0	; force () banked
  2070  00092A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2071  00092C  0100               	movlb	0	; force () banked
  2072  00092E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2073  000930  0100               	movlb	0	; force () banked
  2074  000932  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2075  000934  6ED9               	movwf	fsr2l,c
  2076  000936  0100               	movlb	0	; force () banked
  2077  000938  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2078  00093A  0100               	movlb	0	; force () banked
  2079  00093C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2080  00093E  6EDA               	movwf	fsr2h,c
  2081  000940  0E02               	movlw	2
  2082  000942  18DE               	xorwf	postinc2,w,c
  2083  000944  A4D8               	btfss	status,2,c
  2084  000946  EFA7  F004         	goto	u821
  2085  00094A  EFA9  F004         	goto	u820
  2086  00094E                     u821:
  2087  00094E  EFAC  F004         	goto	l1837
  2088  000952                     u820:
  2089  000952                     
  2090                           ; BSR set to: 0
  2091                           ;main.c: 216: {;main.c: 217: nombre = nombre+1;
  2092  000952  0100               	movlb	0	; force () banked
  2093  000954  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2094  000956  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2095  000958                     l1837:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 218: };main.c: 219: if(m_tabMines[ligne+1][colonne]== 2)
  2099  000958  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2100  00095C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2101  000960  0E00               	movlw	0
  2102  000962  0100               	movlb	0	; force () banked
  2103  000964  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2104  000966  0E15               	movlw	21
  2105  000968  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2106  00096A  EC1F  F00C         	call	___wmul	;wreg free
  2107  00096E  0E60               	movlw	low _m_tabMines
  2108  000970  0100               	movlb	0	; force () banked
  2109  000972  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2110  000974  0E00               	movlw	high _m_tabMines
  2111  000976  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2112  000978  0E15               	movlw	21
  2113  00097A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2114  00097C  0E00               	movlw	0
  2115  00097E  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2116  000980  0100               	movlb	0	; force () banked
  2117  000982  51B4               	movf	?___wmul& (0+255),w,b
  2118  000984  0100               	movlb	0	; force () banked
  2119  000986  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2120  000988  0100               	movlb	0	; force () banked
  2121  00098A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2122  00098C  0100               	movlb	0	; force () banked
  2123  00098E  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2124  000990  0100               	movlb	0	; force () banked
  2125  000992  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2126  000994  0100               	movlb	0	; force () banked
  2127  000996  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2128  000998  6ED9               	movwf	fsr2l,c
  2129  00099A  0100               	movlb	0	; force () banked
  2130  00099C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2131  00099E  0100               	movlb	0	; force () banked
  2132  0009A0  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2133  0009A2  6EDA               	movwf	fsr2h,c
  2134  0009A4  0E02               	movlw	2
  2135  0009A6  18DE               	xorwf	postinc2,w,c
  2136  0009A8  A4D8               	btfss	status,2,c
  2137  0009AA  EFD9  F004         	goto	u831
  2138  0009AE  EFDB  F004         	goto	u830
  2139  0009B2                     u831:
  2140  0009B2  EFDE  F004         	goto	l1841
  2141  0009B6                     u830:
  2142  0009B6                     
  2143                           ; BSR set to: 0
  2144                           ;main.c: 220: {;main.c: 221: nombre = nombre+1;
  2145  0009B6  0100               	movlb	0	; force () banked
  2146  0009B8  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2147  0009BA  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2148  0009BC                     l1841:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 222: };main.c: 223: if(m_tabMines[ligne+1][colonne+1]== 2)
  2152  0009BC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2153  0009C0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2154  0009C4  0E00               	movlw	0
  2155  0009C6  0100               	movlb	0	; force () banked
  2156  0009C8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2157  0009CA  0E15               	movlw	21
  2158  0009CC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2159  0009CE  EC1F  F00C         	call	___wmul	;wreg free
  2160  0009D2  0E60               	movlw	low _m_tabMines
  2161  0009D4  0100               	movlb	0	; force () banked
  2162  0009D6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2163  0009D8  0E00               	movlw	high _m_tabMines
  2164  0009DA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2165  0009DC  0E16               	movlw	22
  2166  0009DE  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2167  0009E0  0E00               	movlw	0
  2168  0009E2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2169  0009E4  0100               	movlb	0	; force () banked
  2170  0009E6  51B4               	movf	?___wmul& (0+255),w,b
  2171  0009E8  0100               	movlb	0	; force () banked
  2172  0009EA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2173  0009EC  0100               	movlb	0	; force () banked
  2174  0009EE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2175  0009F0  0100               	movlb	0	; force () banked
  2176  0009F2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2177  0009F4  0100               	movlb	0	; force () banked
  2178  0009F6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2179  0009F8  0100               	movlb	0	; force () banked
  2180  0009FA  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2181  0009FC  6ED9               	movwf	fsr2l,c
  2182  0009FE  0100               	movlb	0	; force () banked
  2183  000A00  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2184  000A02  0100               	movlb	0	; force () banked
  2185  000A04  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2186  000A06  6EDA               	movwf	fsr2h,c
  2187  000A08  0E02               	movlw	2
  2188  000A0A  18DE               	xorwf	postinc2,w,c
  2189  000A0C  A4D8               	btfss	status,2,c
  2190  000A0E  EF0B  F005         	goto	u841
  2191  000A12  EF0D  F005         	goto	u840
  2192  000A16                     u841:
  2193  000A16  EF10  F005         	goto	l1845
  2194  000A1A                     u840:
  2195  000A1A                     
  2196                           ; BSR set to: 0
  2197                           ;main.c: 224: {;main.c: 225: nombre = nombre+1;
  2198  000A1A  0100               	movlb	0	; force () banked
  2199  000A1C  29C3               	incf	calculToucheCombien@nombre& (0+255),w,b
  2200  000A1E  6FC3               	movwf	calculToucheCombien@nombre& (0+255),b
  2201  000A20                     l1845:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 226: };main.c: 227: };main.c: 228: return nombre;
  2205  000A20  0100               	movlb	0	; force () banked
  2206  000A22  51C3               	movf	calculToucheCombien@nombre& (0+255),w,b
  2207  000A24                     
  2208                           ; BSR set to: 0
  2209  000A24  0012               	return		;funcret
  2210  000A26                     __end_of_calculToucheCombien:
  2211                           	opt callstack 0
  2212                           
  2213 ;; *************** function _lcd_montreCurseur *****************
  2214 ;; Defined at:
  2215 ;;		line 412 in file "Lcd4Lignes.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2229 ;;      Params:         0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    3
  2236 ;; This function calls:
  2237 ;;		_lcd_wrCom
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text7
  2244  0018A0                     __ptext7:
  2245                           	opt callstack 0
  2246  0018A0                     _lcd_montreCurseur:
  2247                           	opt callstack 27
  2248  0018A0                     
  2249                           ;Lcd4Lignes.c: 414: lcd_wrCom(0x0F);
  2250  0018A0  0E0F               	movlw	15
  2251  0018A2  EC6F  F00A         	call	_lcd_wrCom
  2252  0018A6  0012               	return		;funcret
  2253  0018A8                     __end_of_lcd_montreCurseur:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _lcd_init *****************
  2257 ;; Defined at:
  2258 ;;		line 258 in file "Lcd4Lignes.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    5
  2279 ;; This function calls:
  2280 ;;		_lcd_initCGRam
  2281 ;;		_lcd_resetSequence
  2282 ;;		_lcd_wrCom
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text8
  2289  001816                     __ptext8:
  2290                           	opt callstack 0
  2291  001816                     _lcd_init:
  2292                           	opt callstack 25
  2293  001816                     
  2294                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2295  001816  ECA5  F00A         	call	_lcd_resetSequence	;wreg free
  2296                           
  2297                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2298  00181A  0E28               	movlw	40
  2299  00181C  EC6F  F00A         	call	_lcd_wrCom
  2300                           
  2301                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2302  001820  0E0F               	movlw	15
  2303  001822  EC6F  F00A         	call	_lcd_wrCom
  2304                           
  2305                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2306  001826  0E01               	movlw	1
  2307  001828  EC6F  F00A         	call	_lcd_wrCom
  2308                           
  2309                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2310  00182C  0E06               	movlw	6
  2311  00182E  EC6F  F00A         	call	_lcd_wrCom
  2312                           
  2313                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2314  001832  0E80               	movlw	128
  2315  001834  EC6F  F00A         	call	_lcd_wrCom
  2316  001838                     
  2317                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2318  001838  ECAF  F009         	call	_lcd_initCGRam	;wreg free
  2319  00183C  0012               	return		;funcret
  2320  00183E                     __end_of_lcd_init:
  2321                           	opt callstack 0
  2322                           
  2323 ;; *************** function _lcd_resetSequence *****************
  2324 ;; Defined at:
  2325 ;;		line 221 in file "Lcd4Lignes.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0
  2341 ;;      Temps:          0       1       0       0       0       0       0
  2342 ;;      Totals:         0       1       0       0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		_lcd_ecrireDonnees
  2348 ;;		_lcd_strobeEnableBit
  2349 ;; This function is called by:
  2350 ;;		_lcd_init
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text9
  2355  00154A                     __ptext9:
  2356                           	opt callstack 0
  2357  00154A                     _lcd_resetSequence:
  2358                           	opt callstack 28
  2359  00154A                     
  2360                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2361  00154A  0E00               	movlw	0
  2362  00154C  6E95               	movwf	149,c	;volatile
  2363  00154E                     
  2364                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2365  00154E  0E0D               	movlw	13
  2366  001550  0100               	movlb	0	; force () banked
  2367  001552  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2368  001554  0EFB               	movlw	251
  2369  001556                     u1257:
  2370  001556  2EE8               	decfsz	wreg,f,c
  2371  001558  D7FE               	bra	u1257
  2372  00155A  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2373  00155C  D7FC               	bra	u1257
  2374  00155E  F000 F000          	nop2	
  2375  001562                     
  2376                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2377  001562  9080               	bcf	128,0,c	;volatile
  2378  001564                     
  2379                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2380  001564  9280               	bcf	128,1,c	;volatile
  2381  001566                     
  2382                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2383  001566  0E03               	movlw	3
  2384  001568  EC33  F00C         	call	_lcd_ecrireDonnees
  2385  00156C                     
  2386                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2387  00156C  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2388  001570                     
  2389                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2390  001570  0E03               	movlw	3
  2391  001572                     u1267:
  2392  001572  2EE8               	decfsz	wreg,f,c
  2393  001574  D7FE               	bra	u1267
  2394  001576  F000               	nop	
  2395  001578                     
  2396                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2397  001578  0E03               	movlw	3
  2398  00157A  EC33  F00C         	call	_lcd_ecrireDonnees
  2399  00157E                     
  2400                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2401  00157E  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2402  001582                     
  2403                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2404  001582  0E03               	movlw	3
  2405  001584                     u1277:
  2406  001584  2EE8               	decfsz	wreg,f,c
  2407  001586  D7FE               	bra	u1277
  2408  001588  F000               	nop	
  2409  00158A                     
  2410                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2411  00158A  0E03               	movlw	3
  2412  00158C  EC33  F00C         	call	_lcd_ecrireDonnees
  2413  001590                     
  2414                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2415  001590  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2416  001594                     
  2417                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2418  001594  0E03               	movlw	3
  2419  001596                     u1287:
  2420  001596  2EE8               	decfsz	wreg,f,c
  2421  001598  D7FE               	bra	u1287
  2422  00159A  F000               	nop	
  2423  00159C                     
  2424                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2425  00159C  0E02               	movlw	2
  2426  00159E  EC33  F00C         	call	_lcd_ecrireDonnees
  2427  0015A2                     
  2428                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2429  0015A2  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2430  0015A6                     
  2431                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2432  0015A6  0E03               	movlw	3
  2433  0015A8                     u1297:
  2434  0015A8  2EE8               	decfsz	wreg,f,c
  2435  0015AA  D7FE               	bra	u1297
  2436  0015AC  F000               	nop	
  2437  0015AE                     
  2438                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2439  0015AE  0E0F               	movlw	15
  2440  0015B0  6E95               	movwf	149,c	;volatile
  2441  0015B2  0012               	return		;funcret
  2442  0015B4                     __end_of_lcd_resetSequence:
  2443                           	opt callstack 0
  2444                           
  2445 ;; *************** function _lcd_initCGRam *****************
  2446 ;; Defined at:
  2447 ;;		line 417 in file "Lcd4Lignes.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  j               1    6[BANK0 ] unsigned char 
  2452 ;;  i               1    5[BANK0 ] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2462 ;;      Params:         0       0       0       0       0       0       0
  2463 ;;      Locals:         0       2       0       0       0       0       0
  2464 ;;      Temps:          0       2       0       0       0       0       0
  2465 ;;      Totals:         0       4       0       0       0       0       0
  2466 ;;Total ram usage:        4 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    4
  2469 ;; This function calls:
  2470 ;;		_lcd_curseurHome
  2471 ;;		_lcd_wrCom
  2472 ;;		_lcd_wrData
  2473 ;; This function is called by:
  2474 ;;		_lcd_init
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text10
  2479  00135E                     __ptext10:
  2480                           	opt callstack 0
  2481  00135E                     _lcd_initCGRam:
  2482                           	opt callstack 25
  2483  00135E                     
  2484                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2485  00135E  0E40               	movlw	64
  2486  001360  EC6F  F00A         	call	_lcd_wrCom
  2487  001364                     
  2488                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2489  001364  0E00               	movlw	0
  2490  001366  0100               	movlb	0	; force () banked
  2491  001368  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2492  00136A                     
  2493                           ; BSR set to: 0
  2494  00136A  0E07               	movlw	7
  2495  00136C  0100               	movlb	0	; force () banked
  2496  00136E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2497  001370  EFBC  F009         	goto	u851
  2498  001374  EFBE  F009         	goto	u850
  2499  001378                     u851:
  2500  001378  EFC0  F009         	goto	l1893
  2501  00137C                     u850:
  2502  00137C  EFFD  F009         	goto	l1909
  2503  001380                     l1893:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2507  001380  0E00               	movlw	0
  2508  001382  0100               	movlb	0	; force () banked
  2509  001384  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2510  001386                     
  2511                           ; BSR set to: 0
  2512  001386  0E07               	movlw	7
  2513  001388  0100               	movlb	0	; force () banked
  2514  00138A  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2515  00138C  EFCA  F009         	goto	u861
  2516  001390  EFCC  F009         	goto	u860
  2517  001394                     u861:
  2518  001394  EFCE  F009         	goto	l1899
  2519  001398                     u860:
  2520  001398  EFF2  F009         	goto	l1905
  2521  00139C                     l1899:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2525  00139C  0100               	movlb	0	; force () banked
  2526  00139E  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2527  0013A0  0D08               	mullw	8
  2528  0013A2  0E54               	movlw	low _matCGRAM
  2529  0013A4  0100               	movlb	0	; force () banked
  2530  0013A6  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2531  0013A8  0E01               	movlw	high _matCGRAM
  2532  0013AA  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2533  0013AC  50F3               	movf	243,w,c
  2534  0013AE  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2535  0013B0  50F4               	movf	244,w,c
  2536  0013B2  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2537  0013B4  0100               	movlb	0	; force () banked
  2538  0013B6  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2539  0013B8  0100               	movlb	0	; force () banked
  2540  0013BA  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2541  0013BC  6ED9               	movwf	fsr2l,c
  2542  0013BE  0100               	movlb	0	; force () banked
  2543  0013C0  0E00               	movlw	0
  2544  0013C2  0100               	movlb	0	; force () banked
  2545  0013C4  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2546  0013C6  6EDA               	movwf	fsr2h,c
  2547  0013C8  50DF               	movf	indf2,w,c
  2548  0013CA  ECDB  F00B         	call	_lcd_wrData
  2549  0013CE  0100               	movlb	0	; force () banked
  2550  0013D0  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2551  0013D2                     
  2552                           ; BSR set to: 0
  2553  0013D2  0E07               	movlw	7
  2554  0013D4  0100               	movlb	0	; force () banked
  2555  0013D6  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2556  0013D8  EFF0  F009         	goto	u871
  2557  0013DC  EFF2  F009         	goto	u870
  2558  0013E0                     u871:
  2559  0013E0  EFCE  F009         	goto	l1899
  2560  0013E4                     u870:
  2561  0013E4                     l1905:
  2562                           
  2563                           ; BSR set to: 0
  2564  0013E4  0100               	movlb	0	; force () banked
  2565  0013E6  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2566  0013E8                     
  2567                           ; BSR set to: 0
  2568  0013E8  0E07               	movlw	7
  2569  0013EA  0100               	movlb	0	; force () banked
  2570  0013EC  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2571  0013EE  EFFB  F009         	goto	u881
  2572  0013F2  EFFD  F009         	goto	u880
  2573  0013F6                     u881:
  2574  0013F6  EFC0  F009         	goto	l1893
  2575  0013FA                     u880:
  2576  0013FA                     l1909:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2580  0013FA  EC54  F00C         	call	_lcd_curseurHome	;wreg free
  2581  0013FE  0012               	return		;funcret
  2582  001400                     __end_of_lcd_initCGRam:
  2583                           	opt callstack 0
  2584                           
  2585 ;; *************** function _lcd_curseurHome *****************
  2586 ;; Defined at:
  2587 ;;		line 288 in file "Lcd4Lignes.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    3
  2608 ;; This function calls:
  2609 ;;		_lcd_wrCom
  2610 ;; This function is called by:
  2611 ;;		_lcd_initCGRam
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text11
  2616  0018A8                     __ptext11:
  2617                           	opt callstack 0
  2618  0018A8                     _lcd_curseurHome:
  2619                           	opt callstack 25
  2620  0018A8                     
  2621                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2622  0018A8  0E02               	movlw	2
  2623  0018AA  EC6F  F00A         	call	_lcd_wrCom
  2624  0018AE  0012               	return		;funcret
  2625  0018B0                     __end_of_lcd_curseurHome:
  2626                           	opt callstack 0
  2627                           
  2628 ;; *************** function _lcd_effaceAffichage *****************
  2629 ;; Defined at:
  2630 ;;		line 276 in file "Lcd4Lignes.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2644 ;;      Params:         0       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    3
  2651 ;; This function calls:
  2652 ;;		_lcd_wrCom
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text12
  2659  001892                     __ptext12:
  2660                           	opt callstack 0
  2661  001892                     _lcd_effaceAffichage:
  2662                           	opt callstack 27
  2663  001892                     
  2664                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  2665  001892  0E01               	movlw	1
  2666  001894  EC6F  F00A         	call	_lcd_wrCom
  2667                           
  2668                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  2669  001898  0E80               	movlw	128
  2670  00189A  EC6F  F00A         	call	_lcd_wrCom
  2671  00189E  0012               	return		;funcret
  2672  0018A0                     __end_of_lcd_effaceAffichage:
  2673                           	opt callstack 0
  2674                           
  2675 ;; *************** function _lcd_cacheCurseur *****************
  2676 ;; Defined at:
  2677 ;;		line 401 in file "Lcd4Lignes.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		_lcd_wrCom
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text13
  2706  0018B0                     __ptext13:
  2707                           	opt callstack 0
  2708  0018B0                     _lcd_cacheCurseur:
  2709                           	opt callstack 27
  2710  0018B0                     
  2711                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  2712  0018B0  0E0C               	movlw	12
  2713  0018B2  EC6F  F00A         	call	_lcd_wrCom
  2714  0018B6  0012               	return		;funcret
  2715  0018B8                     __end_of_lcd_cacheCurseur:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _initialisation *****************
  2719 ;; Defined at:
  2720 ;;		line 325 in file "main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		_srand
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text14
  2749  001782                     __ptext14:
  2750                           	opt callstack 0
  2751  001782                     _initialisation:
  2752                           	opt callstack 29
  2753  001782                     
  2754                           ;main.c: 327: TRISD = 0;
  2755  001782  0E00               	movlw	0
  2756  001784  6E95               	movwf	149,c	;volatile
  2757                           
  2758                           ;main.c: 329: ANSELH = 0;
  2759  001786  0E00               	movlw	0
  2760  001788  6E7F               	movwf	127,c	;volatile
  2761  00178A                     
  2762                           ;main.c: 330: TRISB = 0xFF;
  2763  00178A  6893               	setf	147,c	;volatile
  2764                           
  2765                           ;main.c: 332: ANSEL = 0;
  2766  00178C  0E00               	movlw	0
  2767  00178E  6E7E               	movwf	126,c	;volatile
  2768                           
  2769                           ;main.c: 333: TRISA = 0;
  2770  001790  0E00               	movlw	0
  2771  001792  6E92               	movwf	146,c	;volatile
  2772  001794                     
  2773                           ;main.c: 337: T1CONbits.TMR1ON = 1;
  2774  001794  80CD               	bsf	205,0,c	;volatile
  2775  001796                     
  2776                           ;main.c: 338: srand(TMR1);
  2777  001796  CFCE F0B4          	movff	4046,srand@x	;volatile
  2778  00179A  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2779  00179E  EC41  F00C         	call	_srand	;wreg free
  2780  0017A2                     
  2781                           ;main.c: 341: ANSELbits.ANS7 = 1;
  2782  0017A2  8E7E               	bsf	126,7,c	;volatile
  2783  0017A4                     
  2784                           ;main.c: 343: ADCON0bits.ADON = 1;
  2785  0017A4  80C2               	bsf	194,0,c	;volatile
  2786  0017A6                     
  2787                           ;main.c: 344: ADCON1 = 0;
  2788  0017A6  0E00               	movlw	0
  2789  0017A8  6EC1               	movwf	193,c	;volatile
  2790  0017AA                     
  2791                           ;main.c: 346: ADCON2bits.ADFM = 0;
  2792  0017AA  9EC0               	bcf	192,7,c	;volatile
  2793  0017AC                     
  2794                           ;main.c: 347: ADCON2bits.ACQT = 0;
  2795  0017AC  0EC7               	movlw	-57
  2796  0017AE  16C0               	andwf	192,f,c	;volatile
  2797  0017B0                     
  2798                           ;main.c: 348: ADCON2bits.ADCS = 0;
  2799  0017B0  0EF8               	movlw	-8
  2800  0017B2  16C0               	andwf	192,f,c	;volatile
  2801  0017B4  0012               	return		;funcret
  2802  0017B6                     __end_of_initialisation:
  2803                           	opt callstack 0
  2804                           
  2805 ;; *************** function _srand *****************
  2806 ;; Defined at:
  2807 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  x               2    0[BANK0 ] unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		status,2
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2821 ;;      Params:         0       2       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0
  2824 ;;      Totals:         0       2       0       0       0       0       0
  2825 ;;Total ram usage:        2 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_initialisation
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text15
  2835  001882                     __ptext15:
  2836                           	opt callstack 0
  2837  001882                     _srand:
  2838                           	opt callstack 29
  2839  001882  C0B4  F0E0         	movff	srand@x,_randx
  2840  001886  C0B5  F0E1         	movff	srand@x+1,_randx+1
  2841  00188A  0100               	movlb	0	; () banked
  2842  00188C  6BE2               	clrf	(_randx+2)& (0+255),b
  2843  00188E  6BE3               	clrf	(_randx+3)& (0+255),b
  2844  001890                     
  2845                           ; BSR set to: 0
  2846  001890  0012               	return		;funcret
  2847  001892                     __end_of_srand:
  2848                           	opt callstack 0
  2849                           
  2850 ;; *************** function _initTabVue *****************
  2851 ;; Defined at:
  2852 ;;		line 102 in file "main.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  g               2   21[BANK0 ] int 
  2857 ;;  j               2   19[BANK0 ] int 
  2858 ;;  i               2   17[BANK0 ] int 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2868 ;;      Params:         0       0       0       0       0       0       0
  2869 ;;      Locals:         0       6       0       0       0       0       0
  2870 ;;      Temps:          0       2       0       0       0       0       0
  2871 ;;      Totals:         0       8       0       0       0       0       0
  2872 ;;Total ram usage:        8 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    5
  2875 ;; This function calls:
  2876 ;;		___wmul
  2877 ;;		_lcd_gotoXY
  2878 ;;		_lcd_putMessage
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text16
  2885  000E14                     __ptext16:
  2886                           	opt callstack 0
  2887  000E14                     _initTabVue:
  2888                           	opt callstack 25
  2889  000E14                     
  2890                           ;main.c: 104: int i,j =0;
  2891  000E14  0E00               	movlw	0
  2892  000E16  0100               	movlb	0	; force () banked
  2893  000E18  6FC8               	movwf	(initTabVue@j+1)& (0+255),b
  2894  000E1A  0E00               	movlw	0
  2895  000E1C  6FC7               	movwf	initTabVue@j& (0+255),b
  2896                           
  2897                           ;main.c: 106: for(i=0;i<4;i++)
  2898  000E1E  0E00               	movlw	0
  2899  000E20  0100               	movlb	0	; force () banked
  2900  000E22  6FC6               	movwf	(initTabVue@i+1)& (0+255),b
  2901  000E24  0E00               	movlw	0
  2902  000E26  6FC5               	movwf	initTabVue@i& (0+255),b
  2903  000E28                     
  2904                           ; BSR set to: 0
  2905  000E28  0100               	movlb	0	; force () banked
  2906  000E2A  BFC6               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2907  000E2C  EF21  F007         	goto	u951
  2908  000E30  51C6               	movf	(initTabVue@i+1)& (0+255),w,b
  2909  000E32  E109               	bnz	u950
  2910  000E34  0E04               	movlw	4
  2911  000E36  5DC5               	subwf	initTabVue@i& (0+255),w,b
  2912  000E38  A0D8               	btfss	status,0,c
  2913  000E3A  EF21  F007         	goto	u951
  2914  000E3E  EF23  F007         	goto	u950
  2915  000E42                     u951:
  2916  000E42  EF25  F007         	goto	l1981
  2917  000E46                     u950:
  2918  000E46  EFD3  F007         	goto	l87
  2919  000E4A                     l1981:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 107: {;main.c: 108: for(j=0;j<20;j++)
  2923  000E4A  0E00               	movlw	0
  2924  000E4C  0100               	movlb	0	; force () banked
  2925  000E4E  6FC8               	movwf	(initTabVue@j+1)& (0+255),b
  2926  000E50  0E00               	movlw	0
  2927  000E52  6FC7               	movwf	initTabVue@j& (0+255),b
  2928  000E54                     
  2929                           ; BSR set to: 0
  2930  000E54  0100               	movlb	0	; force () banked
  2931  000E56  BFC8               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2932  000E58  EF37  F007         	goto	u961
  2933  000E5C  51C8               	movf	(initTabVue@j+1)& (0+255),w,b
  2934  000E5E  E109               	bnz	u960
  2935  000E60  0E14               	movlw	20
  2936  000E62  5DC7               	subwf	initTabVue@j& (0+255),w,b
  2937  000E64  A0D8               	btfss	status,0,c
  2938  000E66  EF37  F007         	goto	u961
  2939  000E6A  EF39  F007         	goto	u960
  2940  000E6E                     u961:
  2941  000E6E  EF3B  F007         	goto	l1987
  2942  000E72                     u960:
  2943  000E72  EF71  F007         	goto	l1993
  2944  000E76                     l1987:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;main.c: 109: {;main.c: 110: m_tabVue[i][j] = 1;
  2948  000E76  C0C5  F0B4         	movff	initTabVue@i,___wmul@multiplier
  2949  000E7A  C0C6  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  2950  000E7E  0E00               	movlw	0
  2951  000E80  0100               	movlb	0	; force () banked
  2952  000E82  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2953  000E84  0E15               	movlw	21
  2954  000E86  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2955  000E88  EC1F  F00C         	call	___wmul	;wreg free
  2956  000E8C  0E00               	movlw	low _m_tabVue
  2957  000E8E  0100               	movlb	0	; force () banked
  2958  000E90  6FC3               	movwf	??_initTabVue& (0+255),b
  2959  000E92  0E01               	movlw	high _m_tabVue
  2960  000E94  6FC4               	movwf	(??_initTabVue+1)& (0+255),b
  2961  000E96  0100               	movlb	0	; force () banked
  2962  000E98  51B4               	movf	?___wmul& (0+255),w,b
  2963  000E9A  0100               	movlb	0	; force () banked
  2964  000E9C  27C3               	addwf	??_initTabVue& (0+255),f,b
  2965  000E9E  0100               	movlb	0	; force () banked
  2966  000EA0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2967  000EA2  0100               	movlb	0	; force () banked
  2968  000EA4  23C4               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2969  000EA6  0100               	movlb	0	; force () banked
  2970  000EA8  51C7               	movf	initTabVue@j& (0+255),w,b
  2971  000EAA  0100               	movlb	0	; force () banked
  2972  000EAC  25C3               	addwf	??_initTabVue& (0+255),w,b
  2973  000EAE  6ED9               	movwf	fsr2l,c
  2974  000EB0  0100               	movlb	0	; force () banked
  2975  000EB2  51C8               	movf	(initTabVue@j+1)& (0+255),w,b
  2976  000EB4  0100               	movlb	0	; force () banked
  2977  000EB6  21C4               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2978  000EB8  6EDA               	movwf	fsr2h,c
  2979  000EBA  0E01               	movlw	1
  2980  000EBC  6EDF               	movwf	indf2,c
  2981  000EBE                     
  2982                           ; BSR set to: 0
  2983  000EBE  0100               	movlb	0	; force () banked
  2984  000EC0  4BC7               	infsnz	initTabVue@j& (0+255),f,b
  2985  000EC2  2BC8               	incf	(initTabVue@j+1)& (0+255),f,b
  2986  000EC4                     
  2987                           ; BSR set to: 0
  2988  000EC4  0100               	movlb	0	; force () banked
  2989  000EC6  BFC8               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2990  000EC8  EF6F  F007         	goto	u971
  2991  000ECC  51C8               	movf	(initTabVue@j+1)& (0+255),w,b
  2992  000ECE  E109               	bnz	u970
  2993  000ED0  0E14               	movlw	20
  2994  000ED2  5DC7               	subwf	initTabVue@j& (0+255),w,b
  2995  000ED4  A0D8               	btfss	status,0,c
  2996  000ED6  EF6F  F007         	goto	u971
  2997  000EDA  EF71  F007         	goto	u970
  2998  000EDE                     u971:
  2999  000EDE  EF3B  F007         	goto	l1987
  3000  000EE2                     u970:
  3001  000EE2                     l1993:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;main.c: 111: };main.c: 112: for(int g =0;g<4;g++)
  3005  000EE2  0E00               	movlw	0
  3006  000EE4  0100               	movlb	0	; force () banked
  3007  000EE6  6FCA               	movwf	(initTabVue@g+1)& (0+255),b
  3008  000EE8  0E00               	movlw	0
  3009  000EEA  6FC9               	movwf	initTabVue@g& (0+255),b
  3010  000EEC                     
  3011                           ; BSR set to: 0
  3012  000EEC  0100               	movlb	0	; force () banked
  3013  000EEE  BFCA               	btfsc	(initTabVue@g+1)& (0+255),7,b
  3014  000EF0  EF83  F007         	goto	u981
  3015  000EF4  51CA               	movf	(initTabVue@g+1)& (0+255),w,b
  3016  000EF6  E109               	bnz	u980
  3017  000EF8  0E04               	movlw	4
  3018  000EFA  5DC9               	subwf	initTabVue@g& (0+255),w,b
  3019  000EFC  A0D8               	btfss	status,0,c
  3020  000EFE  EF83  F007         	goto	u981
  3021  000F02  EF85  F007         	goto	u980
  3022  000F06                     u981:
  3023  000F06  EF87  F007         	goto	l1999
  3024  000F0A                     u980:
  3025  000F0A  EFC1  F007         	goto	l2007
  3026  000F0E                     l1999:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 113: {;main.c: 114: lcd_gotoXY(1,g+1);
  3030  000F0E  0100               	movlb	0	; force () banked
  3031  000F10  29C9               	incf	initTabVue@g& (0+255),w,b
  3032  000F12  0100               	movlb	0	; force () banked
  3033  000F14  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3034  000F16  0E01               	movlw	1
  3035  000F18  EC00  F00A         	call	_lcd_gotoXY
  3036  000F1C                     
  3037                           ;main.c: 115: lcd_putMessage(m_tabVue[g]);
  3038  000F1C  C0C9  F0B4         	movff	initTabVue@g,___wmul@multiplier
  3039  000F20  C0CA  F0B5         	movff	initTabVue@g+1,___wmul@multiplier+1
  3040  000F24  0E00               	movlw	0
  3041  000F26  0100               	movlb	0	; force () banked
  3042  000F28  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3043  000F2A  0E15               	movlw	21
  3044  000F2C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3045  000F2E  EC1F  F00C         	call	___wmul	;wreg free
  3046  000F32  0E00               	movlw	low _m_tabVue
  3047  000F34  0100               	movlb	0	; force () banked
  3048  000F36  25B4               	addwf	?___wmul& (0+255),w,b
  3049  000F38  0100               	movlb	0	; force () banked
  3050  000F3A  6FC3               	movwf	??_initTabVue& (0+255),b
  3051  000F3C  0E01               	movlw	high _m_tabVue
  3052  000F3E  0100               	movlb	0	; force () banked
  3053  000F40  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  3054  000F42  0100               	movlb	0	; force () banked
  3055  000F44  6FC4               	movwf	(??_initTabVue+1)& (0+255),b
  3056  000F46  C0C3  F0BA         	movff	??_initTabVue,lcd_putMessage@chaine
  3057  000F4A  C0C4  F0BB         	movff	??_initTabVue+1,lcd_putMessage@chaine+1
  3058  000F4E  0100               	movlb	0	; force () banked
  3059  000F50  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3060  000F52  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3061  000F54  A4D8               	btfss	status,2,c
  3062  000F56  0E20               	movlw	32
  3063  000F58  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3064  000F5A  ECFC  F008         	call	_lcd_putMessage	;wreg free
  3065  000F5E  0100               	movlb	0	; force () banked
  3066  000F60  4BC9               	infsnz	initTabVue@g& (0+255),f,b
  3067  000F62  2BCA               	incf	(initTabVue@g+1)& (0+255),f,b
  3068  000F64                     
  3069                           ; BSR set to: 0
  3070  000F64  0100               	movlb	0	; force () banked
  3071  000F66  BFCA               	btfsc	(initTabVue@g+1)& (0+255),7,b
  3072  000F68  EFBF  F007         	goto	u991
  3073  000F6C  51CA               	movf	(initTabVue@g+1)& (0+255),w,b
  3074  000F6E  E109               	bnz	u990
  3075  000F70  0E04               	movlw	4
  3076  000F72  5DC9               	subwf	initTabVue@g& (0+255),w,b
  3077  000F74  A0D8               	btfss	status,0,c
  3078  000F76  EFBF  F007         	goto	u991
  3079  000F7A  EFC1  F007         	goto	u990
  3080  000F7E                     u991:
  3081  000F7E  EF87  F007         	goto	l1999
  3082  000F82                     u990:
  3083  000F82                     l2007:
  3084                           
  3085                           ; BSR set to: 0
  3086  000F82  0100               	movlb	0	; force () banked
  3087  000F84  4BC5               	infsnz	initTabVue@i& (0+255),f,b
  3088  000F86  2BC6               	incf	(initTabVue@i+1)& (0+255),f,b
  3089  000F88                     
  3090                           ; BSR set to: 0
  3091  000F88  0100               	movlb	0	; force () banked
  3092  000F8A  BFC6               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3093  000F8C  EFD1  F007         	goto	u1001
  3094  000F90  51C6               	movf	(initTabVue@i+1)& (0+255),w,b
  3095  000F92  E109               	bnz	u1000
  3096  000F94  0E04               	movlw	4
  3097  000F96  5DC5               	subwf	initTabVue@i& (0+255),w,b
  3098  000F98  A0D8               	btfss	status,0,c
  3099  000F9A  EFD1  F007         	goto	u1001
  3100  000F9E  EFD3  F007         	goto	u1000
  3101  000FA2                     u1001:
  3102  000FA2  EF25  F007         	goto	l1981
  3103  000FA6                     u1000:
  3104  000FA6                     l87:
  3105                           
  3106                           ; BSR set to: 0
  3107  000FA6  0012               	return		;funcret
  3108  000FA8                     __end_of_initTabVue:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function _lcd_putMessage *****************
  3112 ;; Defined at:
  3113 ;;		line 387 in file "Lcd4Lignes.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  3116 ;;		 -> m_tabVue(84), accueil(15), 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  j               1   14[BANK0 ] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         0       3       0       0       0       0       0
  3129 ;;      Locals:         0       1       0       0       0       0       0
  3130 ;;      Temps:          0       5       0       0       0       0       0
  3131 ;;      Totals:         0       9       0       0       0       0       0
  3132 ;;Total ram usage:        9 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    4
  3135 ;; This function calls:
  3136 ;;		_lcd_ecritChar
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;;		_initTabVue
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text17
  3144  0011F8                     __ptext17:
  3145                           	opt callstack 0
  3146  0011F8                     _lcd_putMessage:
  3147                           	opt callstack 26
  3148  0011F8                     
  3149                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  3150  0011F8  0E00               	movlw	0
  3151  0011FA  0100               	movlb	0	; force () banked
  3152  0011FC  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  3153  0011FE  EF29  F009         	goto	l1793
  3154  001202                     l1789:
  3155                           
  3156                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  3157  001202  0100               	movlb	0	; force () banked
  3158  001204  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  3159  001206  0100               	movlb	0	; force () banked
  3160  001208  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  3161  00120A  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3162  00120C  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  3163  00120E  0100               	movlb	0	; force () banked
  3164  001210  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3165  001212  0100               	movlb	0	; force () banked
  3166  001214  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3167  001216  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3168  001218  0100               	movlb	0	; force () banked
  3169  00121A  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3170  00121C  0100               	movlb	0	; force () banked
  3171  00121E  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3172  001220  0E00               	movlw	0
  3173  001222  0100               	movlb	0	; force () banked
  3174  001224  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3175  001226  0100               	movlb	0	; force () banked
  3176  001228  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3177  00122A  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3178  00122E  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3179  001232  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3180  001236  BAF8               	btfsc	tblptru,5,c
  3181  001238  D003               	bra	u707
  3182  00123A  0008               	tblrd		*
  3183  00123C  50F5               	movf	tablat,w,c
  3184  00123E  D005               	bra	u700
  3185  001240                     u707:
  3186  001240  CFF6 FFE9          	movff	tblptrl,fsr0l
  3187  001244  CFF7 FFEA          	movff	tblptrh,fsr0h
  3188  001248  50EF               	movf	indf0,w,c
  3189  00124A                     u700:
  3190  00124A  EC34  F00B         	call	_lcd_ecritChar
  3191  00124E  0100               	movlb	0	; force () banked
  3192  001250  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  3193  001252                     l1793:
  3194                           
  3195                           ; BSR set to: 0
  3196  001252  0100               	movlb	0	; force () banked
  3197  001254  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  3198  001256  0100               	movlb	0	; force () banked
  3199  001258  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  3200  00125A  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3201  00125C  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  3202  00125E  0100               	movlb	0	; force () banked
  3203  001260  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3204  001262  0100               	movlb	0	; force () banked
  3205  001264  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3206  001266  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3207  001268  0100               	movlb	0	; force () banked
  3208  00126A  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3209  00126C  0100               	movlb	0	; force () banked
  3210  00126E  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3211  001270  0E00               	movlw	0
  3212  001272  0100               	movlb	0	; force () banked
  3213  001274  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3214  001276  0100               	movlb	0	; force () banked
  3215  001278  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3216  00127A  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3217  00127E  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3218  001282  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3219  001286  BAF8               	btfsc	tblptru,5,c
  3220  001288  D003               	bra	u717
  3221  00128A  0008               	tblrd		*
  3222  00128C  50F5               	movf	tablat,w,c
  3223  00128E  D005               	bra	u710
  3224  001290                     u717:
  3225  001290  CFF6 FFE9          	movff	tblptrl,fsr0l
  3226  001294  CFF7 FFEA          	movff	tblptrh,fsr0h
  3227  001298  50EF               	movf	indf0,w,c
  3228  00129A                     u710:
  3229  00129A  0900               	iorlw	0
  3230  00129C  A4D8               	btfss	status,2,c
  3231  00129E  EF53  F009         	goto	u721
  3232  0012A2  EF55  F009         	goto	u720
  3233  0012A6                     u721:
  3234  0012A6  EF01  F009         	goto	l1789
  3235  0012AA                     u720:
  3236  0012AA  0012               	return		;funcret
  3237  0012AC                     __end_of_lcd_putMessage:
  3238                           	opt callstack 0
  3239                           
  3240 ;; *************** function ___wmul *****************
  3241 ;; Defined at:
  3242 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3245 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  product         2    4[BANK0 ] unsigned int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2    0[BANK0 ] unsigned int 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, prodl, prodh
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3257 ;;      Params:         0       4       0       0       0       0       0
  3258 ;;      Locals:         0       2       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0
  3260 ;;      Totals:         0       6       0       0       0       0       0
  3261 ;;Total ram usage:        6 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_initTabVue
  3267 ;;		_rempliMines
  3268 ;;		_metToucheCombien
  3269 ;;		_calculToucheCombien
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text18
  3274  00183E                     __ptext18:
  3275                           	opt callstack 0
  3276  00183E                     ___wmul:
  3277                           	opt callstack 29
  3278  00183E  0100               	movlb	0	; () banked
  3279  001840  51B4               	movf	___wmul@multiplier& (0+255),w,b
  3280  001842  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  3281  001844  CFF3 F0B8          	movff	prodl,___wmul@product
  3282  001848  CFF4 F0B9          	movff	prodh,___wmul@product+1
  3283  00184C  51B4               	movf	___wmul@multiplier& (0+255),w,b
  3284  00184E  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3285  001850  50F3               	movf	243,w,c
  3286  001852  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  3287  001854  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3288  001856  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  3289  001858  50F3               	movf	243,w,c
  3290  00185A  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  3291  00185C                     
  3292                           ; BSR set to: 0
  3293  00185C  C0B8  F0B4         	movff	___wmul@product,?___wmul
  3294  001860  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  3295  001864                     
  3296                           ; BSR set to: 0
  3297  001864  0012               	return		;funcret
  3298  001866                     __end_of___wmul:
  3299                           	opt callstack 0
  3300                           
  3301 ;; *************** function _deplace *****************
  3302 ;; Defined at:
  3303 ;;		line 236 in file "main.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3306 ;;		 -> main@posX(2), 
  3307 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3308 ;;		 -> main@posY(2), 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         0       4       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0
  3322 ;;      Temps:          0       1       0       0       0       0       0
  3323 ;;      Totals:         0       5       0       0       0       0       0
  3324 ;;Total ram usage:        5 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    4
  3327 ;; This function calls:
  3328 ;;		_getAnalog
  3329 ;;		_lcd_gotoXY
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text19
  3336  000C42                     __ptext19:
  3337                           	opt callstack 0
  3338  000C42                     _deplace:
  3339                           	opt callstack 26
  3340  000C42                     
  3341                           ;main.c: 238: if(getAnalog(7) > 220)
  3342  000C42  0E07               	movlw	7
  3343  000C44  ECF5  F00B         	call	_getAnalog
  3344  000C48  0100               	movlb	0	; force () banked
  3345  000C4A  6FBD               	movwf	??_deplace& (0+255),b
  3346  000C4C  0EDC               	movlw	220
  3347  000C4E  65BD               	cpfsgt	??_deplace& (0+255),b
  3348  000C50  EF2C  F006         	goto	u1131
  3349  000C54  EF2E  F006         	goto	u1130
  3350  000C58                     u1131:
  3351  000C58  EF5B  F006         	goto	l2085
  3352  000C5C                     u1130:
  3353  000C5C                     
  3354                           ; BSR set to: 0
  3355                           ;main.c: 239: {;main.c: 240: (*x) = (*x) +1;
  3356  000C5C  C0B9  FFD9         	movff	deplace@x,fsr2l
  3357  000C60  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3358  000C64  50DF               	movf	indf2,w,c
  3359  000C66  0100               	movlb	0	; force () banked
  3360  000C68  6FBD               	movwf	??_deplace& (0+255),b
  3361  000C6A  29BD               	incf	??_deplace& (0+255),w,b
  3362  000C6C  C0B9  FFD9         	movff	deplace@x,fsr2l
  3363  000C70  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3364  000C74  6EDF               	movwf	indf2,c
  3365  000C76                     
  3366                           ; BSR set to: 0
  3367                           ;main.c: 241: lcd_gotoXY(((*x)),(*y));
  3368  000C76  C0BB  FFD9         	movff	deplace@y,fsr2l
  3369  000C7A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3370  000C7E  50DF               	movf	indf2,w,c
  3371  000C80  0100               	movlb	0	; force () banked
  3372  000C82  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3373  000C84  C0B9  FFD9         	movff	deplace@x,fsr2l
  3374  000C88  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3375  000C8C  50DF               	movf	indf2,w,c
  3376  000C8E  EC00  F00A         	call	_lcd_gotoXY
  3377  000C92                     
  3378                           ;main.c: 243: if((*x) > 20)
  3379  000C92  C0B9  FFD9         	movff	deplace@x,fsr2l
  3380  000C96  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3381  000C9A  0E14               	movlw	20
  3382  000C9C  64DF               	cpfsgt	indf2,c
  3383  000C9E  EF53  F006         	goto	u1141
  3384  000CA2  EF55  F006         	goto	u1140
  3385  000CA6                     u1141:
  3386  000CA6  EF5B  F006         	goto	l2085
  3387  000CAA                     u1140:
  3388  000CAA                     
  3389                           ;main.c: 244: {;main.c: 245: (*x)=1;
  3390  000CAA  C0B9  FFD9         	movff	deplace@x,fsr2l
  3391  000CAE  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3392  000CB2  0E01               	movlw	1
  3393  000CB4  6EDF               	movwf	indf2,c
  3394  000CB6                     l2085:
  3395                           
  3396                           ;main.c: 246: };main.c: 247: };main.c: 248: if(getAnalog(7) < 30)
  3397  000CB6  0E07               	movlw	7
  3398  000CB8  ECF5  F00B         	call	_getAnalog
  3399  000CBC  0100               	movlb	0	; force () banked
  3400  000CBE  6FBD               	movwf	??_deplace& (0+255),b
  3401  000CC0  0E1E               	movlw	30
  3402  000CC2  61BD               	cpfslt	??_deplace& (0+255),b
  3403  000CC4  EF66  F006         	goto	u1151
  3404  000CC8  EF68  F006         	goto	u1150
  3405  000CCC                     u1151:
  3406  000CCC  EF95  F006         	goto	l2095
  3407  000CD0                     u1150:
  3408  000CD0                     
  3409                           ; BSR set to: 0
  3410                           ;main.c: 249: {;main.c: 250: (*x) = (*x) -1;
  3411  000CD0  C0B9  FFD9         	movff	deplace@x,fsr2l
  3412  000CD4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3413  000CD8  50DF               	movf	indf2,w,c
  3414  000CDA  0100               	movlb	0	; force () banked
  3415  000CDC  6FBD               	movwf	??_deplace& (0+255),b
  3416  000CDE  05BD               	decf	??_deplace& (0+255),w,b
  3417  000CE0  C0B9  FFD9         	movff	deplace@x,fsr2l
  3418  000CE4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3419  000CE8  6EDF               	movwf	indf2,c
  3420  000CEA                     
  3421                           ; BSR set to: 0
  3422                           ;main.c: 251: lcd_gotoXY(((*x)),(*y));
  3423  000CEA  C0BB  FFD9         	movff	deplace@y,fsr2l
  3424  000CEE  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3425  000CF2  50DF               	movf	indf2,w,c
  3426  000CF4  0100               	movlb	0	; force () banked
  3427  000CF6  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3428  000CF8  C0B9  FFD9         	movff	deplace@x,fsr2l
  3429  000CFC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3430  000D00  50DF               	movf	indf2,w,c
  3431  000D02  EC00  F00A         	call	_lcd_gotoXY
  3432  000D06                     
  3433                           ;main.c: 253: if((*x) < 1)
  3434  000D06  C0B9  FFD9         	movff	deplace@x,fsr2l
  3435  000D0A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3436  000D0E  50DF               	movf	indf2,w,c
  3437  000D10  A4D8               	btfss	status,2,c
  3438  000D12  EF8D  F006         	goto	u1161
  3439  000D16  EF8F  F006         	goto	u1160
  3440  000D1A                     u1161:
  3441  000D1A  EF95  F006         	goto	l2095
  3442  000D1E                     u1160:
  3443  000D1E                     
  3444                           ;main.c: 254: {;main.c: 255: (*x)=20;
  3445  000D1E  C0B9  FFD9         	movff	deplace@x,fsr2l
  3446  000D22  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3447  000D26  0E14               	movlw	20
  3448  000D28  6EDF               	movwf	indf2,c
  3449  000D2A                     l2095:
  3450                           
  3451                           ;main.c: 256: };main.c: 257: };main.c: 258: if(getAnalog(6) > 220)
  3452  000D2A  0E06               	movlw	6
  3453  000D2C  ECF5  F00B         	call	_getAnalog
  3454  000D30  0100               	movlb	0	; force () banked
  3455  000D32  6FBD               	movwf	??_deplace& (0+255),b
  3456  000D34  0EDC               	movlw	220
  3457  000D36  65BD               	cpfsgt	??_deplace& (0+255),b
  3458  000D38  EFA0  F006         	goto	u1171
  3459  000D3C  EFA2  F006         	goto	u1170
  3460  000D40                     u1171:
  3461  000D40  EFCF  F006         	goto	l2105
  3462  000D44                     u1170:
  3463  000D44                     
  3464                           ; BSR set to: 0
  3465                           ;main.c: 259: {;main.c: 260: (*y) = (*y) +1;
  3466  000D44  C0BB  FFD9         	movff	deplace@y,fsr2l
  3467  000D48  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3468  000D4C  50DF               	movf	indf2,w,c
  3469  000D4E  0100               	movlb	0	; force () banked
  3470  000D50  6FBD               	movwf	??_deplace& (0+255),b
  3471  000D52  29BD               	incf	??_deplace& (0+255),w,b
  3472  000D54  C0BB  FFD9         	movff	deplace@y,fsr2l
  3473  000D58  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3474  000D5C  6EDF               	movwf	indf2,c
  3475  000D5E                     
  3476                           ; BSR set to: 0
  3477                           ;main.c: 261: lcd_gotoXY(((*x)),(*y));
  3478  000D5E  C0BB  FFD9         	movff	deplace@y,fsr2l
  3479  000D62  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3480  000D66  50DF               	movf	indf2,w,c
  3481  000D68  0100               	movlb	0	; force () banked
  3482  000D6A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3483  000D6C  C0B9  FFD9         	movff	deplace@x,fsr2l
  3484  000D70  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3485  000D74  50DF               	movf	indf2,w,c
  3486  000D76  EC00  F00A         	call	_lcd_gotoXY
  3487  000D7A                     
  3488                           ;main.c: 263: if(*y > 4)
  3489  000D7A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3490  000D7E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3491  000D82  0E04               	movlw	4
  3492  000D84  64DF               	cpfsgt	indf2,c
  3493  000D86  EFC7  F006         	goto	u1181
  3494  000D8A  EFC9  F006         	goto	u1180
  3495  000D8E                     u1181:
  3496  000D8E  EFCF  F006         	goto	l2105
  3497  000D92                     u1180:
  3498  000D92                     
  3499                           ;main.c: 264: {;main.c: 265: *y=1;
  3500  000D92  C0BB  FFD9         	movff	deplace@y,fsr2l
  3501  000D96  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3502  000D9A  0E01               	movlw	1
  3503  000D9C  6EDF               	movwf	indf2,c
  3504  000D9E                     l2105:
  3505                           
  3506                           ;main.c: 266: };main.c: 268: };main.c: 269: if(getAnalog(6) < 30)
  3507  000D9E  0E06               	movlw	6
  3508  000DA0  ECF5  F00B         	call	_getAnalog
  3509  000DA4  0100               	movlb	0	; force () banked
  3510  000DA6  6FBD               	movwf	??_deplace& (0+255),b
  3511  000DA8  0E1E               	movlw	30
  3512  000DAA  61BD               	cpfslt	??_deplace& (0+255),b
  3513  000DAC  EFDA  F006         	goto	u1191
  3514  000DB0  EFDC  F006         	goto	u1190
  3515  000DB4                     u1191:
  3516  000DB4  EF09  F007         	goto	l131
  3517  000DB8                     u1190:
  3518  000DB8                     
  3519                           ; BSR set to: 0
  3520                           ;main.c: 270: {;main.c: 271: (*y) = (*y) -1;
  3521  000DB8  C0BB  FFD9         	movff	deplace@y,fsr2l
  3522  000DBC  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3523  000DC0  50DF               	movf	indf2,w,c
  3524  000DC2  0100               	movlb	0	; force () banked
  3525  000DC4  6FBD               	movwf	??_deplace& (0+255),b
  3526  000DC6  05BD               	decf	??_deplace& (0+255),w,b
  3527  000DC8  C0BB  FFD9         	movff	deplace@y,fsr2l
  3528  000DCC  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3529  000DD0  6EDF               	movwf	indf2,c
  3530  000DD2                     
  3531                           ; BSR set to: 0
  3532                           ;main.c: 272: lcd_gotoXY(((*x)),(*y));
  3533  000DD2  C0BB  FFD9         	movff	deplace@y,fsr2l
  3534  000DD6  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3535  000DDA  50DF               	movf	indf2,w,c
  3536  000DDC  0100               	movlb	0	; force () banked
  3537  000DDE  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3538  000DE0  C0B9  FFD9         	movff	deplace@x,fsr2l
  3539  000DE4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3540  000DE8  50DF               	movf	indf2,w,c
  3541  000DEA  EC00  F00A         	call	_lcd_gotoXY
  3542  000DEE                     
  3543                           ;main.c: 274: if(*y < 1)
  3544  000DEE  C0BB  FFD9         	movff	deplace@y,fsr2l
  3545  000DF2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3546  000DF6  50DF               	movf	indf2,w,c
  3547  000DF8  A4D8               	btfss	status,2,c
  3548  000DFA  EF01  F007         	goto	u1201
  3549  000DFE  EF03  F007         	goto	u1200
  3550  000E02                     u1201:
  3551  000E02  EF09  F007         	goto	l131
  3552  000E06                     u1200:
  3553  000E06                     
  3554                           ;main.c: 275: {;main.c: 276: *y=4;
  3555  000E06  C0BB  FFD9         	movff	deplace@y,fsr2l
  3556  000E0A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3557  000E0E  0E04               	movlw	4
  3558  000E10  6EDF               	movwf	indf2,c
  3559  000E12                     l131:
  3560  000E12  0012               	return		;funcret
  3561  000E14                     __end_of_deplace:
  3562                           	opt callstack 0
  3563                           
  3564 ;; *************** function _getAnalog *****************
  3565 ;; Defined at:
  3566 ;;		line 311 in file "main.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  canal           1    wreg     unsigned char 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  canal           1    1[BANK0 ] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      unsigned char 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3580 ;;      Params:         0       0       0       0       0       0       0
  3581 ;;      Locals:         0       1       0       0       0       0       0
  3582 ;;      Temps:          0       1       0       0       0       0       0
  3583 ;;      Totals:         0       2       0       0       0       0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_deplace
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text20
  3594  0017EA                     __ptext20:
  3595                           	opt callstack 0
  3596  0017EA                     _getAnalog:
  3597                           	opt callstack 29
  3598                           
  3599                           ;incstack = 0
  3600                           ;getAnalog@canal stored from wreg
  3601  0017EA  0100               	movlb	0	; force () banked
  3602  0017EC  6FB5               	movwf	getAnalog@canal& (0+255),b
  3603  0017EE                     
  3604                           ;main.c: 313: ADCON0bits.CHS = canal;
  3605  0017EE  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  3606  0017F2  0100               	movlb	0	; force () banked
  3607  0017F4  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3608  0017F6  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3609  0017F8  50C2               	movf	194,w,c	;volatile
  3610  0017FA  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3611  0017FC  0BC3               	andlw	-61
  3612  0017FE  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3613  001800  6EC2               	movwf	194,c	;volatile
  3614  001802                     
  3615                           ;main.c: 315: ADCON0bits.GO_DONE = 1;
  3616  001802  82C2               	bsf	194,1,c	;volatile
  3617  001804                     l140:
  3618  001804  B2C2               	btfsc	194,1,c	;volatile
  3619  001806  EF07  F00C         	goto	u211
  3620  00180A  EF09  F00C         	goto	u210
  3621  00180E                     u211:
  3622  00180E  EF02  F00C         	goto	l140
  3623  001812                     u210:
  3624  001812                     
  3625                           ;main.c: 318: return ADRESH;
  3626  001812  50C4               	movf	196,w,c	;volatile
  3627  001814  0012               	return		;funcret
  3628  001816                     __end_of_getAnalog:
  3629                           	opt callstack 0
  3630                           
  3631 ;; *************** function _demine *****************
  3632 ;; Defined at:
  3633 ;;		line 289 in file "main.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  x               1    wreg     unsigned char 
  3636 ;;  y               1    5[BANK0 ] unsigned char 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  x               1    8[BANK0 ] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      unsigned char 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3648 ;;      Params:         0       1       0       0       0       0       0
  3649 ;;      Locals:         0       1       0       0       0       0       0
  3650 ;;      Temps:          0       2       0       0       0       0       0
  3651 ;;      Totals:         0       4       0       0       0       0       0
  3652 ;;Total ram usage:        4 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    4
  3655 ;; This function calls:
  3656 ;;		_lcd_ecritChar
  3657 ;;		_lcd_gotoXY
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text21
  3664  0016BC                     __ptext21:
  3665                           	opt callstack 0
  3666  0016BC                     _demine:
  3667                           	opt callstack 26
  3668                           
  3669                           ;incstack = 0
  3670                           ;demine@x stored from wreg
  3671  0016BC  0100               	movlb	0	; force () banked
  3672  0016BE  6FBC               	movwf	demine@x& (0+255),b
  3673  0016C0                     
  3674                           ;main.c: 291: lcd_gotoXY(x,y);
  3675  0016C0  C0B9  F0B7         	movff	demine@y,lcd_gotoXY@y
  3676  0016C4  0100               	movlb	0	; force () banked
  3677  0016C6  51BC               	movf	demine@x& (0+255),w,b
  3678  0016C8  EC00  F00A         	call	_lcd_gotoXY
  3679  0016CC                     
  3680                           ;main.c: 292: lcd_ecritChar(m_tabMines[y][x]);
  3681  0016CC  0100               	movlb	0	; force () banked
  3682  0016CE  51B9               	movf	demine@y& (0+255),w,b
  3683  0016D0  0D15               	mullw	21
  3684  0016D2  0E60               	movlw	low _m_tabMines
  3685  0016D4  0100               	movlb	0	; force () banked
  3686  0016D6  6FBA               	movwf	??_demine& (0+255),b
  3687  0016D8  0E00               	movlw	high _m_tabMines
  3688  0016DA  6FBB               	movwf	(??_demine+1)& (0+255),b
  3689  0016DC  50F3               	movf	243,w,c
  3690  0016DE  27BA               	addwf	??_demine& (0+255),f,b
  3691  0016E0  50F4               	movf	244,w,c
  3692  0016E2  23BB               	addwfc	(??_demine+1)& (0+255),f,b
  3693  0016E4  0100               	movlb	0	; force () banked
  3694  0016E6  51BC               	movf	demine@x& (0+255),w,b
  3695  0016E8  0100               	movlb	0	; force () banked
  3696  0016EA  25BA               	addwf	??_demine& (0+255),w,b
  3697  0016EC  6ED9               	movwf	fsr2l,c
  3698  0016EE  0100               	movlb	0	; force () banked
  3699  0016F0  0E00               	movlw	0
  3700  0016F2  0100               	movlb	0	; force () banked
  3701  0016F4  21BB               	addwfc	(??_demine+1)& (0+255),w,b
  3702  0016F6  6EDA               	movwf	fsr2h,c
  3703  0016F8  50DF               	movf	indf2,w,c
  3704  0016FA  EC34  F00B         	call	_lcd_ecritChar
  3705  0016FE  0012               	return		;funcret
  3706  001700                     __end_of_demine:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _lcd_gotoXY *****************
  3710 ;; Defined at:
  3711 ;;		line 314 in file "Lcd4Lignes.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  x               1    wreg     unsigned char 
  3714 ;;  y               1    3[BANK0 ] unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  x               1    4[BANK0 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3726 ;;      Params:         0       1       0       0       0       0       0
  3727 ;;      Locals:         0       1       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0
  3729 ;;      Totals:         0       2       0       0       0       0       0
  3730 ;;Total ram usage:        2 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    3
  3733 ;; This function calls:
  3734 ;;		_lcd_wrCom
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;;		_initTabVue
  3738 ;;		_deplace
  3739 ;;		_demine
  3740 ;;		_lcd_effaceLigne
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text22
  3745  001400                     __ptext22:
  3746                           	opt callstack 0
  3747  001400                     _lcd_gotoXY:
  3748                           	opt callstack 27
  3749                           
  3750                           ;incstack = 0
  3751                           ;lcd_gotoXY@x stored from wreg
  3752  001400  0100               	movlb	0	; force () banked
  3753  001402  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  3754  001404                     
  3755                           ;Lcd4Lignes.c: 316: switch(y)
  3756  001404  EF24  F00A         	goto	l1785
  3757  001408                     l1775:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3761  001408  0100               	movlb	0	; force () banked
  3762  00140A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3763  00140C  0F7F               	addlw	127
  3764  00140E  0980               	iorlw	128
  3765  001410  EC6F  F00A         	call	_lcd_wrCom
  3766                           
  3767                           ;Lcd4Lignes.c: 320: break;
  3768  001414  EF38  F00A         	goto	l256
  3769  001418                     l1777:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3773  001418  0100               	movlb	0	; force () banked
  3774  00141A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3775  00141C  0FBF               	addlw	191
  3776  00141E  0980               	iorlw	128
  3777  001420  EC6F  F00A         	call	_lcd_wrCom
  3778                           
  3779                           ;Lcd4Lignes.c: 323: break;
  3780  001424  EF38  F00A         	goto	l256
  3781  001428                     l1779:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3785  001428  0100               	movlb	0	; force () banked
  3786  00142A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3787  00142C  0F93               	addlw	147
  3788  00142E  0980               	iorlw	128
  3789  001430  EC6F  F00A         	call	_lcd_wrCom
  3790                           
  3791                           ;Lcd4Lignes.c: 326: break;
  3792  001434  EF38  F00A         	goto	l256
  3793  001438                     l1781:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3797  001438  0100               	movlb	0	; force () banked
  3798  00143A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3799  00143C  0FD3               	addlw	211
  3800  00143E  0980               	iorlw	128
  3801  001440  EC6F  F00A         	call	_lcd_wrCom
  3802                           
  3803                           ;Lcd4Lignes.c: 329: break;
  3804  001444  EF38  F00A         	goto	l256
  3805  001448                     l1785:
  3806  001448  0100               	movlb	0	; force () banked
  3807  00144A  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  3808                           
  3809                           ; Switch size 1, requested type "simple"
  3810                           ; Number of cases is 4, Range of values is 1 to 4
  3811                           ; switch strategies available:
  3812                           ; Name         Instructions Cycles
  3813                           ; simple_byte           13     7 (average)
  3814                           ;	Chosen strategy is simple_byte
  3815  00144C  0A01               	xorlw	1	; case 1
  3816  00144E  B4D8               	btfsc	status,2,c
  3817  001450  EF04  F00A         	goto	l1775
  3818  001454  0A03               	xorlw	3	; case 2
  3819  001456  B4D8               	btfsc	status,2,c
  3820  001458  EF0C  F00A         	goto	l1777
  3821  00145C  0A01               	xorlw	1	; case 3
  3822  00145E  B4D8               	btfsc	status,2,c
  3823  001460  EF14  F00A         	goto	l1779
  3824  001464  0A07               	xorlw	7	; case 4
  3825  001466  B4D8               	btfsc	status,2,c
  3826  001468  EF1C  F00A         	goto	l1781
  3827  00146C  EF38  F00A         	goto	l256
  3828  001470                     l256:
  3829  001470  0012               	return		;funcret
  3830  001472                     __end_of_lcd_gotoXY:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _lcd_ecritChar *****************
  3834 ;; Defined at:
  3835 ;;		line 359 in file "Lcd4Lignes.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  car             1    wreg     unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  car             1    3[BANK0 ] unsigned char 
  3840 ;;  posRam          1    4[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3850 ;;      Params:         0       0       0       0       0       0       0
  3851 ;;      Locals:         0       2       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0
  3853 ;;      Totals:         0       2       0       0       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		_lcd_wrCom
  3859 ;;		_lcd_wrData
  3860 ;; This function is called by:
  3861 ;;		_demine
  3862 ;;		_lcd_putMessage
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text23
  3867  001668                     __ptext23:
  3868                           	opt callstack 0
  3869  001668                     _lcd_ecritChar:
  3870                           	opt callstack 26
  3871                           
  3872                           ;incstack = 0
  3873                           ;lcd_ecritChar@car stored from wreg
  3874  001668  0100               	movlb	0	; force () banked
  3875  00166A  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  3876  00166C                     
  3877                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3878  00166C  0100               	movlb	0	; force () banked
  3879  00166E  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  3880  001670  ECDB  F00B         	call	_lcd_wrData
  3881  001674  0100               	movlb	0	; force () banked
  3882  001676  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  3883                           
  3884                           ;Lcd4Lignes.c: 364: switch(posRam)
  3885  001678  EF4D  F00B         	goto	l1753
  3886  00167C                     l1745:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3890  00167C  0EC0               	movlw	192
  3891  00167E  EC6F  F00A         	call	_lcd_wrCom
  3892                           
  3893                           ;Lcd4Lignes.c: 368: break;
  3894  001682  EF5D  F00B         	goto	l267
  3895  001686                     l1747:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3899  001686  0E94               	movlw	148
  3900  001688  EC6F  F00A         	call	_lcd_wrCom
  3901                           
  3902                           ;Lcd4Lignes.c: 371: break;
  3903  00168C  EF5D  F00B         	goto	l267
  3904  001690                     l1749:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3908  001690  0ED4               	movlw	212
  3909  001692  EC6F  F00A         	call	_lcd_wrCom
  3910                           
  3911                           ;Lcd4Lignes.c: 374: break;
  3912  001696  EF5D  F00B         	goto	l267
  3913  00169A                     l1753:
  3914                           
  3915                           ; BSR set to: 0
  3916  00169A  0100               	movlb	0	; force () banked
  3917  00169C  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3918                           
  3919                           ; Switch size 1, requested type "simple"
  3920                           ; Number of cases is 3, Range of values is 148 to 212
  3921                           ; switch strategies available:
  3922                           ; Name         Instructions Cycles
  3923                           ; simple_byte           10     6 (average)
  3924                           ;	Chosen strategy is simple_byte
  3925  00169E  0A94               	xorlw	148	; case 148
  3926  0016A0  B4D8               	btfsc	status,2,c
  3927  0016A2  EF3E  F00B         	goto	l1745
  3928  0016A6  0A54               	xorlw	84	; case 192
  3929  0016A8  B4D8               	btfsc	status,2,c
  3930  0016AA  EF48  F00B         	goto	l1749
  3931  0016AE  0A14               	xorlw	20	; case 212
  3932  0016B0  B4D8               	btfsc	status,2,c
  3933  0016B2  EF43  F00B         	goto	l1747
  3934  0016B6  EF5D  F00B         	goto	l267
  3935  0016BA                     l267:
  3936  0016BA  0012               	return		;funcret
  3937  0016BC                     __end_of_lcd_ecritChar:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _lcd_wrData *****************
  3941 ;; Defined at:
  3942 ;;		line 188 in file "Lcd4Lignes.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  caractere       1    wreg     unsigned char 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  caractere       1    2[BANK0 ] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      unsigned char 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3956 ;;      Params:         0       0       0       0       0       0       0
  3957 ;;      Locals:         0       1       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0
  3959 ;;      Totals:         0       1       0       0       0       0       0
  3960 ;;Total ram usage:        1 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    2
  3963 ;; This function calls:
  3964 ;;		_lcd_busy
  3965 ;;		_lcd_ecrireDonnees
  3966 ;;		_lcd_strobeEnableBit
  3967 ;; This function is called by:
  3968 ;;		_lcd_ecritChar
  3969 ;;		_lcd_initCGRam
  3970 ;;		_lcd_effaceChar
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text24
  3975  0017B6                     __ptext24:
  3976                           	opt callstack 0
  3977  0017B6                     _lcd_wrData:
  3978                           	opt callstack 26
  3979                           
  3980                           ;incstack = 0
  3981                           ;lcd_wrData@caractere stored from wreg
  3982  0017B6  0100               	movlb	0	; force () banked
  3983  0017B8  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  3984  0017BA                     
  3985                           ;Lcd4Lignes.c: 190: lcd_busy();
  3986  0017BA  EC80  F00B         	call	_lcd_busy	;wreg free
  3987  0017BE                     
  3988                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3989  0017BE  0E00               	movlw	0
  3990  0017C0  6E95               	movwf	149,c	;volatile
  3991  0017C2                     
  3992                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3993  0017C2  8080               	bsf	128,0,c	;volatile
  3994  0017C4                     
  3995                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3996  0017C4  9280               	bcf	128,1,c	;volatile
  3997  0017C6                     
  3998                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3999  0017C6  0100               	movlb	0	; force () banked
  4000  0017C8  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  4001  0017CA  0B0F               	andlw	15
  4002  0017CC  EC33  F00C         	call	_lcd_ecrireDonnees
  4003  0017D0                     
  4004                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4005  0017D0  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4006  0017D4                     
  4007                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4008  0017D4  0100               	movlb	0	; force () banked
  4009  0017D6  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  4010  0017D8  EC33  F00C         	call	_lcd_ecrireDonnees
  4011  0017DC                     
  4012                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4013  0017DC  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4014  0017E0                     
  4015                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4016  0017E0  0E0F               	movlw	15
  4017  0017E2  6E95               	movwf	149,c	;volatile
  4018  0017E4                     
  4019                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4020                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4021  0017E4  EC80  F00B         	call	_lcd_busy	;wreg free
  4022  0017E8  0012               	return		;funcret
  4023  0017EA                     __end_of_lcd_wrData:
  4024                           	opt callstack 0
  4025                           
  4026 ;; *************** function _lcd_wrCom *****************
  4027 ;; Defined at:
  4028 ;;		line 156 in file "Lcd4Lignes.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  commande        1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  commande        1    2[BANK0 ] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         0       0       0       0       0       0       0
  4043 ;;      Locals:         0       1       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0
  4045 ;;      Totals:         0       1       0       0       0       0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    2
  4049 ;; This function calls:
  4050 ;;		_lcd_busy
  4051 ;;		_lcd_ecrireDonnees
  4052 ;;		_lcd_strobeEnableBit
  4053 ;; This function is called by:
  4054 ;;		_lcd_init
  4055 ;;		_lcd_effaceAffichage
  4056 ;;		_lcd_curseurHome
  4057 ;;		_lcd_gotoXY
  4058 ;;		_lcd_ecritChar
  4059 ;;		_lcd_cacheCurseur
  4060 ;;		_lcd_montreCurseur
  4061 ;;		_lcd_initCGRam
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text25
  4066  0014DE                     __ptext25:
  4067                           	opt callstack 0
  4068  0014DE                     _lcd_wrCom:
  4069                           	opt callstack 26
  4070                           
  4071                           ;incstack = 0
  4072                           ;lcd_wrCom@commande stored from wreg
  4073  0014DE  0100               	movlb	0	; force () banked
  4074  0014E0  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4075  0014E2                     
  4076                           ;Lcd4Lignes.c: 158: lcd_busy();
  4077  0014E2  EC80  F00B         	call	_lcd_busy	;wreg free
  4078  0014E6                     
  4079                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4080  0014E6  0E00               	movlw	0
  4081  0014E8  6E95               	movwf	149,c	;volatile
  4082  0014EA                     
  4083                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4084  0014EA  9080               	bcf	128,0,c	;volatile
  4085  0014EC                     
  4086                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4087  0014EC  9280               	bcf	128,1,c	;volatile
  4088  0014EE                     
  4089                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4090  0014EE  0100               	movlb	0	; force () banked
  4091  0014F0  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4092  0014F2  0B0F               	andlw	15
  4093  0014F4  EC33  F00C         	call	_lcd_ecrireDonnees
  4094  0014F8                     
  4095                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4096  0014F8  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4097  0014FC                     
  4098                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4099  0014FC  0100               	movlb	0	; force () banked
  4100  0014FE  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4101  001500  EC33  F00C         	call	_lcd_ecrireDonnees
  4102  001504                     
  4103                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4104  001504  EC5C  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4105  001508                     
  4106                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4107  001508  0E03               	movlw	3
  4108  00150A                     u1307:
  4109  00150A  2EE8               	decfsz	wreg,f,c
  4110  00150C  D7FE               	bra	u1307
  4111  00150E  F000               	nop	
  4112  001510                     
  4113                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4114  001510  0100               	movlb	0	; force () banked
  4115  001512  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4116  001514  B4D8               	btfsc	status,2,c
  4117  001516  EF8F  F00A         	goto	u661
  4118  00151A  EF91  F00A         	goto	u660
  4119  00151E                     u661:
  4120  00151E  EF9B  F00A         	goto	l1705
  4121  001522                     u660:
  4122  001522                     
  4123                           ; BSR set to: 0
  4124  001522  0E02               	movlw	2
  4125  001524  0100               	movlb	0	; force () banked
  4126  001526  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4127  001528  A4D8               	btfss	status,2,c
  4128  00152A  EF99  F00A         	goto	u671
  4129  00152E  EF9B  F00A         	goto	u670
  4130  001532                     u671:
  4131  001532  EFA0  F00A         	goto	l1707
  4132  001536                     u670:
  4133  001536                     l1705:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4137  001536  0EA6               	movlw	166
  4138  001538                     u1317:
  4139  001538  2EE8               	decfsz	wreg,f,c
  4140  00153A  D7FE               	bra	u1317
  4141  00153C  F000 F000          	nop2	
  4142  001540                     l1707:
  4143                           
  4144                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4145  001540  0E0F               	movlw	15
  4146  001542  6E95               	movwf	149,c	;volatile
  4147  001544                     
  4148                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4149  001544  EC80  F00B         	call	_lcd_busy	;wreg free
  4150  001548  0012               	return		;funcret
  4151  00154A                     __end_of_lcd_wrCom:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _lcd_strobeEnableBit *****************
  4155 ;; Defined at:
  4156 ;;		line 431 in file "Lcd4Lignes.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		None
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4170 ;;      Params:         0       0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_lcd_wrCom
  4180 ;;		_lcd_wrData
  4181 ;;		_lcd_resetSequence
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text26
  4186  0018B8                     __ptext26:
  4187                           	opt callstack 0
  4188  0018B8                     _lcd_strobeEnableBit:
  4189                           	opt callstack 27
  4190  0018B8                     
  4191                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4192  0018B8  8480               	bsf	128,2,c	;volatile
  4193                           
  4194                           ;Lcd4Lignes.c: 434: __nop();
  4195  0018BA  F000               	nop	
  4196                           
  4197                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4198  0018BC  9480               	bcf	128,2,c	;volatile
  4199  0018BE  0012               	return		;funcret
  4200  0018C0                     __end_of_lcd_strobeEnableBit:
  4201                           	opt callstack 0
  4202                           
  4203 ;; *************** function _lcd_ecrireDonnees *****************
  4204 ;; Defined at:
  4205 ;;		line 107 in file "Lcd4Lignes.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  donnee          1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  donnee          1    1[BANK0 ] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4219 ;;      Params:         0       0       0       0       0       0       0
  4220 ;;      Locals:         0       1       0       0       0       0       0
  4221 ;;      Temps:          0       1       0       0       0       0       0
  4222 ;;      Totals:         0       2       0       0       0       0       0
  4223 ;;Total ram usage:        2 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_lcd_wrCom
  4229 ;;		_lcd_wrData
  4230 ;;		_lcd_resetSequence
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text27
  4235  001866                     __ptext27:
  4236                           	opt callstack 0
  4237  001866                     _lcd_ecrireDonnees:
  4238                           	opt callstack 27
  4239                           
  4240                           ;incstack = 0
  4241                           ;lcd_ecrireDonnees@donnee stored from wreg
  4242  001866  0100               	movlb	0	; force () banked
  4243  001868  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4244  00186A                     
  4245                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4246  00186A  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4247  00186E  0EF0               	movlw	240
  4248  001870  0100               	movlb	0	; force () banked
  4249  001872  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4250  001874  0100               	movlb	0	; force () banked
  4251  001876  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4252  001878  0B0F               	andlw	15
  4253  00187A  0100               	movlb	0	; force () banked
  4254  00187C  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4255  00187E  6E83               	movwf	131,c	;volatile
  4256  001880                     
  4257                           ; BSR set to: 0
  4258  001880  0012               	return		;funcret
  4259  001882                     __end_of_lcd_ecrireDonnees:
  4260                           	opt callstack 0
  4261                           
  4262 ;; *************** function _lcd_busy *****************
  4263 ;; Defined at:
  4264 ;;		line 124 in file "Lcd4Lignes.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  adresse         1    1[BANK0 ] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      unsigned char 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4278 ;;      Params:         0       0       0       0       0       0       0
  4279 ;;      Locals:         0       1       0       0       0       0       0
  4280 ;;      Temps:          0       1       0       0       0       0       0
  4281 ;;      Totals:         0       2       0       0       0       0       0
  4282 ;;Total ram usage:        2 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    1
  4285 ;; This function calls:
  4286 ;;		_lcd_lireDonnees
  4287 ;; This function is called by:
  4288 ;;		_lcd_wrCom
  4289 ;;		_lcd_wrData
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text28
  4294  001700                     __ptext28:
  4295                           	opt callstack 0
  4296  001700                     _lcd_busy:
  4297                           	opt callstack 26
  4298  001700                     
  4299                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4300  001700  9080               	bcf	128,0,c	;volatile
  4301                           
  4302                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4303  001702  8280               	bsf	128,1,c	;volatile
  4304  001704                     l218:
  4305                           
  4306                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4307  001704  8480               	bsf	128,2,c	;volatile
  4308                           
  4309                           ;Lcd4Lignes.c: 134: __nop();
  4310  001706  F000               	nop	
  4311  001708                     
  4312                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4313  001708  EC60  F00C         	call	_lcd_lireDonnees	;wreg free
  4314  00170C  0100               	movlb	0	; force () banked
  4315  00170E  6FB4               	movwf	??_lcd_busy& (0+255),b
  4316  001710  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4317  001712  0BF0               	andlw	240
  4318  001714  0100               	movlb	0	; force () banked
  4319  001716  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4320  001718                     
  4321                           ; BSR set to: 0
  4322                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4323  001718  9480               	bcf	128,2,c	;volatile
  4324  00171A                     
  4325                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4326  00171A  8480               	bsf	128,2,c	;volatile
  4327  00171C                     
  4328                           ;Lcd4Lignes.c: 139: __nop();
  4329  00171C  F000               	nop	
  4330                           
  4331                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4332  00171E  EC60  F00C         	call	_lcd_lireDonnees	;wreg free
  4333  001722  0100               	movlb	0	; force () banked
  4334  001724  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4335  001726                     
  4336                           ; BSR set to: 0
  4337                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4338  001726  9480               	bcf	128,2,c	;volatile
  4339  001728                     
  4340                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4341  001728  0100               	movlb	0	; force () banked
  4342  00172A  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4343  00172C  EF9A  F00B         	goto	u651
  4344  001730  EF9C  F00B         	goto	u650
  4345  001734                     u651:
  4346  001734  EF82  F00B         	goto	l218
  4347  001738                     u650:
  4348  001738                     
  4349                           ; BSR set to: 0
  4350                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4351  001738  9280               	bcf	128,1,c	;volatile
  4352  00173A                     
  4353                           ; BSR set to: 0
  4354                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4355  00173A  0100               	movlb	0	; force () banked
  4356  00173C  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4357  00173E  0B7F               	andlw	127
  4358  001740                     
  4359                           ; BSR set to: 0
  4360  001740  0012               	return		;funcret
  4361  001742                     __end_of_lcd_busy:
  4362                           	opt callstack 0
  4363                           
  4364 ;; *************** function _lcd_lireDonnees *****************
  4365 ;; Defined at:
  4366 ;;		line 93 in file "Lcd4Lignes.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:         0       0       0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_lcd_busy
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text29
  4394  0018C0                     __ptext29:
  4395                           	opt callstack 0
  4396  0018C0                     _lcd_lireDonnees:
  4397                           	opt callstack 26
  4398  0018C0                     
  4399                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4400  0018C0  5083               	movf	131,w,c	;volatile
  4401  0018C2  0B0F               	andlw	15
  4402  0018C4  0012               	return		;funcret
  4403  0018C6                     __end_of_lcd_lireDonnees:
  4404                           	opt callstack 0
  4405                           
  4406                           	psect	param0
  4407  0000                     tosu	equ	0xFFF
  4408                           tosh	equ	0xFFE
  4409                           tosl	equ	0xFFD
  4410                           stkptr	equ	0xFFC
  4411                           pclatu	equ	0xFFB
  4412                           pclath	equ	0xFFA
  4413                           pcl	equ	0xFF9
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           indf0	equ	0xFEF
  4421                           postinc0	equ	0xFEE
  4422                           postdec0	equ	0xFED
  4423                           preinc0	equ	0xFEC
  4424                           plusw0	equ	0xFEB
  4425                           fsr0h	equ	0xFEA
  4426                           fsr0l	equ	0xFE9
  4427                           wreg	equ	0xFE8
  4428                           indf1	equ	0xFE7
  4429                           postinc1	equ	0xFE6
  4430                           postdec1	equ	0xFE5
  4431                           preinc1	equ	0xFE4
  4432                           plusw1	equ	0xFE3
  4433                           fsr1h	equ	0xFE2
  4434                           fsr1l	equ	0xFE1
  4435                           bsr	equ	0xFE0
  4436                           indf2	equ	0xFDF
  4437                           postinc2	equ	0xFDE
  4438                           postdec2	equ	0xFDD
  4439                           preinc2	equ	0xFDC
  4440                           plusw2	equ	0xFDB
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    15
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     44     132
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabVue(BANK1[84]), accueil(CODE[15]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_montreCurseur->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_cacheCurseur->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _deplace->_lcd_gotoXY
    _demine->_lcd_ecritChar
    _demine->_lcd_gotoXY
    _lcd_gotoXY->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   19755
                                             36 BANK0      8     8      0
                             _demine
                            _deplace
                         _initTabVue
                     _initialisation
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                  _lcd_montreCurseur
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    3610
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     8     8      0    5948
                                             16 BANK0      8     8      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    3238
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           8     8      0    4171
                                             15 BANK0      8     8      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2439
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1645
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               4     3      1    1427
                                              5 BANK0      4     3      1
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     950
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demine
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_montreCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2C      84       4       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      14        0.0%
DATA                 0      0     118      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 12:14:05 2019

 __end_of_calculToucheCombien 0A26                            l87 0FA6                            l99 0C40  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l120 0A24                           l131 0E12                           l212 18C4  
                         l220 1740                           l140 1804                           l108 1120  
                         l134 16FE                           l215 1880                           l143 1814  
                         l303 14CC                           l232 15B2                           l304 14DC  
                         l241 18AE                           l218 1704                           l226 1548  
                         l146 17B4                           l219 1738                           l235 183C  
                         l229 17E8                           l238 189E                           l256 1470  
                         l273 12AA                           l267 16BA                           l292 1864  
                         l276 18B6                           l286 13FE                           l279 18A6  
                         l536 135C                           l289 18BE                           l956 1890  
                         l959 1666                  __CFG_CPB$OFF 000000                           u210 1812  
                         u211 180E                  __CFG_CPD$OFF 000000                           u700 124A  
                         u710 129A                           u720 12AA                           u800 088A  
                         u721 12A6                           u801 0886                           u650 1738  
                         u810 08EE                           u730 064C                           u651 1734  
                         u707 1240                           u811 08EA                           u731 0648  
                         u660 1522                           u820 0952                           u740 067C  
                         u900 12DA                           u661 151E                           u717 1290  
                         u821 094E                           u741 0678                           u901 12D6  
                         u670 1536                           u830 09B6                           u750 06B0  
                         u910 12F4                           u671 1532                           u831 09B2  
                         u751 06AC                           u911 12F0                           u840 0A1A  
                         u760 06E0                           u920 1312                           u680 1492  
                         u841 0A16                           u761 06DC                           u921 130E  
                         u681 148E                           u850 137C                           u770 0746  
                         u930 1328                           u690 14CC                           u851 1378  
                         u771 0742                           u931 1324                           u691 14C8  
                         u860 1398                           u780 07B2                           u940 134C  
                         u861 1394                           u781 07AE                           u941 1348  
                         u950 0E46                           u870 13E4                           u790 081E  
                         u951 0E42                           u871 13E0                           u791 081A  
                         u960 0E72                           u880 13FA                           u961 0E6E  
                         u881 13F6                           u970 0EE2                           u890 12C0  
                         u971 0EDE                           u891 12BC                           u980 0F0A  
                         u981 0F06                           u990 0F82                           u991 0F7E  
                __CFG_BORV$18 000000                  ___awmod@sign 00C7                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E  
                __CFG_LVP$OFF 000000                          l2001 0F1C                          l2003 0F5E  
                        l2011 0A26                          l2101 0D7A                          l2005 0F64  
                        l2013 0A68                          l2111 0DEE                          l2103 0D92  
                        l2007 0F82                          l2031 0B28                          l2023 0AB6  
                        l2113 0E06                          l2105 0D9E                          l2009 0F88  
                        l2033 0B4A                          l2025 0AFE                          l2041 0C20  
                        l2017 0A8A                          l2115 16C0                          l2107 0DB8  
                        l2051 0FE4                          l2043 0FA8                          l2035 0B7C  
                        l2027 0B04                          l2019 0A94                          l2131 1144  
                        l2117 16CC                          l2109 0DD2                          l2061 1086  
                        l2045 0FB8                          l2037 0BD2                          l2029 0B22  
                        l2141 1174                          l2133 1148                          l2071 1102  
                        l2063 10D2                          l2055 1006                          l2039 0C1A  
                        l2151 11A8                          l2143 1190                          l2135 114C  
                        l2127 1122                          l2081 0C92                          l2073 18A0  
                        l2065 10D8                          l2057 105C                          l2049 0FDA  
                        l2153 11AC                          l2145 1194                          l2137 1150  
                        l2129 1140                          l1291 1812                          l2091 0D06  
                        l2083 0CAA                          l2075 0C42                          l2067 10DE  
                        l2059 1074                          l2155 11C4                          l2147 1198  
                        l2139 115C                          l1701 1510                          l1285 17EE  
                        l2093 0D1E                          l2077 0C5C                          l2085 0CB6  
                        l2069 10FC                          l2157 11D2                          l2149 11A4  
                        l1711 1544                          l1703 1522                          l1287 1802  
                        l2087 0CD0                          l2095 0D2A                          l2079 0C76  
                        l2159 11DE                          l1705 1536                          l1721 17C2  
                        l1289 1802                          l2097 0D44                          l2089 0CEA  
                        l1707 1540                          l1731 17D4                          l1723 17C4  
                        l1715 17BA                          l2099 0D5E                          l1811 06B0  
                        l1803 0612                          l1661 171A                          l1653 186A  
                        l1709 1544                          l1733 17DC                          l1725 17C6  
                        l1717 17BE                          l1901 13CE                          l1821 07B8  
                        l1813 06E0                          l1805 0618                          l1671 1728  
                        l1663 171A                          l1655 1700                          l1735 17E0  
                        l1727 17D0                          l1719 17C2                          l1743 166C  
                        l1903 13D2                          l1831 08EE                          l1823 081E  
                        l1815 0746                          l1807 064C                          l1911 12AC  
                        l1649 18C0                          l1673 173A                          l1665 171C  
                        l1657 1708                          l1681 14E6                          l1737 17E0  
                        l1729 17D4                          l1745 167C                          l1753 169A  
                        l1905 13E4                          l1841 09BC                          l1833 08F4  
                        l1825 0824                          l1817 074C                          l1809 067C  
                        l1921 12DA                          l1913 12B2                          l1667 1726  
                        l1659 1718                          l1691 14F8                          l1683 14EA  
                        l1739 17E4                          l1747 1686                          l1755 18A8  
                        l1907 13E8                          l1851 154A                          l1843 0A1A  
                        l1835 0952                          l1827 088A                          l1819 07B2  
                        l1931 1312                          l1923 12E2                          l1915 12C0  
                        l1771 14AC                          l1763 1472                          l1669 1728  
                        l1677 18B8                          l1693 14FC                          l1685 14EA  
                        l1749 1690                          l1781 1438                          l1773 1404  
                        l1757 183E                          l1909 13FA                          l1861 156C  
                        l1853 154E                          l1837 0958                          l1829 0890  
                        l1845 0A20                          l1941 134C                          l1933 1328  
                        l1925 12F4                          l1917 12C8                          l1765 1484  
                        l1695 14FC                          l1687 14EC                          l1679 14E2  
                        l1775 1408                          l1759 185C                          l1791 124E  
                        l1951 1794                          l1871 158A                          l1863 1570  
                        l1855 1562                          l1839 09B6                          l1943 1354  
                        l1935 1330                          l1927 12FC                          l1919 12CC  
                        l1767 1492                          l1697 1504                          l1689 14EE  
                        l1777 1418                          l1785 1448                          l1793 1252  
                        l1849 1882                          l1961 17AA                          l1953 1796  
                        l1881 15A6                          l1873 1590                          l1865 1578  
                        l1857 1564                          l1937 1336                          l1929 1304  
                        l1769 14A2                          l1699 1508                          l1779 1428  
                        l1787 11F8                          l1963 17AC                          l1955 17A2  
                        l1947 1782                          l1971 1892                          l1883 15AE  
                        l1875 1594                          l1867 157E                          l1859 1566  
                        l1939 133C                          l1795 1612                          l1789 1202  
                        l1981 0E4A                          l1965 17B0                          l1957 17A4  
                        l1949 178A                          l1973 18B0                          l1893 1380  
                        l1885 135E                          l1877 159C                          l1869 1582  
                        l1797 1648                          l1991 0EC4                          l1983 0E54  
                        l1975 0E14                          l1959 17A6                          l1895 1386  
                        l1887 1364                          l1879 15A2                          l1967 1816  
                        l1799 165A                          l1993 0EE2                          l1977 0E28  
                        l1889 136A                          l1969 1838                          l1995 0EEC  
                        l1987 0E76                          l1899 139C                          l1989 0EBE  
                        l1999 0F0E                          u1000 0FA6                          u1001 0FA2  
                        u1010 0A86                          u1011 0A82                          u1100 1086  
                        u1020 0AB2                          u1101 1082                          u1021 0AAE  
                        u1110 10FC                          u1030 0B22                          u1111 10F8  
                        u1031 0B1E                          u1200 0E06                          u1120 1120  
                        u1040 0B46                          u1201 0E02                          u1121 111C  
                        u1041 0B42                          u1130 0C5C                          u1050 0BD2  
                        u1131 0C58                          u1051 0BCE                          u1140 0CAA  
                        u1060 0C40                          u1220 11D2                          u1141 0CA6  
                        u1061 0C3C                          u1221 11CE                          u1150 0CD0  
                        u1070 0FD6                          u1151 0CCC                          u1071 0FD2  
                        u1160 0D1E                          u1080 1002                          u1161 0D1A  
                        u1081 0FFE                          u1170 0D44                          u1090 105C  
                        u1307 150A                          u1171 0D40                          u1091 1058  
                        u1180 0D92                          u1317 1538                          u1181 0D8E  
                        u1237 1180                          u1190 0DB8                          u1191 0DB4  
                        u1247 11E6                          u1257 1556                          u1267 1572  
                        u1277 1584                          u1287 1596                          u1297 15A8  
                        _RCIF 007CF5                          _TMR1 000FCE              ??_initialisation 00B6  
                        _main 1122                          _rand 1612                          fsr0h 000FEA  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00B7                         ?_main 00B4  
                       ?_rand 00C0               __end_of___awmod 135E                         _ANSEL 000F7E  
                       _RCREG 000FAE               __end_of_accueil 0610                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 0E14           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _randx 00E0                         _srand 1882  
                       tablat 000FF5                         status 000FD8      __end_of_lcd_cacheCurseur 18B8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 0FA8  
             __initialization 15B4                  __end_of_main 11F8                  __end_of_rand 1668  
        lcd_putMessage@chaine 00BA    calculToucheCombien@colonne 00BC                        ??_main 00D8  
                      ??_rand 00C2                 __activetblptr 000003                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 00B4                        _ANSELH 000F7F  
                 initTabVue@g 00C9                   initTabVue@i 00C5                   initTabVue@j 00C7  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 1742              __end_of_lcd_init 183E  
                      ___lmul 1472                        ___wmul 183E                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        _demine 16BC                        clear_0 15FA  
                      clear_1 1606               ___awmod@divisor 00C4                     ??_deplace 00BD  
             ___awmod@counter 00C6                        main@nb 00DA                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B4             _lcd_resetSequence 154A                    __accesstop 0060  
     __end_of__initialization 160C           _lcd_strobeEnableBit 18B8            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000           _lcd_effaceAffichage 1892                  __pidataBANK0 18C6  
                __pidataBANK1 1742           ??_lcd_resetSequence 00B6                 __end_of_srand 1892  
        ?_lcd_strobeEnableBit 00B4     calculToucheCombien@nombre 00C3            __size_of_getAnalog 002C  
           _lcd_montreCurseur 18A0            ?_lcd_montreCurseur 00B4          ?_lcd_effaceAffichage 00B4  
          __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 15B4                       ??_srand 00B6  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 1866                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BD           ??_lcd_montreCurseur 00B7  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                       ?_demine 00B9  
   __end_of_lcd_montreCurseur 18A8                ___lmul@product 00BC         ??_lcd_strobeEnableBit 00B4  
__size_of_calculToucheCombien 0414      __end_of_metToucheCombien 1122                    _lcd_gotoXY 1400  
       ??_lcd_effaceAffichage 00B7                    _lcd_wrData 17B6     __end_of_lcd_ecrireDonnees 1882  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 1816             ?_lcd_cacheCurseur 00B4  
        __size_of_rempliMines 021C                       __Hparam 0000                       __Lparam 0000  
          ??_lcd_cacheCurseur 00B7                    _initTabVue 0E14             __end_of_lcd_wrCom 154A  
             __size_of___lmul 006C                       ___awmod 12AC            rempliMines@colonne 00D2  
             __size_of___wmul 0028               __size_of_demine 0044                       _accueil 0601  
                __psmallconst 0600                       __pcinit 15B4                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 0C42                       __ptext0 1122  
                     __ptext1 0A26                       __ptext2 1612                       __ptext3 1472  
                     __ptext4 12AC                       __ptext5 0FA8                       __ptext6 0612  
                     __ptext7 18A0                       __ptext8 1816                       __ptext9 154A  
       __end_of_lcd_ecritChar 16BC               lcd_busy@adresse 00B5                     _T1CONbits 000FCD  
            ___awmod@dividend 00C2                       demine@x 00BC                       demine@y 00B9  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 160C         __end_of_lcd_initCGRam 1400  
           ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8    __size_of_lcd_montreCurseur 0008  
                   _PORTAbits 000F80                     _PORTBbits 000F81                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC        rempliMines@endroitMine 00CD                   ?_initTabVue 00B4  
              __end_of___lmul 14DE                __end_of___wmul 1866                   _BAUDCONbits 000FB8  
              __end_of_demine 1700           start_initialization 15B4           _calculToucheCombien 0612  
         __size_of_lcd_gotoXY 0072                      ??___lmul 00BC                      ??___wmul 00B8  
               rempliMines@nb 00C8           __size_of_lcd_wrData 0034                      ??_demine 00BA  
                 __pdataBANK0 00E0                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4             ?_metToucheCombien 00B4  
         __size_of_initTabVue 0194            ??_metToucheCombien 00C4             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 17EA  
 __end_of_lcd_strobeEnableBit 18C0                _initialisation 1782                      ?___awmod 00C2  
                    ?_deplace 00B9   __end_of_lcd_effaceAffichage 18A0                     _lcd_wrCom 14DE  
       ??_calculToucheCombien 00BE     __size_of_lcd_cacheCurseur 0008                   __smallconst 0600  
             _lcd_lireDonnees 18C0           lcd_wrData@caractere 00B6                __size_of_srand 0010  
               ??_rempliMines 00CA               _lcd_curseurHome 18A8                ___wmul@product 00B8  
      __end_of_initialisation 17B6                    ?_getAnalog 00B4              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 15C8                     copy_data1 15E8                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 0C42                  ??_initTabVue 00C3            __CFG_BOREN$SBORDIS 000000  
                rempliMines@g 00CE                  rempliMines@i 00D4                  rempliMines@j 00D6  
          __end_of_lcd_gotoXY 1472            __end_of_lcd_wrData 17EA              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2              __size_of_deplace 01D2  
     __end_of_lcd_lireDonnees 18C6                      _matCGRAM 0154       __end_of_lcd_curseurHome 18B0  
                    __ptext10 135E                      __ptext11 18A8                      __ptext20 17EA  
                    __ptext12 1892                      __ptext21 16BC                      __ptext13 18B0  
                    __ptext22 1400                      __ptext14 1782                      __ptext23 1668  
                    __ptext15 1882                      __ptext24 17B6                      __ptext16 0E14  
                    __ptext25 14DE                      __ptext17 11F8                      __ptext26 18B8  
                    __ptext18 183E                      __ptext27 1866                      __ptext19 0C42  
                    __ptext28 1700                      __ptext29 18C0             metToucheCombien@i 00C8  
           metToucheCombien@j 00CA                      _lcd_busy 1700                      _lcd_init 1816  
          __end_of_initTabVue 0FA8      calculToucheCombien@ligne 00BA                      _m_tabVue 0100  
            rempliMines@ligne 00D0                 __size_of_main 00D6                 __size_of_rand 0056  
                    deplace@x 00B9                      deplace@y 00BB                   ??_getAnalog 00B4  
      metToucheCombien@nombre 00C7                      main@posX 00DC                      main@posY 00DE  
                 ??_lcd_wrCom 00B6              _lcd_cacheCurseur 18B0                 _lcd_ecritChar 1668  
               _lcd_initCGRam 135E                   _rempliMines 0A26     __size_of_metToucheCombien 017A  
              _lcd_putMessage 11F8                ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4  
            ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 12AC  
