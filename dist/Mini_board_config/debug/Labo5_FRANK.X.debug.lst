

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 19 19:32:20 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1,minocg
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F45K20 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  001BA0                     __pidataBANK0:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _randx
    93  001BA0  0001               	dw	1
    94  001BA2  0000               	dw	0
    95                           
    96                           ;initializer for _m_niveau
    97  001BA4  0001               	dw	1
    98                           
    99                           	psect	idataBANK1
   100  0014E4                     __pidataBANK1:
   101                           	opt callstack 0
   102                           
   103                           ;initializer for _matCGRAM
   104  0014E4  00                 	db	0
   105  0014E5  00                 	db	0
   106  0014E6  11                 	db	17
   107  0014E7  15                 	db	21
   108  0014E8  15                 	db	21
   109  0014E9  1B                 	db	27
   110  0014EA  1B                 	db	27
   111  0014EB  0E                 	db	14
   112  0014EC  04                 	db	4
   113  0014ED  0E                 	db	14
   114  0014EE  15                 	db	21
   115  0014EF  1B                 	db	27
   116  0014F0  0A                 	db	10
   117  0014F1  0E                 	db	14
   118  0014F2  15                 	db	21
   119  0014F3  15                 	db	21
   120  0014F4  1B                 	db	27
   121  0014F5  11                 	db	17
   122  0014F6  0A                 	db	10
   123  0014F7  15                 	db	21
   124  0014F8  15                 	db	21
   125  0014F9  1B                 	db	27
   126  0014FA  0A                 	db	10
   127  0014FB  0A                 	db	10
   128  0014FC  0E                 	db	14
   129  0014FD  1B                 	db	27
   130  0014FE  0A                 	db	10
   131  0014FF  1F                 	db	31
   132  001500  11                 	db	17
   133  001501  1F                 	db	31
   134  001502  0A                 	db	10
   135  001503  0A                 	db	10
   136  001504  08                 	db	8
   137  001505  04                 	db	4
   138  001506  1F                 	db	31
   139  001507  10                 	db	16
   140  001508  1E                 	db	30
   141  001509  10                 	db	16
   142  00150A  1F                 	db	31
   143  00150B  00                 	db	0
   144  00150C  04                 	db	4
   145  00150D  0A                 	db	10
   146  00150E  0E                 	db	14
   147  00150F  11                 	db	17
   148  001510  1F                 	db	31
   149  001511  10                 	db	16
   150  001512  0E                 	db	14
   151  001513  00                 	db	0
   152  001514  08                 	db	8
   153  001515  04                 	db	4
   154  001516  0E                 	db	14
   155  001517  01                 	db	1
   156  001518  0F                 	db	15
   157  001519  11                 	db	17
   158  00151A  0F                 	db	15
   159  00151B  00                 	db	0
   160  00151C  04                 	db	4
   161  00151D  0A                 	db	10
   162  00151E  0E                 	db	14
   163  00151F  01                 	db	1
   164  001520  0F                 	db	15
   165  001521  11                 	db	17
   166  001522  0F                 	db	15
   167  001523  00                 	db	0
   168                           
   169                           ;initializer for _m_aliens
   170  001524  20                 	db	32
   171  001525  20                 	db	32
   172  001526  20                 	db	32
   173  001527  20                 	db	32
   174  001528  20                 	db	32
   175  001529  20                 	db	32
   176  00152A  20                 	db	32
   177  00152B  20                 	db	32
   178  00152C  20                 	db	32
   179  00152D  20                 	db	32
   180  00152E  20                 	db	32
   181  00152F  20                 	db	32
   182  001530  20                 	db	32
   183  001531  20                 	db	32
   184  001532  20                 	db	32
   185  001533  20                 	db	32
   186  001534  20                 	db	32
   187  001535  20                 	db	32
   188  001536  20                 	db	32
   189  001537  20                 	db	32
   190  001538  00                 	db	0
   191  001539  20                 	db	32
   192  00153A  20                 	db	32
   193  00153B  20                 	db	32
   194  00153C  20                 	db	32
   195  00153D  20                 	db	32
   196  00153E  20                 	db	32
   197  00153F  20                 	db	32
   198  001540  20                 	db	32
   199  001541  20                 	db	32
   200  001542  20                 	db	32
   201  001543  20                 	db	32
   202  001544  20                 	db	32
   203  001545  20                 	db	32
   204  001546  20                 	db	32
   205  001547  20                 	db	32
   206  001548  20                 	db	32
   207  001549  20                 	db	32
   208  00154A  20                 	db	32
   209  00154B  20                 	db	32
   210  00154C  20                 	db	32
   211  00154D  00                 	db	0
   212  00154E  20                 	db	32
   213  00154F  20                 	db	32
   214  001550  20                 	db	32
   215  001551  20                 	db	32
   216  001552  20                 	db	32
   217  001553  20                 	db	32
   218  001554  20                 	db	32
   219  001555  20                 	db	32
   220  001556  20                 	db	32
   221  001557  20                 	db	32
   222  001558  20                 	db	32
   223  001559  20                 	db	32
   224  00155A  20                 	db	32
   225  00155B  20                 	db	32
   226  00155C  20                 	db	32
   227  00155D  20                 	db	32
   228  00155E  20                 	db	32
   229  00155F  20                 	db	32
   230  001560  20                 	db	32
   231  001561  20                 	db	32
   232  001562  00                 	db	0
   233  001563  20                 	db	32
   234  001564  20                 	db	32
   235  001565  20                 	db	32
   236  001566  20                 	db	32
   237  001567  20                 	db	32
   238  001568  20                 	db	32
   239  001569  20                 	db	32
   240  00156A  20                 	db	32
   241  00156B  20                 	db	32
   242  00156C  20                 	db	32
   243  00156D  20                 	db	32
   244  00156E  20                 	db	32
   245  00156F  20                 	db	32
   246  001570  20                 	db	32
   247  001571  20                 	db	32
   248  001572  20                 	db	32
   249  001573  20                 	db	32
   250  001574  20                 	db	32
   251  001575  20                 	db	32
   252  001576  20                 	db	32
   253  001577  00                 	db	0
   254                           
   255                           	psect	smallconst
   256  000600                     __psmallconst:
   257                           	opt callstack 0
   258  000600  00                 	db	0
   259  000601                     _jeuPerdu:
   260                           	opt callstack 0
   261  000601  70                 	db	112
   262  000602  65                 	db	101
   263  000603  72                 	db	114
   264  000604  64                 	db	100
   265  000605  75                 	db	117
   266  000606  2E                 	db	46
   267  000607  2E                 	db	46
   268  000608  2E                 	db	46
   269  000609  20                 	db	32
   270  00060A  73                 	db	115
   271  00060B  63                 	db	99
   272  00060C  6F                 	db	111
   273  00060D  72                 	db	114
   274  00060E  65                 	db	101
   275  00060F  20                 	db	32
   276  000610  00                 	db	0
   277  000611                     __end_of_jeuPerdu:
   278                           	opt callstack 0
   279  000611                     _dpowers:
   280                           	opt callstack 0
   281  000611  0001               	dw	1
   282  000613  000A               	dw	10
   283  000615  0064               	dw	100
   284  000617  03E8               	dw	1000
   285  000619  2710               	dw	10000
   286  00061B                     __end_of_dpowers:
   287                           	opt callstack 0
   288  00061B                     _accueil:
   289                           	opt callstack 0
   290  00061B  4C                 	db	76
   291  00061C  61                 	db	97
   292  00061D  62                 	db	98
   293  00061E  6F                 	db	111
   294  00061F  35                 	db	53
   295  000620  20                 	db	32
   296  000621  64                 	db	100
   297  000622  65                 	db	101
   298  000623  20                 	db	32
   299  000624  46                 	db	70
   300  000625  72                 	db	114
   301  000626  61                 	db	97
   302  000627  6E                 	db	110
   303  000628  6B                 	db	107
   304  000629  00                 	db	0
   305  00062A                     __end_of_accueil:
   306                           	opt callstack 0
   307  00062A                     _niveau1:
   308                           	opt callstack 0
   309  00062A  4E                 	db	78
   310  00062B  69                 	db	105
   311  00062C  76                 	db	118
   312  00062D  65                 	db	101
   313  00062E  61                 	db	97
   314  00062F  75                 	db	117
   315  000630  20                 	db	32
   316  000631  23                 	db	35
   317  000632  31                 	db	49
   318  000633  00                 	db	0
   319  000634                     __end_of_niveau1:
   320                           	opt callstack 0
   321  0000                     _PORTAbits	set	3968
   322  0000                     _PORTD	set	3971
   323  0000                     _TRISCbits	set	3988
   324  0000                     _ANSELbits	set	3966
   325  0000                     _TRISA	set	3986
   326  0000                     _ANSEL	set	3966
   327  0000                     _TRISB	set	3987
   328  0000                     _ANSELH	set	3967
   329  0000                     _TRISD	set	3989
   330  0000                     _PORTBbits	set	3969
   331  0000                     _TMR1	set	4046
   332  0000                     _RCREG	set	4014
   333  0000                     _TXREG	set	4013
   334  0000                     _RCSTAbits	set	4011
   335  0000                     _TXSTAbits	set	4012
   336  0000                     _BAUDCONbits	set	4024
   337  0000                     _SPBRG	set	4015
   338  0000                     _SPBRGH	set	4016
   339  0000                     _ADCON2bits	set	4032
   340  0000                     _ADCON1	set	4033
   341  0000                     _T1CONbits	set	4045
   342  0000                     _ADRESH	set	4036
   343  0000                     _ADCON0bits	set	4034
   344  0000                     _RCIF	set	31989
   345  0000                     _TMR0	set	4054
   346  0000                     _T0CONbits	set	4053
   347  0000                     _INTCONbits	set	4082
   348  000634                     STR_2:
   349  000634  50                 	db	80	;'P'
   350  000635  65                 	db	101	;'e'
   351  000636  72                 	db	114	;'r'
   352  000637  64                 	db	100	;'d'
   353  000638  75                 	db	117	;'u'
   354  000639  2E                 	db	46
   355  00063A  2E                 	db	46
   356  00063B  2E                 	db	46
   357  00063C  20                 	db	32
   358  00063D  73                 	db	115	;'s'
   359  00063E  63                 	db	99	;'c'
   360  00063F  6F                 	db	111	;'o'
   361  000640  72                 	db	114	;'r'
   362  000641  65                 	db	101	;'e'
   363  000642  3A                 	db	58	;':'
   364  000643  20                 	db	32
   365  000644  25                 	db	37
   366  000645  64                 	db	100	;'d'
   367  000646  00                 	db	0
   368  000647                     STR_1:
   369  000647  4E                 	db	78	;'N'
   370  000648  69                 	db	105	;'i'
   371  000649  76                 	db	118	;'v'
   372  00064A  65                 	db	101	;'e'
   373  00064B  61                 	db	97	;'a'
   374  00064C  75                 	db	117	;'u'
   375  00064D  20                 	db	32
   376  00064E  23                 	db	35
   377  00064F  25                 	db	37
   378  000650  64                 	db	100	;'d'
   379  000651  00                 	db	0
   380                           
   381                           ; #config settings
   382  000652  00                 	db	0	; dummy byte at the end
   383  0000                     
   384                           	psect	cinit
   385  0019CA                     __pcinit:
   386                           	opt callstack 0
   387  0019CA                     start_initialization:
   388                           	opt callstack 0
   389  0019CA                     __initialization:
   390                           	opt callstack 0
   391                           
   392                           ; Initialize objects allocated to BANK1 (148 bytes)
   393                           ; load TBLPTR registers with __pidataBANK1
   394  0019CA  0EE4               	movlw	low __pidataBANK1
   395  0019CC  6EF6               	movwf	tblptrl,c
   396  0019CE  0E14               	movlw	high __pidataBANK1
   397  0019D0  6EF7               	movwf	tblptrh,c
   398  0019D2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   399  0019D4  6EF8               	movwf	tblptru,c
   400  0019D6  EE01  F000         	lfsr	0,__pdataBANK1
   401  0019DA  EE10 F094          	lfsr	1,148
   402  0019DE                     copy_data0:
   403  0019DE  0009               	tblrd		*+
   404  0019E0  CFF5 FFEE          	movff	tablat,postinc0
   405  0019E4  50E5               	movf	postdec1,w,c
   406  0019E6  50E1               	movf	fsr1l,w,c
   407  0019E8  E1FA               	bnz	copy_data0
   408                           
   409                           ; Initialize objects allocated to BANK0 (6 bytes)
   410                           ; load TBLPTR registers with __pidataBANK0
   411  0019EA  0EA0               	movlw	low __pidataBANK0
   412  0019EC  6EF6               	movwf	tblptrl,c
   413  0019EE  0E1B               	movlw	high __pidataBANK0
   414  0019F0  6EF7               	movwf	tblptrh,c
   415  0019F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   416  0019F4  6EF8               	movwf	tblptru,c
   417  0019F6  EE00  F0EA         	lfsr	0,__pdataBANK0
   418  0019FA  EE10 F006          	lfsr	1,6
   419  0019FE                     copy_data1:
   420  0019FE  0009               	tblrd		*+
   421  001A00  CFF5 FFEE          	movff	tablat,postinc0
   422  001A04  50E5               	movf	postdec1,w,c
   423  001A06  50E1               	movf	fsr1l,w,c
   424  001A08  E1FA               	bnz	copy_data1
   425                           
   426                           ; Clear objects allocated to BANK0 (1 bytes)
   427  001A0A  0100               	movlb	0
   428  001A0C  6BF0               	clrf	__pbssBANK0& (0+255),b
   429  001A0E                     end_of_initialization:
   430                           	opt callstack 0
   431  001A0E                     __end_of__initialization:
   432                           	opt callstack 0
   433  001A0E  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   434  001A10  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   435  001A12  0100               	movlb	0
   436  001A14  EFF3  F004         	goto	_main	;jump to C main() function
   437                           
   438                           	psect	bssBANK0
   439  0000F0                     __pbssBANK0:
   440                           	opt callstack 0
   441  0000F0                     _m_tempsDAfficher:
   442                           	opt callstack 0
   443  0000F0                     	ds	1
   444                           
   445                           	psect	dataBANK0
   446  0000EA                     __pdataBANK0:
   447                           	opt callstack 0
   448  0000EA                     _randx:
   449                           	opt callstack 0
   450  0000EA                     	ds	4
   451  0000EE                     _m_niveau:
   452                           	opt callstack 0
   453  0000EE                     	ds	2
   454                           
   455                           	psect	dataBANK1
   456  000100                     __pdataBANK1:
   457                           	opt callstack 0
   458  000100                     _matCGRAM:
   459                           	opt callstack 0
   460  000100                     	ds	64
   461  000140                     _m_aliens:
   462                           	opt callstack 0
   463  000140                     	ds	84
   464                           
   465                           	psect	cstackBANK0
   466  000060                     __pcstackBANK0:
   467                           	opt callstack 0
   468  000060                     ??_getAnalog:
   469  000060                     ??_lcd_ecrireDonnees:
   470  000060                     ??_lcd_busy:
   471  000060                     ?_strcpy:
   472                           	opt callstack 0
   473  000060                     ?___wmul:
   474                           	opt callstack 0
   475  000060                     ?___awdiv:
   476                           	opt callstack 0
   477  000060                     ?___lwdiv:
   478                           	opt callstack 0
   479  000060                     ?___lmul:
   480                           	opt callstack 0
   481  000060                     ___wmul@multiplier:
   482                           	opt callstack 0
   483  000060                     ___awdiv@dividend:
   484                           	opt callstack 0
   485  000060                     ___lwdiv@dividend:
   486                           	opt callstack 0
   487  000060                     srand@x:
   488                           	opt callstack 0
   489  000060                     strcpy@to:
   490                           	opt callstack 0
   491  000060                     ___lmul@multiplier:
   492                           	opt callstack 0
   493                           
   494                           ; 4 bytes @ 0x0
   495  000060                     	ds	1
   496  000061                     getAnalog@canal:
   497                           	opt callstack 0
   498  000061                     lcd_ecrireDonnees@donnee:
   499                           	opt callstack 0
   500  000061                     lcd_busy@adresse:
   501                           	opt callstack 0
   502  000061                     perdu@i:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1
   506  000061                     	ds	1
   507  000062                     ??_lcd_resetSequence:
   508  000062                     lcd_wrCom@commande:
   509                           	opt callstack 0
   510  000062                     lcd_wrData@caractere:
   511                           	opt callstack 0
   512  000062                     ___wmul@multiplicand:
   513                           	opt callstack 0
   514  000062                     ___awdiv@divisor:
   515                           	opt callstack 0
   516  000062                     ___lwdiv@divisor:
   517                           	opt callstack 0
   518  000062                     strcpy@from:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522  000062                     	ds	1
   523  000063                     ??_lcd_initCGRam:
   524  000063                     lcd_gotoXY@y:
   525                           	opt callstack 0
   526  000063                     lcd_ecritChar@car:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x3
   530  000063                     	ds	1
   531  000064                     lcd_gotoXY@x:
   532                           	opt callstack 0
   533  000064                     lcd_ecritChar@posRam:
   534                           	opt callstack 0
   535  000064                     ___awdiv@counter:
   536                           	opt callstack 0
   537  000064                     ___wmul@product:
   538                           	opt callstack 0
   539  000064                     ___lwdiv@quotient:
   540                           	opt callstack 0
   541  000064                     strcpy@cp:
   542                           	opt callstack 0
   543  000064                     ___lmul@multiplicand:
   544                           	opt callstack 0
   545                           
   546                           ; 4 bytes @ 0x4
   547  000064                     	ds	1
   548  000065                     lcd_initCGRam@i:
   549                           	opt callstack 0
   550  000065                     ___awdiv@sign:
   551                           	opt callstack 0
   552  000065                     deplace@x:
   553                           	opt callstack 0
   554  000065                     lcd_putMessage@chaine:
   555                           	opt callstack 0
   556                           
   557                           ; 3 bytes @ 0x5
   558  000065                     	ds	1
   559  000066                     ??_videAliens:
   560  000066                     lcd_initCGRam@j:
   561                           	opt callstack 0
   562  000066                     ___lwdiv@counter:
   563                           	opt callstack 0
   564  000066                     feu@pts:
   565                           	opt callstack 0
   566  000066                     ___awdiv@quotient:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570  000066                     	ds	1
   571  000067                     ??_deplace:
   572  000067                     ?___lwmod:
   573                           	opt callstack 0
   574  000067                     ___lwmod@dividend:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x7
   578  000067                     	ds	1
   579  000068                     ??_lcd_putMessage:
   580  000068                     ??_feu:
   581  000068                     videAliens@i:
   582                           	opt callstack 0
   583  000068                     ___lmul@product:
   584                           	opt callstack 0
   585                           
   586                           ; 4 bytes @ 0x8
   587  000068                     	ds	1
   588  000069                     ___lwmod@divisor:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x9
   592  000069                     	ds	1
   593  00006A                     videAliens@j:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0xA
   597  00006A                     	ds	1
   598  00006B                     ___lwmod@counter:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0xB
   602  00006B                     	ds	1
   603  00006C                     ?_sprintf:
   604                           	opt callstack 0
   605  00006C                     ?_rand:
   606                           	opt callstack 0
   607  00006C                     sprintf@sp:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0xC
   611  00006C                     	ds	1
   612  00006D                     lcd_putMessage@j:
   613                           	opt callstack 0
   614  00006D                     feu@i:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xD
   618  00006D                     	ds	1
   619  00006E                     ?___awmod:
   620                           	opt callstack 0
   621  00006E                     sprintf@f:
   622                           	opt callstack 0
   623  00006E                     ___awmod@dividend:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0xE
   627  00006E                     	ds	1
   628  00006F                     feu@x:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0xF
   632  00006F                     	ds	1
   633  000070                     ___awmod@divisor:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x10
   637  000070                     	ds	2
   638  000072                     ??_sprintf:
   639  000072                     ___awmod@counter:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0x12
   643  000072                     	ds	1
   644  000073                     ___awmod@sign:
   645                           	opt callstack 0
   646  000073                     sprintf@ap:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x13
   650  000073                     	ds	1
   651  000074                     ??_nouveauxAliens:
   652                           
   653                           ; 1 bytes @ 0x14
   654  000074                     	ds	1
   655  000075                     sprintf@flag:
   656                           	opt callstack 0
   657  000075                     nouveauxAliens@i:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x15
   661  000075                     	ds	1
   662  000076                     sprintf@prec:
   663                           	opt callstack 0
   664                           
   665                           ; 1 bytes @ 0x16
   666  000076                     	ds	1
   667  000077                     nouveauxAliens@j:
   668                           	opt callstack 0
   669  000077                     sprintf@val:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x17
   673  000077                     	ds	2
   674  000079                     nouveauxAliens@endroitAliens:
   675                           	opt callstack 0
   676  000079                     sprintf@c:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x19
   680  000079                     	ds	1
   681  00007A                     nouveauxAliens@sorteAliens:
   682                           	opt callstack 0
   683  00007A                     affichePerdu@pts:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x1A
   687  00007A                     	ds	2
   688  00007C                     ??_affichePerdu:
   689                           
   690                           ; 1 bytes @ 0x1C
   691  00007C                     	ds	2
   692  00007E                     affichePerdu@buffer:
   693                           	opt callstack 0
   694                           
   695                           ; 50 bytes @ 0x1E
   696  00007E                     	ds	50
   697  0000B0                     ??_main:
   698                           
   699                           ; 1 bytes @ 0x50
   700  0000B0                     	ds	2
   701  0000B2                     main@bufferNiveau:
   702                           	opt callstack 0
   703                           
   704                           ; 50 bytes @ 0x52
   705  0000B2                     	ds	50
   706  0000E4                     main@dizaine:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x84
   710  0000E4                     	ds	2
   711  0000E6                     main@pts:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x86
   715  0000E6                     	ds	2
   716  0000E8                     main@posX:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x88
   720  0000E8                     	ds	2
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 72 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  bufferNiveau   50   82[BANK0 ] unsigned char [50]
   732 ;;  posX            2  136[BANK0 ] int 
   733 ;;  pts             2  134[BANK0 ] int 
   734 ;;  dizaine         2  132[BANK0 ] int 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         0       0       0       0       0       0       0
   745 ;;      Locals:         0      56       0       0       0       0       0
   746 ;;      Temps:          0       2       0       0       0       0       0
   747 ;;      Totals:         0      58       0       0       0       0       0
   748 ;;Total ram usage:       58 bytes
   749 ;; Hardware stack levels required when called:    7
   750 ;; This function calls:
   751 ;;		___awdiv
   752 ;;		___awmod
   753 ;;		_afficheAliens
   754 ;;		_affichePerdu
   755 ;;		_deplace
   756 ;;		_feu
   757 ;;		_initialisation
   758 ;;		_lcd_cacheCurseur
   759 ;;		_lcd_effaceAffichage
   760 ;;		_lcd_gotoXY
   761 ;;		_lcd_init
   762 ;;		_lcd_putMessage
   763 ;;		_nouveauxAliens
   764 ;;		_perdu
   765 ;;		_sprintf
   766 ;;		_videAliens
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text0
   773  0009E6                     __ptext0:
   774                           	opt callstack 0
   775  0009E6                     _main:
   776                           	opt callstack 24
   777  0009E6                     
   778                           ;main.c: 74: int posX = 10;
   779  0009E6  0E00               	movlw	0
   780  0009E8  0100               	movlb	0	; force () banked
   781  0009EA  6FE9               	movwf	(main@posX+1)& (0+255),b
   782  0009EC  0E0A               	movlw	10
   783  0009EE  6FE8               	movwf	main@posX& (0+255),b
   784                           
   785                           ;main.c: 75: int pts=0;
   786  0009F0  0E00               	movlw	0
   787  0009F2  0100               	movlb	0	; force () banked
   788  0009F4  6FE7               	movwf	(main@pts+1)& (0+255),b
   789  0009F6  0E00               	movlw	0
   790  0009F8  6FE6               	movwf	main@pts& (0+255),b
   791                           
   792                           ;main.c: 76: int dizaine =0;
   793  0009FA  0E00               	movlw	0
   794  0009FC  0100               	movlb	0	; force () banked
   795  0009FE  6FE5               	movwf	(main@dizaine+1)& (0+255),b
   796  000A00  0E00               	movlw	0
   797  000A02  6FE4               	movwf	main@dizaine& (0+255),b
   798  000A04                     
   799                           ; BSR set to: 0
   800                           ;main.c: 77: char bufferNiveau[50];;main.c: 78: initialisation();
   801  000A04  EC91  F00C         	call	_initialisation	;wreg free
   802  000A08                     
   803                           ;main.c: 79: lcd_init();
   804  000A08  EC7F  F00D         	call	_lcd_init	;wreg free
   805  000A0C                     
   806                           ;main.c: 80: lcd_effaceAffichage();
   807  000A0C  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
   808  000A10                     
   809                           ;main.c: 81: lcd_cacheCurseur();
   810  000A10  ECC8  F00D         	call	_lcd_cacheCurseur	;wreg free
   811  000A14                     
   812                           ;main.c: 82: lcd_gotoXY(1,1);
   813  000A14  0E01               	movlw	1
   814  000A16  0100               	movlb	0	; force () banked
   815  000A18  6F63               	movwf	lcd_gotoXY@y& (0+255),b
   816  000A1A  0E01               	movlw	1
   817  000A1C  ECF7  F00A         	call	_lcd_gotoXY
   818  000A20                     
   819                           ;main.c: 83: lcd_putMessage(accueil);
   820  000A20  0E1B               	movlw	low _accueil
   821  000A22  0100               	movlb	0	; force () banked
   822  000A24  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
   823  000A26  0E06               	movlw	high _accueil
   824  000A28  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   825  000A2A  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
   826  000A2C  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   827  000A2E  A4D8               	btfss	status,2,c
   828  000A30  0E00               	movlw	low (__mediumconst shr (0+16))
   829  000A32  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   830  000A34  EC6E  F009         	call	_lcd_putMessage	;wreg free
   831  000A38                     
   832                           ;main.c: 85: _delay((unsigned long)((1000)*(1000000/4000.0)));
   833  000A38  0E02               	movlw	2
   834  000A3A  0100               	movlb	0	; force () banked
   835  000A3C  6FB1               	movwf	(??_main+1)& (0+255),b
   836  000A3E  0E45               	movlw	69
   837  000A40  6FB0               	movwf	??_main& (0+255),b
   838  000A42  0EA9               	movlw	169
   839  000A44                     u1427:
   840  000A44  2EE8               	decfsz	wreg,f,c
   841  000A46  D7FE               	bra	u1427
   842  000A48  2FB0               	decfsz	??_main& (0+255),f,b
   843  000A4A  D7FC               	bra	u1427
   844  000A4C  2FB1               	decfsz	(??_main+1)& (0+255),f,b
   845  000A4E  D7FA               	bra	u1427
   846  000A50  F000 F000          	nop2	
   847  000A54                     
   848                           ;main.c: 86: lcd_effaceAffichage();
   849  000A54  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
   850  000A58                     l2583:
   851                           
   852                           ;main.c: 88: {;main.c: 89: if(m_tempsDAfficher == 1)
   853  000A58  0100               	movlb	0	; force () banked
   854  000A5A  05F0               	decf	_m_tempsDAfficher& (0+255),w,b
   855  000A5C  A4D8               	btfss	status,2,c
   856  000A5E  EF33  F005         	goto	u1391
   857  000A62  EF35  F005         	goto	u1390
   858  000A66                     u1391:
   859  000A66  EF83  F005         	goto	l2611
   860  000A6A                     u1390:
   861  000A6A                     
   862                           ; BSR set to: 0
   863                           ;main.c: 90: {;main.c: 91: nouveauxAliens();
   864  000A6A  ECFC  F006         	call	_nouveauxAliens	;wreg free
   865  000A6E                     
   866                           ;main.c: 92: afficheAliens();
   867  000A6E  EC04  F00C         	call	_afficheAliens	;wreg free
   868  000A72                     
   869                           ;main.c: 93: if(perdu() == 0)
   870  000A72  ECA5  F008         	call	_perdu	;wreg free
   871  000A76  0900               	iorlw	0
   872  000A78  A4D8               	btfss	status,2,c
   873  000A7A  EF41  F005         	goto	u1401
   874  000A7E  EF43  F005         	goto	u1400
   875  000A82                     u1401:
   876  000A82  EF79  F005         	goto	l2607
   877  000A86                     u1400:
   878  000A86                     
   879                           ;main.c: 94: {;main.c: 95: affichePerdu(pts);
   880  000A86  C0E6  F07A         	movff	main@pts,affichePerdu@pts
   881  000A8A  C0E7  F07B         	movff	main@pts+1,affichePerdu@pts+1
   882  000A8E  EC37  F00C         	call	_affichePerdu	;wreg free
   883  000A92                     
   884                           ;main.c: 96: posX =10;
   885  000A92  0E00               	movlw	0
   886  000A94  0100               	movlb	0	; force () banked
   887  000A96  6FE9               	movwf	(main@posX+1)& (0+255),b
   888  000A98  0E0A               	movlw	10
   889  000A9A  6FE8               	movwf	main@posX& (0+255),b
   890  000A9C                     
   891                           ; BSR set to: 0
   892                           ;main.c: 97: videAliens();
   893  000A9C  ECA4  F007         	call	_videAliens	;wreg free
   894  000AA0                     
   895                           ;main.c: 98: pts=0;
   896  000AA0  0E00               	movlw	0
   897  000AA2  0100               	movlb	0	; force () banked
   898  000AA4  6FE7               	movwf	(main@pts+1)& (0+255),b
   899  000AA6  0E00               	movlw	0
   900  000AA8  6FE6               	movwf	main@pts& (0+255),b
   901  000AAA                     
   902                           ; BSR set to: 0
   903                           ;main.c: 99: m_niveau =1;
   904  000AAA  0E00               	movlw	0
   905  000AAC  0100               	movlb	0	; force () banked
   906  000AAE  6FEF               	movwf	(_m_niveau+1)& (0+255),b
   907  000AB0  0E01               	movlw	1
   908  000AB2  6FEE               	movwf	_m_niveau& (0+255),b
   909  000AB4                     
   910                           ; BSR set to: 0
   911                           ;main.c: 100: dizaine=0;
   912  000AB4  0E00               	movlw	0
   913  000AB6  0100               	movlb	0	; force () banked
   914  000AB8  6FE5               	movwf	(main@dizaine+1)& (0+255),b
   915  000ABA  0E00               	movlw	0
   916  000ABC  6FE4               	movwf	main@dizaine& (0+255),b
   917  000ABE                     
   918                           ; BSR set to: 0
   919                           ;main.c: 101: lcd_putMessage(niveau1);
   920  000ABE  0E2A               	movlw	low _niveau1
   921  000AC0  0100               	movlb	0	; force () banked
   922  000AC2  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
   923  000AC4  0E06               	movlw	high _niveau1
   924  000AC6  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   925  000AC8  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
   926  000ACA  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   927  000ACC  A4D8               	btfss	status,2,c
   928  000ACE  0E00               	movlw	low (__mediumconst shr (0+16))
   929  000AD0  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   930  000AD2  EC6E  F009         	call	_lcd_putMessage	;wreg free
   931  000AD6                     
   932                           ;main.c: 102: _delay((unsigned long)((900)*(1000000/4000.0)));
   933  000AD6  0E02               	movlw	2
   934  000AD8  0100               	movlb	0	; force () banked
   935  000ADA  6FB1               	movwf	(??_main+1)& (0+255),b
   936  000ADC  0E25               	movlw	37
   937  000ADE  6FB0               	movwf	??_main& (0+255),b
   938  000AE0  0E31               	movlw	49
   939  000AE2                     u1437:
   940  000AE2  2EE8               	decfsz	wreg,f,c
   941  000AE4  D7FE               	bra	u1437
   942  000AE6  2FB0               	decfsz	??_main& (0+255),f,b
   943  000AE8  D7FC               	bra	u1437
   944  000AEA  2FB1               	decfsz	(??_main+1)& (0+255),f,b
   945  000AEC  D7FA               	bra	u1437
   946  000AEE  F000 F000          	nop2	
   947  000AF2                     l2607:
   948                           
   949                           ;main.c: 103: };main.c: 104: lcd_gotoXY(posX,4);
   950  000AF2  0E04               	movlw	4
   951  000AF4  0100               	movlb	0	; force () banked
   952  000AF6  6F63               	movwf	lcd_gotoXY@y& (0+255),b
   953  000AF8  0100               	movlb	0	; force () banked
   954  000AFA  51E8               	movf	main@posX& (0+255),w,b
   955  000AFC  ECF7  F00A         	call	_lcd_gotoXY
   956  000B00                     
   957                           ;main.c: 105: m_tempsDAfficher = 0;
   958  000B00  0E00               	movlw	0
   959  000B02  0100               	movlb	0	; force () banked
   960  000B04  6FF0               	movwf	_m_tempsDAfficher& (0+255),b
   961  000B06                     l2611:
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 106: };main.c: 107: deplace(&posX);
   965  000B06  0EE8               	movlw	low main@posX
   966  000B08  0100               	movlb	0	; force () banked
   967  000B0A  6F65               	movwf	deplace@x& (0+255),b
   968  000B0C  0E00               	movlw	high main@posX
   969  000B0E  6F66               	movwf	(deplace@x+1)& (0+255),b
   970  000B10  EC25  F008         	call	_deplace	;wreg free
   971  000B14                     
   972                           ;main.c: 108: feu(posX, &pts);
   973  000B14  0EE6               	movlw	low main@pts
   974  000B16  0100               	movlb	0	; force () banked
   975  000B18  6F66               	movwf	feu@pts& (0+255),b
   976  000B1A  0E00               	movlw	high main@pts
   977  000B1C  6F67               	movwf	(feu@pts+1)& (0+255),b
   978  000B1E  0100               	movlb	0	; force () banked
   979  000B20  51E8               	movf	main@posX& (0+255),w,b
   980  000B22  EC2A  F003         	call	_feu
   981  000B26                     
   982                           ;main.c: 109: if((pts/ 10 % 10) != dizaine)
   983  000B26  0E00               	movlw	0
   984  000B28  0100               	movlb	0	; force () banked
   985  000B2A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   986  000B2C  0E0A               	movlw	10
   987  000B2E  6F62               	movwf	___awdiv@divisor& (0+255),b
   988  000B30  C0E6  F060         	movff	main@pts,___awdiv@dividend
   989  000B34  C0E7  F061         	movff	main@pts+1,___awdiv@dividend+1
   990  000B38  EC0B  F009         	call	___awdiv	;wreg free
   991  000B3C  C060  F06E         	movff	?___awdiv,___awmod@dividend
   992  000B40  C061  F06F         	movff	?___awdiv+1,___awmod@dividend+1
   993  000B44  0E00               	movlw	0
   994  000B46  0100               	movlb	0	; force () banked
   995  000B48  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
   996  000B4A  0E0A               	movlw	10
   997  000B4C  6F70               	movwf	___awmod@divisor& (0+255),b
   998  000B4E  ECC8  F009         	call	___awmod	;wreg free
   999  000B52  0100               	movlb	0	; force () banked
  1000  000B54  51E4               	movf	main@dizaine& (0+255),w,b
  1001  000B56  0100               	movlb	0	; force () banked
  1002  000B58  196E               	xorwf	?___awmod& (0+255),w,b
  1003  000B5A  E10B               	bnz	u1410
  1004  000B5C  0100               	movlb	0	; force () banked
  1005  000B5E  51E5               	movf	(main@dizaine+1)& (0+255),w,b
  1006  000B60  0100               	movlb	0	; force () banked
  1007  000B62  196F               	xorwf	(?___awmod+1)& (0+255),w,b
  1008  000B64  B4D8               	btfsc	status,2,c
  1009  000B66  EFB7  F005         	goto	u1411
  1010  000B6A  EFB9  F005         	goto	u1410
  1011  000B6E                     u1411:
  1012  000B6E  EFED  F005         	goto	l2629
  1013  000B72                     u1410:
  1014  000B72                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 110: {;main.c: 111: m_niveau++;
  1017  000B72  0100               	movlb	0	; force () banked
  1018  000B74  4BEE               	infsnz	_m_niveau& (0+255),f,b
  1019  000B76  2BEF               	incf	(_m_niveau+1)& (0+255),f,b
  1020                           
  1021                           ;main.c: 112: dizaine++;
  1022  000B78  0100               	movlb	0	; force () banked
  1023  000B7A  4BE4               	infsnz	main@dizaine& (0+255),f,b
  1024  000B7C  2BE5               	incf	(main@dizaine+1)& (0+255),f,b
  1025  000B7E                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 113: lcd_effaceAffichage();
  1028  000B7E  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
  1029  000B82                     
  1030                           ;main.c: 114: sprintf(bufferNiveau, "Niveau #%d", m_niveau);
  1031  000B82  0EB2               	movlw	low main@bufferNiveau
  1032  000B84  0100               	movlb	0	; force () banked
  1033  000B86  6F6C               	movwf	sprintf@sp& (0+255),b
  1034  000B88  0E00               	movlw	high main@bufferNiveau
  1035  000B8A  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  1036  000B8C  0E47               	movlw	low STR_1
  1037  000B8E  0100               	movlb	0	; force () banked
  1038  000B90  6F6E               	movwf	sprintf@f& (0+255),b
  1039  000B92  0E06               	movlw	high STR_1
  1040  000B94  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  1041  000B96  C0EE  F070         	movff	_m_niveau,?_sprintf+4
  1042  000B9A  C0EF  F071         	movff	_m_niveau+1,?_sprintf+5
  1043  000B9E  ECFA  F005         	call	_sprintf	;wreg free
  1044  000BA2                     
  1045                           ;main.c: 115: lcd_putMessage(bufferNiveau);
  1046  000BA2  0EB2               	movlw	low main@bufferNiveau
  1047  000BA4  0100               	movlb	0	; force () banked
  1048  000BA6  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  1049  000BA8  0E00               	movlw	high main@bufferNiveau
  1050  000BAA  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  1051  000BAC  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  1052  000BAE  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  1053  000BB0  A4D8               	btfss	status,2,c
  1054  000BB2  0E20               	movlw	32
  1055  000BB4  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  1056  000BB6  EC6E  F009         	call	_lcd_putMessage	;wreg free
  1057  000BBA                     
  1058                           ;main.c: 116: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1059  000BBA  0E02               	movlw	2
  1060  000BBC  0100               	movlb	0	; force () banked
  1061  000BBE  6FB1               	movwf	(??_main+1)& (0+255),b
  1062  000BC0  0E45               	movlw	69
  1063  000BC2  6FB0               	movwf	??_main& (0+255),b
  1064  000BC4  0EA9               	movlw	169
  1065  000BC6                     u1447:
  1066  000BC6  2EE8               	decfsz	wreg,f,c
  1067  000BC8  D7FE               	bra	u1447
  1068  000BCA  2FB0               	decfsz	??_main& (0+255),f,b
  1069  000BCC  D7FC               	bra	u1447
  1070  000BCE  2FB1               	decfsz	(??_main+1)& (0+255),f,b
  1071  000BD0  D7FA               	bra	u1447
  1072  000BD2  F000 F000          	nop2	
  1073  000BD6                     
  1074                           ;main.c: 117: videAliens();
  1075  000BD6  ECA4  F007         	call	_videAliens	;wreg free
  1076  000BDA                     l2629:
  1077                           
  1078                           ;main.c: 118: };main.c: 119: _delay((unsigned long)((100)*(1000000/4000.0)));
  1079  000BDA  0E21               	movlw	33
  1080  000BDC  0100               	movlb	0	; force () banked
  1081  000BDE  6FB0               	movwf	??_main& (0+255),b
  1082  000BE0  0E76               	movlw	118
  1083  000BE2                     u1457:
  1084  000BE2  2EE8               	decfsz	wreg,f,c
  1085  000BE4  D7FE               	bra	u1457
  1086  000BE6  2FB0               	decfsz	??_main& (0+255),f,b
  1087  000BE8  D7FC               	bra	u1457
  1088  000BEA  F000               	nop	
  1089  000BEC  EF2C  F005         	goto	l2583
  1090  000BF0  EF16  F000         	goto	start
  1091  000BF4                     __end_of_main:
  1092                           	opt callstack 0
  1093                           
  1094 ;; *************** function _videAliens *****************
  1095 ;; Defined at:
  1096 ;;		line 290 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  j               2   10[BANK0 ] int 
  1101 ;;  i               2    8[BANK0 ] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         0       4       0       0       0       0       0
  1113 ;;      Temps:          0       2       0       0       0       0       0
  1114 ;;      Totals:         0       6       0       0       0       0       0
  1115 ;;Total ram usage:        6 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    5
  1118 ;; This function calls:
  1119 ;;		___wmul
  1120 ;;		_lcd_effaceAffichage
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text1
  1127  000F48                     __ptext1:
  1128                           	opt callstack 0
  1129  000F48                     _videAliens:
  1130                           	opt callstack 25
  1131  000F48                     
  1132                           ;main.c: 292: int i=0;
  1133  000F48  0E00               	movlw	0
  1134  000F4A  0100               	movlb	0	; force () banked
  1135  000F4C  6F69               	movwf	(videAliens@i+1)& (0+255),b
  1136  000F4E  0E00               	movlw	0
  1137  000F50  6F68               	movwf	videAliens@i& (0+255),b
  1138                           
  1139                           ;main.c: 293: int j=0;
  1140  000F52  0E00               	movlw	0
  1141  000F54  0100               	movlb	0	; force () banked
  1142  000F56  6F6B               	movwf	(videAliens@j+1)& (0+255),b
  1143  000F58  0E00               	movlw	0
  1144  000F5A  6F6A               	movwf	videAliens@j& (0+255),b
  1145  000F5C                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 294: lcd_effaceAffichage();
  1148  000F5C  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
  1149  000F60                     
  1150                           ;main.c: 295: for(i=0;i<4;i++)
  1151  000F60  0E00               	movlw	0
  1152  000F62  0100               	movlb	0	; force () banked
  1153  000F64  6F69               	movwf	(videAliens@i+1)& (0+255),b
  1154  000F66  0E00               	movlw	0
  1155  000F68  6F68               	movwf	videAliens@i& (0+255),b
  1156  000F6A                     
  1157                           ; BSR set to: 0
  1158  000F6A  0100               	movlb	0	; force () banked
  1159  000F6C  BF69               	btfsc	(videAliens@i+1)& (0+255),7,b
  1160  000F6E  EFC2  F007         	goto	u1171
  1161  000F72  5169               	movf	(videAliens@i+1)& (0+255),w,b
  1162  000F74  E109               	bnz	u1170
  1163  000F76  0E04               	movlw	4
  1164  000F78  5D68               	subwf	videAliens@i& (0+255),w,b
  1165  000F7A  A0D8               	btfss	status,0,c
  1166  000F7C  EFC2  F007         	goto	u1171
  1167  000F80  EFC4  F007         	goto	u1170
  1168  000F84                     u1171:
  1169  000F84  EFC6  F007         	goto	l2413
  1170  000F88                     u1170:
  1171  000F88  EF24  F008         	goto	l147
  1172  000F8C                     l2413:
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 296: {;main.c: 297: for(j=0;j<20;j++)
  1176  000F8C  0E00               	movlw	0
  1177  000F8E  0100               	movlb	0	; force () banked
  1178  000F90  6F6B               	movwf	(videAliens@j+1)& (0+255),b
  1179  000F92  0E00               	movlw	0
  1180  000F94  6F6A               	movwf	videAliens@j& (0+255),b
  1181  000F96                     
  1182                           ; BSR set to: 0
  1183  000F96  0100               	movlb	0	; force () banked
  1184  000F98  BF6B               	btfsc	(videAliens@j+1)& (0+255),7,b
  1185  000F9A  EFD8  F007         	goto	u1181
  1186  000F9E  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1187  000FA0  E109               	bnz	u1180
  1188  000FA2  0E14               	movlw	20
  1189  000FA4  5D6A               	subwf	videAliens@j& (0+255),w,b
  1190  000FA6  A0D8               	btfss	status,0,c
  1191  000FA8  EFD8  F007         	goto	u1181
  1192  000FAC  EFDA  F007         	goto	u1180
  1193  000FB0                     u1181:
  1194  000FB0  EFDC  F007         	goto	l2419
  1195  000FB4                     u1180:
  1196  000FB4  EF12  F008         	goto	l2425
  1197  000FB8                     l2419:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 298: {;main.c: 299: m_aliens[i][j]=' ';
  1201  000FB8  C068  F060         	movff	videAliens@i,___wmul@multiplier
  1202  000FBC  C069  F061         	movff	videAliens@i+1,___wmul@multiplier+1
  1203  000FC0  0E00               	movlw	0
  1204  000FC2  0100               	movlb	0	; force () banked
  1205  000FC4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1206  000FC6  0E15               	movlw	21
  1207  000FC8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1208  000FCA  EC93  F00D         	call	___wmul	;wreg free
  1209  000FCE  0E40               	movlw	low _m_aliens
  1210  000FD0  0100               	movlb	0	; force () banked
  1211  000FD2  6F66               	movwf	??_videAliens& (0+255),b
  1212  000FD4  0E01               	movlw	high _m_aliens
  1213  000FD6  6F67               	movwf	(??_videAliens+1)& (0+255),b
  1214  000FD8  0100               	movlb	0	; force () banked
  1215  000FDA  5160               	movf	?___wmul& (0+255),w,b
  1216  000FDC  0100               	movlb	0	; force () banked
  1217  000FDE  2766               	addwf	??_videAliens& (0+255),f,b
  1218  000FE0  0100               	movlb	0	; force () banked
  1219  000FE2  5161               	movf	(?___wmul+1)& (0+255),w,b
  1220  000FE4  0100               	movlb	0	; force () banked
  1221  000FE6  2367               	addwfc	(??_videAliens+1)& (0+255),f,b
  1222  000FE8  0100               	movlb	0	; force () banked
  1223  000FEA  516A               	movf	videAliens@j& (0+255),w,b
  1224  000FEC  0100               	movlb	0	; force () banked
  1225  000FEE  2566               	addwf	??_videAliens& (0+255),w,b
  1226  000FF0  6ED9               	movwf	fsr2l,c
  1227  000FF2  0100               	movlb	0	; force () banked
  1228  000FF4  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1229  000FF6  0100               	movlb	0	; force () banked
  1230  000FF8  2167               	addwfc	(??_videAliens+1)& (0+255),w,b
  1231  000FFA  6EDA               	movwf	fsr2h,c
  1232  000FFC  0E20               	movlw	32
  1233  000FFE  6EDF               	movwf	indf2,c
  1234  001000                     
  1235                           ; BSR set to: 0
  1236  001000  0100               	movlb	0	; force () banked
  1237  001002  4B6A               	infsnz	videAliens@j& (0+255),f,b
  1238  001004  2B6B               	incf	(videAliens@j+1)& (0+255),f,b
  1239  001006                     
  1240                           ; BSR set to: 0
  1241  001006  0100               	movlb	0	; force () banked
  1242  001008  BF6B               	btfsc	(videAliens@j+1)& (0+255),7,b
  1243  00100A  EF10  F008         	goto	u1191
  1244  00100E  516B               	movf	(videAliens@j+1)& (0+255),w,b
  1245  001010  E109               	bnz	u1190
  1246  001012  0E14               	movlw	20
  1247  001014  5D6A               	subwf	videAliens@j& (0+255),w,b
  1248  001016  A0D8               	btfss	status,0,c
  1249  001018  EF10  F008         	goto	u1191
  1250  00101C  EF12  F008         	goto	u1190
  1251  001020                     u1191:
  1252  001020  EFDC  F007         	goto	l2419
  1253  001024                     u1190:
  1254  001024                     l2425:
  1255                           
  1256                           ; BSR set to: 0
  1257  001024  0100               	movlb	0	; force () banked
  1258  001026  4B68               	infsnz	videAliens@i& (0+255),f,b
  1259  001028  2B69               	incf	(videAliens@i+1)& (0+255),f,b
  1260  00102A                     
  1261                           ; BSR set to: 0
  1262  00102A  0100               	movlb	0	; force () banked
  1263  00102C  BF69               	btfsc	(videAliens@i+1)& (0+255),7,b
  1264  00102E  EF22  F008         	goto	u1201
  1265  001032  5169               	movf	(videAliens@i+1)& (0+255),w,b
  1266  001034  E109               	bnz	u1200
  1267  001036  0E04               	movlw	4
  1268  001038  5D68               	subwf	videAliens@i& (0+255),w,b
  1269  00103A  A0D8               	btfss	status,0,c
  1270  00103C  EF22  F008         	goto	u1201
  1271  001040  EF24  F008         	goto	u1200
  1272  001044                     u1201:
  1273  001044  EFC6  F007         	goto	l2413
  1274  001048                     u1200:
  1275  001048                     l147:
  1276                           
  1277                           ; BSR set to: 0
  1278  001048  0012               	return		;funcret
  1279  00104A                     __end_of_videAliens:
  1280                           	opt callstack 0
  1281                           
  1282 ;; *************** function _perdu *****************
  1283 ;; Defined at:
  1284 ;;		line 254 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  i               2    1[BANK0 ] int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1298 ;;      Params:         0       0       0       0       0       0       0
  1299 ;;      Locals:         0       2       0       0       0       0       0
  1300 ;;      Temps:          0       1       0       0       0       0       0
  1301 ;;      Totals:         0       3       0       0       0       0       0
  1302 ;;Total ram usage:        3 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text2
  1313  00114A                     __ptext2:
  1314                           	opt callstack 0
  1315  00114A                     _perdu:
  1316                           	opt callstack 29
  1317  00114A                     
  1318                           ;main.c: 256: int i=0;
  1319  00114A  0E00               	movlw	0
  1320  00114C  0100               	movlb	0	; force () banked
  1321  00114E  6F62               	movwf	(perdu@i+1)& (0+255),b
  1322  001150  0E00               	movlw	0
  1323  001152  6F61               	movwf	perdu@i& (0+255),b
  1324                           
  1325                           ;main.c: 257: for(i=0;i<20;i++)
  1326  001154  0E00               	movlw	0
  1327  001156  6F62               	movwf	(perdu@i+1)& (0+255),b
  1328  001158  0E00               	movlw	0
  1329  00115A  6F61               	movwf	perdu@i& (0+255),b
  1330  00115C                     
  1331                           ; BSR set to: 0
  1332  00115C  0100               	movlb	0	; force () banked
  1333  00115E  BF62               	btfsc	(perdu@i+1)& (0+255),7,b
  1334  001160  EFBB  F008         	goto	u1121
  1335  001164  5162               	movf	(perdu@i+1)& (0+255),w,b
  1336  001166  E109               	bnz	u1120
  1337  001168  0E14               	movlw	20
  1338  00116A  5D61               	subwf	perdu@i& (0+255),w,b
  1339  00116C  A0D8               	btfss	status,0,c
  1340  00116E  EFBB  F008         	goto	u1121
  1341  001172  EFBD  F008         	goto	u1120
  1342  001176                     u1121:
  1343  001176  EFBF  F008         	goto	l2369
  1344  00117A                     u1120:
  1345  00117A  EF09  F009         	goto	l2391
  1346  00117E                     l2369:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 258: {;main.c: 259: if(m_aliens[3][i] == 1)
  1350  00117E  0E7F               	movlw	low (_m_aliens+63)
  1351  001180  0100               	movlb	0	; force () banked
  1352  001182  2561               	addwf	perdu@i& (0+255),w,b
  1353  001184  6ED9               	movwf	fsr2l,c
  1354  001186  0E01               	movlw	high (_m_aliens+63)
  1355  001188  2162               	addwfc	(perdu@i+1)& (0+255),w,b
  1356  00118A  6EDA               	movwf	fsr2h,c
  1357  00118C  04DE               	decf	postinc2,w,c
  1358  00118E  A4D8               	btfss	status,2,c
  1359  001190  EFCC  F008         	goto	u1131
  1360  001194  EFCE  F008         	goto	u1130
  1361  001198                     u1131:
  1362  001198  EFD1  F008         	goto	l2375
  1363  00119C                     u1130:
  1364  00119C                     
  1365                           ; BSR set to: 0
  1366                           ;main.c: 260: {;main.c: 261: return 0;
  1367  00119C  0E00               	movlw	0
  1368  00119E  EF0A  F009         	goto	l135
  1369  0011A2                     l2375:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 262: };main.c: 263: if(m_aliens[3][i] == 2)
  1373  0011A2  0E7F               	movlw	low (_m_aliens+63)
  1374  0011A4  0100               	movlb	0	; force () banked
  1375  0011A6  2561               	addwf	perdu@i& (0+255),w,b
  1376  0011A8  6ED9               	movwf	fsr2l,c
  1377  0011AA  0E01               	movlw	high (_m_aliens+63)
  1378  0011AC  2162               	addwfc	(perdu@i+1)& (0+255),w,b
  1379  0011AE  6EDA               	movwf	fsr2h,c
  1380  0011B0  0E02               	movlw	2
  1381  0011B2  18DE               	xorwf	postinc2,w,c
  1382  0011B4  A4D8               	btfss	status,2,c
  1383  0011B6  EFDF  F008         	goto	u1141
  1384  0011BA  EFE1  F008         	goto	u1140
  1385  0011BE                     u1141:
  1386  0011BE  EFE4  F008         	goto	l2381
  1387  0011C2                     u1140:
  1388  0011C2                     
  1389                           ; BSR set to: 0
  1390                           ;main.c: 264: {;main.c: 265: return 0;
  1391  0011C2  0E00               	movlw	0
  1392  0011C4  EF0A  F009         	goto	l135
  1393  0011C8                     l2381:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main.c: 266: };main.c: 267: if(m_aliens[3][i] == 3)
  1397  0011C8  0E7F               	movlw	low (_m_aliens+63)
  1398  0011CA  0100               	movlb	0	; force () banked
  1399  0011CC  2561               	addwf	perdu@i& (0+255),w,b
  1400  0011CE  6ED9               	movwf	fsr2l,c
  1401  0011D0  0E01               	movlw	high (_m_aliens+63)
  1402  0011D2  2162               	addwfc	(perdu@i+1)& (0+255),w,b
  1403  0011D4  6EDA               	movwf	fsr2h,c
  1404  0011D6  0E03               	movlw	3
  1405  0011D8  18DE               	xorwf	postinc2,w,c
  1406  0011DA  A4D8               	btfss	status,2,c
  1407  0011DC  EFF2  F008         	goto	u1151
  1408  0011E0  EFF4  F008         	goto	u1150
  1409  0011E4                     u1151:
  1410  0011E4  EFF7  F008         	goto	l2387
  1411  0011E8                     u1150:
  1412  0011E8                     
  1413                           ; BSR set to: 0
  1414                           ;main.c: 268: {;main.c: 269: return 0;
  1415  0011E8  0E00               	movlw	0
  1416  0011EA  EF0A  F009         	goto	l135
  1417  0011EE                     l2387:
  1418                           
  1419                           ; BSR set to: 0
  1420  0011EE  0100               	movlb	0	; force () banked
  1421  0011F0  4B61               	infsnz	perdu@i& (0+255),f,b
  1422  0011F2  2B62               	incf	(perdu@i+1)& (0+255),f,b
  1423  0011F4                     
  1424                           ; BSR set to: 0
  1425  0011F4  0100               	movlb	0	; force () banked
  1426  0011F6  BF62               	btfsc	(perdu@i+1)& (0+255),7,b
  1427  0011F8  EF07  F009         	goto	u1161
  1428  0011FC  5162               	movf	(perdu@i+1)& (0+255),w,b
  1429  0011FE  E109               	bnz	u1160
  1430  001200  0E14               	movlw	20
  1431  001202  5D61               	subwf	perdu@i& (0+255),w,b
  1432  001204  A0D8               	btfss	status,0,c
  1433  001206  EF07  F009         	goto	u1161
  1434  00120A  EF09  F009         	goto	u1160
  1435  00120E                     u1161:
  1436  00120E  EFBF  F008         	goto	l2369
  1437  001212                     u1160:
  1438  001212                     l2391:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 270: };main.c: 271: };main.c: 273: return 1;
  1442  001212  0E01               	movlw	1
  1443  001214                     l135:
  1444                           
  1445                           ; BSR set to: 0
  1446  001214  0012               	return		;funcret
  1447  001216                     __end_of_perdu:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _nouveauxAliens *****************
  1451 ;; Defined at:
  1452 ;;		line 132 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  j               2   23[BANK0 ] int 
  1457 ;;  i               2   21[BANK0 ] int 
  1458 ;;  sorteAliens     1   26[BANK0 ] unsigned char 
  1459 ;;  endroitAlien    1   25[BANK0 ] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1469 ;;      Params:         0       0       0       0       0       0       0
  1470 ;;      Locals:         0       6       0       0       0       0       0
  1471 ;;      Temps:          0       1       0       0       0       0       0
  1472 ;;      Totals:         0       7       0       0       0       0       0
  1473 ;;Total ram usage:        7 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    3
  1476 ;; This function calls:
  1477 ;;		___awmod
  1478 ;;		_rand
  1479 ;;		_strcpy
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text3
  1486  000DF8                     __ptext3:
  1487                           	opt callstack 0
  1488  000DF8                     _nouveauxAliens:
  1489                           	opt callstack 27
  1490  000DF8                     
  1491                           ;main.c: 134: char sorteAliens =1;
  1492  000DF8  0E01               	movlw	1
  1493  000DFA  0100               	movlb	0	; force () banked
  1494  000DFC  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1495                           
  1496                           ;main.c: 135: int i=0;
  1497  000DFE  0E00               	movlw	0
  1498  000E00  0100               	movlb	0	; force () banked
  1499  000E02  6F76               	movwf	(nouveauxAliens@i+1)& (0+255),b
  1500  000E04  0E00               	movlw	0
  1501  000E06  6F75               	movwf	nouveauxAliens@i& (0+255),b
  1502                           
  1503                           ;main.c: 136: int j=0;
  1504  000E08  0E00               	movlw	0
  1505  000E0A  0100               	movlb	0	; force () banked
  1506  000E0C  6F78               	movwf	(nouveauxAliens@j+1)& (0+255),b
  1507  000E0E  0E00               	movlw	0
  1508  000E10  6F77               	movwf	nouveauxAliens@j& (0+255),b
  1509                           
  1510                           ;main.c: 137: char endroitAliens=0;
  1511  000E12  0E00               	movlw	0
  1512  000E14  0100               	movlb	0	; force () banked
  1513  000E16  6F79               	movwf	nouveauxAliens@endroitAliens& (0+255),b
  1514  000E18                     
  1515                           ; BSR set to: 0
  1516                           ;main.c: 139: strcpy(m_aliens[3],m_aliens[2]);
  1517  000E18  0E7F               	movlw	low (_m_aliens+63)
  1518  000E1A  0100               	movlb	0	; force () banked
  1519  000E1C  6F60               	movwf	strcpy@to& (0+255),b
  1520  000E1E  0E01               	movlw	high (_m_aliens+63)
  1521  000E20  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1522  000E22  0E6A               	movlw	low (_m_aliens+42)
  1523  000E24  0100               	movlb	0	; force () banked
  1524  000E26  6F62               	movwf	strcpy@from& (0+255),b
  1525  000E28  0E01               	movlw	high (_m_aliens+42)
  1526  000E2A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1527  000E2C  EC0C  F00D         	call	_strcpy	;wreg free
  1528  000E30                     
  1529                           ;main.c: 140: strcpy(m_aliens[2],m_aliens[1]);
  1530  000E30  0E6A               	movlw	low (_m_aliens+42)
  1531  000E32  0100               	movlb	0	; force () banked
  1532  000E34  6F60               	movwf	strcpy@to& (0+255),b
  1533  000E36  0E01               	movlw	high (_m_aliens+42)
  1534  000E38  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1535  000E3A  0E55               	movlw	low (_m_aliens+21)
  1536  000E3C  0100               	movlb	0	; force () banked
  1537  000E3E  6F62               	movwf	strcpy@from& (0+255),b
  1538  000E40  0E01               	movlw	high (_m_aliens+21)
  1539  000E42  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1540  000E44  EC0C  F00D         	call	_strcpy	;wreg free
  1541  000E48                     
  1542                           ;main.c: 141: strcpy(m_aliens[1],m_aliens[0]);
  1543  000E48  0E55               	movlw	low (_m_aliens+21)
  1544  000E4A  0100               	movlb	0	; force () banked
  1545  000E4C  6F60               	movwf	strcpy@to& (0+255),b
  1546  000E4E  0E01               	movlw	high (_m_aliens+21)
  1547  000E50  6F61               	movwf	(strcpy@to+1)& (0+255),b
  1548  000E52  0E40               	movlw	low _m_aliens
  1549  000E54  0100               	movlb	0	; force () banked
  1550  000E56  6F62               	movwf	strcpy@from& (0+255),b
  1551  000E58  0E01               	movlw	high _m_aliens
  1552  000E5A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  1553  000E5C  EC0C  F00D         	call	_strcpy	;wreg free
  1554                           
  1555                           ;main.c: 143: while(j<20)
  1556  000E60  EF3E  F007         	goto	l2335
  1557  000E64                     l2331:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main.c: 144: {;main.c: 145: m_aliens[0][j]= ' ';
  1561  000E64  0E40               	movlw	low _m_aliens
  1562  000E66  0100               	movlb	0	; force () banked
  1563  000E68  2577               	addwf	nouveauxAliens@j& (0+255),w,b
  1564  000E6A  6ED9               	movwf	fsr2l,c
  1565  000E6C  0E01               	movlw	high _m_aliens
  1566  000E6E  2178               	addwfc	(nouveauxAliens@j+1)& (0+255),w,b
  1567  000E70  6EDA               	movwf	fsr2h,c
  1568  000E72  0E20               	movlw	32
  1569  000E74  6EDF               	movwf	indf2,c
  1570  000E76                     
  1571                           ; BSR set to: 0
  1572                           ;main.c: 146: j++;
  1573  000E76  0100               	movlb	0	; force () banked
  1574  000E78  4B77               	infsnz	nouveauxAliens@j& (0+255),f,b
  1575  000E7A  2B78               	incf	(nouveauxAliens@j+1)& (0+255),f,b
  1576  000E7C                     l2335:
  1577  000E7C  0100               	movlb	0	; force () banked
  1578  000E7E  BF78               	btfsc	(nouveauxAliens@j+1)& (0+255),7,b
  1579  000E80  EF4B  F007         	goto	u1081
  1580  000E84  5178               	movf	(nouveauxAliens@j+1)& (0+255),w,b
  1581  000E86  E109               	bnz	u1080
  1582  000E88  0E14               	movlw	20
  1583  000E8A  5D77               	subwf	nouveauxAliens@j& (0+255),w,b
  1584  000E8C  A0D8               	btfss	status,0,c
  1585  000E8E  EF4B  F007         	goto	u1081
  1586  000E92  EF4D  F007         	goto	u1080
  1587  000E96                     u1081:
  1588  000E96  EF32  F007         	goto	l2331
  1589  000E9A                     u1080:
  1590  000E9A  EF8F  F007         	goto	l2351
  1591  000E9E                     l2337:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 151: {;main.c: 152: endroitAliens = rand()%20;
  1595  000E9E  EC66  F00C         	call	_rand	;wreg free
  1596  000EA2  C06C  F06E         	movff	?_rand,___awmod@dividend
  1597  000EA6  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  1598  000EAA  0E00               	movlw	0
  1599  000EAC  0100               	movlb	0	; force () banked
  1600  000EAE  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1601  000EB0  0E14               	movlw	20
  1602  000EB2  6F70               	movwf	___awmod@divisor& (0+255),b
  1603  000EB4  ECC8  F009         	call	___awmod	;wreg free
  1604  000EB8  0100               	movlb	0	; force () banked
  1605  000EBA  516E               	movf	?___awmod& (0+255),w,b
  1606  000EBC  0100               	movlb	0	; force () banked
  1607  000EBE  6F79               	movwf	nouveauxAliens@endroitAliens& (0+255),b
  1608  000EC0                     
  1609                           ; BSR set to: 0
  1610                           ;main.c: 153: };main.c: 154: while(m_aliens[0][endroitAliens] != ' ');
  1611  000EC0  0E40               	movlw	low _m_aliens
  1612  000EC2  0100               	movlb	0	; force () banked
  1613  000EC4  2579               	addwf	nouveauxAliens@endroitAliens& (0+255),w,b
  1614  000EC6  6ED9               	movwf	fsr2l,c
  1615  000EC8  6ADA               	clrf	fsr2h,c
  1616  000ECA  0E01               	movlw	high _m_aliens
  1617  000ECC  22DA               	addwfc	fsr2h,f,c
  1618  000ECE  0E20               	movlw	32
  1619  000ED0  18DE               	xorwf	postinc2,w,c
  1620  000ED2  A4D8               	btfss	status,2,c
  1621  000ED4  EF6E  F007         	goto	u1091
  1622  000ED8  EF70  F007         	goto	u1090
  1623  000EDC                     u1091:
  1624  000EDC  EF4F  F007         	goto	l2337
  1625  000EE0                     u1090:
  1626  000EE0                     
  1627                           ; BSR set to: 0
  1628                           ;main.c: 155: sorteAliens = rand()%4;
  1629  000EE0  EC66  F00C         	call	_rand	;wreg free
  1630  000EE4  0100               	movlb	0	; force () banked
  1631  000EE6  516C               	movf	?_rand& (0+255),w,b
  1632  000EE8  0B03               	andlw	3
  1633  000EEA  0100               	movlb	0	; force () banked
  1634  000EEC  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1635  000EEE                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 156: if(sorteAliens == 0)
  1638  000EEE  0100               	movlb	0	; force () banked
  1639  000EF0  517A               	movf	nouveauxAliens@sorteAliens& (0+255),w,b
  1640  000EF2  A4D8               	btfss	status,2,c
  1641  000EF4  EF7E  F007         	goto	u1101
  1642  000EF8  EF80  F007         	goto	u1100
  1643  000EFC                     u1101:
  1644  000EFC  EF83  F007         	goto	l2347
  1645  000F00                     u1100:
  1646  000F00                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 157: {;main.c: 158: sorteAliens = sorteAliens+1;
  1649  000F00  0100               	movlb	0	; force () banked
  1650  000F02  297A               	incf	nouveauxAliens@sorteAliens& (0+255),w,b
  1651  000F04  6F7A               	movwf	nouveauxAliens@sorteAliens& (0+255),b
  1652  000F06                     l2347:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 159: };main.c: 160: m_aliens[0][endroitAliens]= sorteAliens;
  1656  000F06  0E40               	movlw	low _m_aliens
  1657  000F08  0100               	movlb	0	; force () banked
  1658  000F0A  2579               	addwf	nouveauxAliens@endroitAliens& (0+255),w,b
  1659  000F0C  6ED9               	movwf	fsr2l,c
  1660  000F0E  6ADA               	clrf	fsr2h,c
  1661  000F10  0E01               	movlw	high _m_aliens
  1662  000F12  22DA               	addwfc	fsr2h,f,c
  1663  000F14  C07A  FFDF         	movff	nouveauxAliens@sorteAliens,indf2
  1664  000F18                     
  1665                           ; BSR set to: 0
  1666                           ;main.c: 163: i++;
  1667  000F18  0100               	movlb	0	; force () banked
  1668  000F1A  4B75               	infsnz	nouveauxAliens@i& (0+255),f,b
  1669  000F1C  2B76               	incf	(nouveauxAliens@i+1)& (0+255),f,b
  1670  000F1E                     l2351:
  1671                           
  1672                           ; BSR set to: 0
  1673  000F1E  0100               	movlb	0	; force () banked
  1674  000F20  51EE               	movf	_m_niveau& (0+255),w,b
  1675  000F22  0100               	movlb	0	; force () banked
  1676  000F24  5D75               	subwf	nouveauxAliens@i& (0+255),w,b
  1677  000F26  5176               	movf	(nouveauxAliens@i+1)& (0+255),w,b
  1678  000F28  0A80               	xorlw	128
  1679  000F2A  0100               	movlb	0	; force () banked
  1680  000F2C  6F74               	movwf	??_nouveauxAliens& (0+255),b
  1681  000F2E  0100               	movlb	0	; force () banked
  1682  000F30  51EF               	movf	(_m_niveau+1)& (0+255),w,b
  1683  000F32  0A80               	xorlw	128
  1684  000F34  0100               	movlb	0	; force () banked
  1685  000F36  5974               	subwfb	??_nouveauxAliens& (0+255),w,b
  1686  000F38  A0D8               	btfss	status,0,c
  1687  000F3A  EFA1  F007         	goto	u1111
  1688  000F3E  EFA3  F007         	goto	u1110
  1689  000F42                     u1111:
  1690  000F42  EF4F  F007         	goto	l2337
  1691  000F46                     u1110:
  1692  000F46                     
  1693                           ; BSR set to: 0
  1694  000F46  0012               	return		;funcret
  1695  000F48                     __end_of_nouveauxAliens:
  1696                           	opt callstack 0
  1697                           
  1698 ;; *************** function _strcpy *****************
  1699 ;; Defined at:
  1700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  to              2    0[BANK0 ] PTR unsigned char 
  1703 ;;		 -> m_aliens(84), 
  1704 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  1705 ;;		 -> m_aliens(84), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  1708 ;;		 -> m_aliens(84), 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    0[BANK0 ] PTR unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1718 ;;      Params:         0       4       0       0       0       0       0
  1719 ;;      Locals:         0       2       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0
  1721 ;;      Totals:         0       6       0       0       0       0       0
  1722 ;;Total ram usage:        6 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    1
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_nouveauxAliens
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733  001A18                     __ptext4:
  1734                           	opt callstack 0
  1735  001A18                     _strcpy:
  1736                           	opt callstack 28
  1737  001A18  C060  F064         	movff	strcpy@to,strcpy@cp
  1738  001A1C  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  1739  001A20  EF17  F00D         	goto	l2161
  1740  001A24                     l2159:
  1741  001A24  0100               	movlb	0	; () banked
  1742  001A26  4B64               	infsnz	strcpy@cp& (0+255),f,b
  1743  001A28  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  1744  001A2A  4B62               	infsnz	strcpy@from& (0+255),f,b
  1745  001A2C  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  1746  001A2E                     l2161:
  1747  001A2E  C062  FFD9         	movff	strcpy@from,fsr2l
  1748  001A32  C063  FFDA         	movff	strcpy@from+1,fsr2h
  1749  001A36  C064  FFE1         	movff	strcpy@cp,fsr1l
  1750  001A3A  C065  FFE2         	movff	strcpy@cp+1,fsr1h
  1751  001A3E  CFDF FFE7          	movff	indf2,indf1
  1752  001A42  50E7               	movf	indf1,w,c
  1753  001A44  A4D8               	btfss	status,2,c
  1754  001A46  EF27  F00D         	goto	u971
  1755  001A4A  EF29  F00D         	goto	u970
  1756  001A4E                     u971:
  1757  001A4E  EF12  F00D         	goto	l2159
  1758  001A52                     u970:
  1759  001A52  C060  F060         	movff	strcpy@to,?_strcpy
  1760  001A56  C061  F061         	movff	strcpy@to+1,?_strcpy+1
  1761  001A5A  0012               	return		;funcret
  1762  001A5C                     __end_of_strcpy:
  1763                           	opt callstack 0
  1764                           
  1765 ;; *************** function _rand *****************
  1766 ;; Defined at:
  1767 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2   12[BANK0 ] int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1781 ;;      Params:         0       2       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0
  1784 ;;      Totals:         0       2       0       0       0       0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    2
  1788 ;; This function calls:
  1789 ;;		___lmul
  1790 ;; This function is called by:
  1791 ;;		_nouveauxAliens
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text5
  1796  0018CC                     __ptext5:
  1797                           	opt callstack 0
  1798  0018CC                     _rand:
  1799                           	opt callstack 27
  1800  0018CC  C0EA  F060         	movff	_randx,___lmul@multiplier
  1801  0018D0  C0EB  F061         	movff	_randx+1,___lmul@multiplier+1
  1802  0018D4  C0EC  F062         	movff	_randx+2,___lmul@multiplier+2
  1803  0018D8  C0ED  F063         	movff	_randx+3,___lmul@multiplier+3
  1804  0018DC  0E6D               	movlw	109
  1805  0018DE  0100               	movlb	0	; () banked
  1806  0018E0  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1807  0018E2  0E4E               	movlw	78
  1808  0018E4  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1809  0018E6  0EC6               	movlw	198
  1810  0018E8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1811  0018EA  0E41               	movlw	65
  1812  0018EC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1813  0018EE  EC30  F00B         	call	___lmul	;wreg free
  1814  0018F2  C060  F0EA         	movff	?___lmul,_randx
  1815  0018F6  C061  F0EB         	movff	?___lmul+1,_randx+1
  1816  0018FA  C062  F0EC         	movff	?___lmul+2,_randx+2
  1817  0018FE  C063  F0ED         	movff	?___lmul+3,_randx+3
  1818  001902  0E39               	movlw	57
  1819  001904  0100               	movlb	0	; () banked
  1820  001906  27EA               	addwf	_randx& (0+255),f,b
  1821  001908  0E30               	movlw	48
  1822  00190A  23EB               	addwfc	(_randx+1)& (0+255),f,b
  1823  00190C  0E00               	movlw	0
  1824  00190E  23EC               	addwfc	(_randx+2)& (0+255),f,b
  1825  001910  0E00               	movlw	0
  1826  001912  23ED               	addwfc	(_randx+3)& (0+255),f,b
  1827  001914                     
  1828                           ; BSR set to: 0
  1829  001914  0EFF               	movlw	255
  1830  001916  15EC               	andwf	(_randx+2)& (0+255),w,b
  1831  001918  6F6C               	movwf	?_rand& (0+255),b
  1832  00191A  0E7F               	movlw	127
  1833  00191C  15ED               	andwf	(_randx+3)& (0+255),w,b
  1834  00191E  6F6D               	movwf	(?_rand+1)& (0+255),b
  1835  001920                     
  1836                           ; BSR set to: 0
  1837  001920  0012               	return		;funcret
  1838  001922                     __end_of_rand:
  1839                           	opt callstack 0
  1840                           
  1841 ;; *************** function ___lmul *****************
  1842 ;; Defined at:
  1843 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1846 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  product         4    8[BANK0 ] unsigned long 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  4    0[BANK0 ] unsigned long 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         0       8       0       0       0       0       0
  1859 ;;      Locals:         0       4       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0
  1861 ;;      Totals:         0      12       0       0       0       0       0
  1862 ;;Total ram usage:       12 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_rand
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text6
  1873  001660                     __ptext6:
  1874                           	opt callstack 0
  1875  001660                     ___lmul:
  1876                           	opt callstack 27
  1877  001660  0E00               	movlw	0
  1878  001662  0100               	movlb	0	; () banked
  1879  001664  6F68               	movwf	___lmul@product& (0+255),b
  1880  001666  0E00               	movlw	0
  1881  001668  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1882  00166A  0E00               	movlw	0
  1883  00166C  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1884  00166E  0E00               	movlw	0
  1885  001670  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1886  001672                     l2023:
  1887                           
  1888                           ; BSR set to: 0
  1889  001672  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1890  001674  EF3E  F00B         	goto	u781
  1891  001678  EF40  F00B         	goto	u780
  1892  00167C                     u781:
  1893  00167C  EF48  F00B         	goto	l2027
  1894  001680                     u780:
  1895  001680                     
  1896                           ; BSR set to: 0
  1897  001680  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1898  001682  2768               	addwf	___lmul@product& (0+255),f,b
  1899  001684  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1900  001686  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1901  001688  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1902  00168A  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1903  00168C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1904  00168E  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1905  001690                     l2027:
  1906                           
  1907                           ; BSR set to: 0
  1908  001690  90D8               	bcf	status,0,c
  1909  001692  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1910  001694  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1911  001696  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1912  001698  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1913  00169A                     
  1914                           ; BSR set to: 0
  1915  00169A  90D8               	bcf	status,0,c
  1916  00169C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1917  00169E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1918  0016A0  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1919  0016A2  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1920  0016A4  5160               	movf	___lmul@multiplier& (0+255),w,b
  1921  0016A6  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1922  0016A8  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1923  0016AA  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1924  0016AC  A4D8               	btfss	status,2,c
  1925  0016AE  EF5B  F00B         	goto	u791
  1926  0016B2  EF5D  F00B         	goto	u790
  1927  0016B6                     u791:
  1928  0016B6  EF39  F00B         	goto	l2023
  1929  0016BA                     u790:
  1930  0016BA                     
  1931                           ; BSR set to: 0
  1932  0016BA  C068  F060         	movff	___lmul@product,?___lmul
  1933  0016BE  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1934  0016C2  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1935  0016C6  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1936  0016CA                     
  1937                           ; BSR set to: 0
  1938  0016CA  0012               	return		;funcret
  1939  0016CC                     __end_of___lmul:
  1940                           	opt callstack 0
  1941                           
  1942 ;; *************** function ___awmod *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dividend        2   14[BANK0 ] int 
  1947 ;;  divisor         2   16[BANK0 ] int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  sign            1   19[BANK0 ] unsigned char 
  1950 ;;  counter         1   18[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2   14[BANK0 ] int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       4       0       0       0       0       0
  1961 ;;      Locals:         0       2       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:         0       6       0       0       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;;		_nouveauxAliens
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text7
  1976  001390                     __ptext7:
  1977                           	opt callstack 0
  1978  001390                     ___awmod:
  1979                           	opt callstack 28
  1980  001390  0E00               	movlw	0
  1981  001392  0100               	movlb	0	; () banked
  1982  001394  6F73               	movwf	___awmod@sign& (0+255),b
  1983  001396                     
  1984                           ; BSR set to: 0
  1985  001396  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1986  001398  EFD2  F009         	goto	u1020
  1987  00139C  EFD0  F009         	goto	u1021
  1988  0013A0                     u1021:
  1989  0013A0  EFD8  F009         	goto	l2251
  1990  0013A4                     u1020:
  1991  0013A4                     
  1992                           ; BSR set to: 0
  1993  0013A4  6D6E               	negf	___awmod@dividend& (0+255),b
  1994  0013A6  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  1995  0013A8  B0D8               	btfsc	status,0,c
  1996  0013AA  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  1997  0013AC                     
  1998                           ; BSR set to: 0
  1999  0013AC  0E01               	movlw	1
  2000  0013AE  6F73               	movwf	___awmod@sign& (0+255),b
  2001  0013B0                     l2251:
  2002                           
  2003                           ; BSR set to: 0
  2004  0013B0  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2005  0013B2  EFDF  F009         	goto	u1030
  2006  0013B6  EFDD  F009         	goto	u1031
  2007  0013BA                     u1031:
  2008  0013BA  EFE3  F009         	goto	l2255
  2009  0013BE                     u1030:
  2010  0013BE                     
  2011                           ; BSR set to: 0
  2012  0013BE  6D70               	negf	___awmod@divisor& (0+255),b
  2013  0013C0  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  2014  0013C2  B0D8               	btfsc	status,0,c
  2015  0013C4  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  2016  0013C6                     l2255:
  2017                           
  2018                           ; BSR set to: 0
  2019  0013C6  5170               	movf	___awmod@divisor& (0+255),w,b
  2020  0013C8  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2021  0013CA  B4D8               	btfsc	status,2,c
  2022  0013CC  EFEA  F009         	goto	u1041
  2023  0013D0  EFEC  F009         	goto	u1040
  2024  0013D4                     u1041:
  2025  0013D4  EF10  F00A         	goto	l2271
  2026  0013D8                     u1040:
  2027  0013D8                     
  2028                           ; BSR set to: 0
  2029  0013D8  0E01               	movlw	1
  2030  0013DA  6F72               	movwf	___awmod@counter& (0+255),b
  2031  0013DC  EFF4  F009         	goto	l2261
  2032  0013E0                     l2259:
  2033                           
  2034                           ; BSR set to: 0
  2035  0013E0  90D8               	bcf	status,0,c
  2036  0013E2  3770               	rlcf	___awmod@divisor& (0+255),f,b
  2037  0013E4  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2038  0013E6  2B72               	incf	___awmod@counter& (0+255),f,b
  2039  0013E8                     l2261:
  2040                           
  2041                           ; BSR set to: 0
  2042  0013E8  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2043  0013EA  EFF9  F009         	goto	u1051
  2044  0013EE  EFFB  F009         	goto	u1050
  2045  0013F2                     u1051:
  2046  0013F2  EFF0  F009         	goto	l2259
  2047  0013F6                     u1050:
  2048  0013F6                     l2263:
  2049                           
  2050                           ; BSR set to: 0
  2051  0013F6  5170               	movf	___awmod@divisor& (0+255),w,b
  2052  0013F8  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  2053  0013FA  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2054  0013FC  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2055  0013FE  A0D8               	btfss	status,0,c
  2056  001400  EF04  F00A         	goto	u1061
  2057  001404  EF06  F00A         	goto	u1060
  2058  001408                     u1061:
  2059  001408  EF0A  F00A         	goto	l2267
  2060  00140C                     u1060:
  2061  00140C                     
  2062                           ; BSR set to: 0
  2063  00140C  5170               	movf	___awmod@divisor& (0+255),w,b
  2064  00140E  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  2065  001410  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2066  001412  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2067  001414                     l2267:
  2068                           
  2069                           ; BSR set to: 0
  2070  001414  90D8               	bcf	status,0,c
  2071  001416  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2072  001418  3370               	rrcf	___awmod@divisor& (0+255),f,b
  2073  00141A                     
  2074                           ; BSR set to: 0
  2075  00141A  2F72               	decfsz	___awmod@counter& (0+255),f,b
  2076  00141C  EFFB  F009         	goto	l2263
  2077  001420                     l2271:
  2078                           
  2079                           ; BSR set to: 0
  2080  001420  5173               	movf	___awmod@sign& (0+255),w,b
  2081  001422  B4D8               	btfsc	status,2,c
  2082  001424  EF16  F00A         	goto	u1071
  2083  001428  EF18  F00A         	goto	u1070
  2084  00142C                     u1071:
  2085  00142C  EF1C  F00A         	goto	l2275
  2086  001430                     u1070:
  2087  001430                     
  2088                           ; BSR set to: 0
  2089  001430  6D6E               	negf	___awmod@dividend& (0+255),b
  2090  001432  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2091  001434  B0D8               	btfsc	status,0,c
  2092  001436  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2093  001438                     l2275:
  2094                           
  2095                           ; BSR set to: 0
  2096  001438  C06E  F06E         	movff	___awmod@dividend,?___awmod
  2097  00143C  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  2098  001440                     
  2099                           ; BSR set to: 0
  2100  001440  0012               	return		;funcret
  2101  001442                     __end_of___awmod:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _lcd_init *****************
  2105 ;; Defined at:
  2106 ;;		line 258 in file "Lcd4Lignes.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2120 ;;      Params:         0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    6
  2127 ;; This function calls:
  2128 ;;		_lcd_initCGRam
  2129 ;;		_lcd_resetSequence
  2130 ;;		_lcd_wrCom
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text8
  2137  001AFE                     __ptext8:
  2138                           	opt callstack 0
  2139  001AFE                     _lcd_init:
  2140                           	opt callstack 24
  2141  001AFE                     
  2142                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2143  001AFE  EC9C  F00B         	call	_lcd_resetSequence	;wreg free
  2144                           
  2145                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2146  001B02  0E28               	movlw	40
  2147  001B04  EC66  F00B         	call	_lcd_wrCom
  2148                           
  2149                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2150  001B08  0E0F               	movlw	15
  2151  001B0A  EC66  F00B         	call	_lcd_wrCom
  2152                           
  2153                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2154  001B0E  0E01               	movlw	1
  2155  001B10  EC66  F00B         	call	_lcd_wrCom
  2156                           
  2157                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2158  001B14  0E06               	movlw	6
  2159  001B16  EC66  F00B         	call	_lcd_wrCom
  2160                           
  2161                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2162  001B1A  0E80               	movlw	128
  2163  001B1C  EC66  F00B         	call	_lcd_wrCom
  2164  001B20                     
  2165                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2166  001B20  EC21  F00A         	call	_lcd_initCGRam	;wreg free
  2167  001B24  0012               	return		;funcret
  2168  001B26                     __end_of_lcd_init:
  2169                           	opt callstack 0
  2170                           
  2171 ;; *************** function _lcd_resetSequence *****************
  2172 ;; Defined at:
  2173 ;;		line 221 in file "Lcd4Lignes.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2187 ;;      Params:         0       0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0
  2189 ;;      Temps:          0       1       0       0       0       0       0
  2190 ;;      Totals:         0       1       0       0       0       0       0
  2191 ;;Total ram usage:        1 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_lcd_ecrireDonnees
  2196 ;;		_lcd_strobeEnableBit
  2197 ;; This function is called by:
  2198 ;;		_lcd_init
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text9
  2203  001738                     __ptext9:
  2204                           	opt callstack 0
  2205  001738                     _lcd_resetSequence:
  2206                           	opt callstack 27
  2207  001738                     
  2208                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2209  001738  0E00               	movlw	0
  2210  00173A  6E95               	movwf	149,c	;volatile
  2211  00173C                     
  2212                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2213  00173C  0E0D               	movlw	13
  2214  00173E  0100               	movlb	0	; force () banked
  2215  001740  6F62               	movwf	??_lcd_resetSequence& (0+255),b
  2216  001742  0EFB               	movlw	251
  2217  001744                     u1467:
  2218  001744  2EE8               	decfsz	wreg,f,c
  2219  001746  D7FE               	bra	u1467
  2220  001748  2F62               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2221  00174A  D7FC               	bra	u1467
  2222  00174C  F000 F000          	nop2	
  2223  001750                     
  2224                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2225  001750  9080               	bcf	128,0,c	;volatile
  2226  001752                     
  2227                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2228  001752  9280               	bcf	128,1,c	;volatile
  2229  001754                     
  2230                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2231  001754  0E03               	movlw	3
  2232  001756  ECA7  F00D         	call	_lcd_ecrireDonnees
  2233  00175A                     
  2234                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2235  00175A  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2236  00175E                     
  2237                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2238  00175E  0E03               	movlw	3
  2239  001760                     u1477:
  2240  001760  2EE8               	decfsz	wreg,f,c
  2241  001762  D7FE               	bra	u1477
  2242  001764  F000               	nop	
  2243  001766                     
  2244                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2245  001766  0E03               	movlw	3
  2246  001768  ECA7  F00D         	call	_lcd_ecrireDonnees
  2247  00176C                     
  2248                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2249  00176C  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2250  001770                     
  2251                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2252  001770  0E03               	movlw	3
  2253  001772                     u1487:
  2254  001772  2EE8               	decfsz	wreg,f,c
  2255  001774  D7FE               	bra	u1487
  2256  001776  F000               	nop	
  2257  001778                     
  2258                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2259  001778  0E03               	movlw	3
  2260  00177A  ECA7  F00D         	call	_lcd_ecrireDonnees
  2261  00177E                     
  2262                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2263  00177E  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2264  001782                     
  2265                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2266  001782  0E03               	movlw	3
  2267  001784                     u1497:
  2268  001784  2EE8               	decfsz	wreg,f,c
  2269  001786  D7FE               	bra	u1497
  2270  001788  F000               	nop	
  2271  00178A                     
  2272                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2273  00178A  0E02               	movlw	2
  2274  00178C  ECA7  F00D         	call	_lcd_ecrireDonnees
  2275  001790                     
  2276                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2277  001790  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  2278  001794                     
  2279                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2280  001794  0E03               	movlw	3
  2281  001796                     u1507:
  2282  001796  2EE8               	decfsz	wreg,f,c
  2283  001798  D7FE               	bra	u1507
  2284  00179A  F000               	nop	
  2285  00179C                     
  2286                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2287  00179C  0E0F               	movlw	15
  2288  00179E  6E95               	movwf	149,c	;volatile
  2289  0017A0  0012               	return		;funcret
  2290  0017A2                     __end_of_lcd_resetSequence:
  2291                           	opt callstack 0
  2292                           
  2293 ;; *************** function _lcd_initCGRam *****************
  2294 ;; Defined at:
  2295 ;;		line 417 in file "Lcd4Lignes.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  j               1    6[BANK0 ] unsigned char 
  2300 ;;  i               1    5[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2310 ;;      Params:         0       0       0       0       0       0       0
  2311 ;;      Locals:         0       2       0       0       0       0       0
  2312 ;;      Temps:          0       2       0       0       0       0       0
  2313 ;;      Totals:         0       4       0       0       0       0       0
  2314 ;;Total ram usage:        4 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    5
  2317 ;; This function calls:
  2318 ;;		_lcd_curseurHome
  2319 ;;		_lcd_wrCom
  2320 ;;		_lcd_wrData
  2321 ;; This function is called by:
  2322 ;;		_lcd_init
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text10
  2327  001442                     __ptext10:
  2328                           	opt callstack 0
  2329  001442                     _lcd_initCGRam:
  2330                           	opt callstack 24
  2331  001442                     
  2332                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2333  001442  0E40               	movlw	64
  2334  001444  EC66  F00B         	call	_lcd_wrCom
  2335  001448                     
  2336                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2337  001448  0E00               	movlw	0
  2338  00144A  0100               	movlb	0	; force () banked
  2339  00144C  6F65               	movwf	lcd_initCGRam@i& (0+255),b
  2340  00144E                     
  2341                           ; BSR set to: 0
  2342  00144E  0E07               	movlw	7
  2343  001450  0100               	movlb	0	; force () banked
  2344  001452  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2345  001454  EF2E  F00A         	goto	u981
  2346  001458  EF30  F00A         	goto	u980
  2347  00145C                     u981:
  2348  00145C  EF32  F00A         	goto	l2219
  2349  001460                     u980:
  2350  001460  EF6F  F00A         	goto	l2235
  2351  001464                     l2219:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2355  001464  0E00               	movlw	0
  2356  001466  0100               	movlb	0	; force () banked
  2357  001468  6F66               	movwf	lcd_initCGRam@j& (0+255),b
  2358  00146A                     
  2359                           ; BSR set to: 0
  2360  00146A  0E07               	movlw	7
  2361  00146C  0100               	movlb	0	; force () banked
  2362  00146E  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2363  001470  EF3C  F00A         	goto	u991
  2364  001474  EF3E  F00A         	goto	u990
  2365  001478                     u991:
  2366  001478  EF40  F00A         	goto	l2225
  2367  00147C                     u990:
  2368  00147C  EF64  F00A         	goto	l2231
  2369  001480                     l2225:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2373  001480  0100               	movlb	0	; force () banked
  2374  001482  5165               	movf	lcd_initCGRam@i& (0+255),w,b
  2375  001484  0D08               	mullw	8
  2376  001486  0E00               	movlw	low _matCGRAM
  2377  001488  0100               	movlb	0	; force () banked
  2378  00148A  6F63               	movwf	??_lcd_initCGRam& (0+255),b
  2379  00148C  0E01               	movlw	high _matCGRAM
  2380  00148E  6F64               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2381  001490  50F3               	movf	243,w,c
  2382  001492  2763               	addwf	??_lcd_initCGRam& (0+255),f,b
  2383  001494  50F4               	movf	244,w,c
  2384  001496  2364               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2385  001498  0100               	movlb	0	; force () banked
  2386  00149A  5166               	movf	lcd_initCGRam@j& (0+255),w,b
  2387  00149C  0100               	movlb	0	; force () banked
  2388  00149E  2563               	addwf	??_lcd_initCGRam& (0+255),w,b
  2389  0014A0  6ED9               	movwf	fsr2l,c
  2390  0014A2  0100               	movlb	0	; force () banked
  2391  0014A4  0E00               	movlw	0
  2392  0014A6  0100               	movlb	0	; force () banked
  2393  0014A8  2164               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2394  0014AA  6EDA               	movwf	fsr2h,c
  2395  0014AC  50DF               	movf	indf2,w,c
  2396  0014AE  EC4F  F00D         	call	_lcd_wrData
  2397  0014B2  0100               	movlb	0	; force () banked
  2398  0014B4  2B66               	incf	lcd_initCGRam@j& (0+255),f,b
  2399  0014B6                     
  2400                           ; BSR set to: 0
  2401  0014B6  0E07               	movlw	7
  2402  0014B8  0100               	movlb	0	; force () banked
  2403  0014BA  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2404  0014BC  EF62  F00A         	goto	u1001
  2405  0014C0  EF64  F00A         	goto	u1000
  2406  0014C4                     u1001:
  2407  0014C4  EF40  F00A         	goto	l2225
  2408  0014C8                     u1000:
  2409  0014C8                     l2231:
  2410                           
  2411                           ; BSR set to: 0
  2412  0014C8  0100               	movlb	0	; force () banked
  2413  0014CA  2B65               	incf	lcd_initCGRam@i& (0+255),f,b
  2414  0014CC                     
  2415                           ; BSR set to: 0
  2416  0014CC  0E07               	movlw	7
  2417  0014CE  0100               	movlb	0	; force () banked
  2418  0014D0  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2419  0014D2  EF6D  F00A         	goto	u1011
  2420  0014D6  EF6F  F00A         	goto	u1010
  2421  0014DA                     u1011:
  2422  0014DA  EF32  F00A         	goto	l2219
  2423  0014DE                     u1010:
  2424  0014DE                     l2235:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2428  0014DE  ECC4  F00D         	call	_lcd_curseurHome	;wreg free
  2429  0014E2  0012               	return		;funcret
  2430  0014E4                     __end_of_lcd_initCGRam:
  2431                           	opt callstack 0
  2432                           
  2433 ;; *************** function _lcd_curseurHome *****************
  2434 ;; Defined at:
  2435 ;;		line 288 in file "Lcd4Lignes.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         0       0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0
  2452 ;;      Totals:         0       0       0       0       0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    4
  2456 ;; This function calls:
  2457 ;;		_lcd_wrCom
  2458 ;; This function is called by:
  2459 ;;		_lcd_initCGRam
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text11
  2464  001B88                     __ptext11:
  2465                           	opt callstack 0
  2466  001B88                     _lcd_curseurHome:
  2467                           	opt callstack 24
  2468  001B88                     
  2469                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2470  001B88  0E02               	movlw	2
  2471  001B8A  EC66  F00B         	call	_lcd_wrCom
  2472  001B8E  0012               	return		;funcret
  2473  001B90                     __end_of_lcd_curseurHome:
  2474                           	opt callstack 0
  2475                           
  2476 ;; *************** function _initialisation *****************
  2477 ;; Defined at:
  2478 ;;		line 323 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2492 ;;      Params:         0       0       0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		_srand
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text12
  2507  001922                     __ptext12:
  2508                           	opt callstack 0
  2509  001922                     _initialisation:
  2510                           	opt callstack 28
  2511  001922                     
  2512                           ;main.c: 325: TRISD = 0;
  2513  001922  0E00               	movlw	0
  2514  001924  6E95               	movwf	149,c	;volatile
  2515                           
  2516                           ;main.c: 327: ANSELH = 0;
  2517  001926  0E00               	movlw	0
  2518  001928  6E7F               	movwf	127,c	;volatile
  2519  00192A                     
  2520                           ;main.c: 328: TRISB = 0xFF;
  2521  00192A  6893               	setf	147,c	;volatile
  2522                           
  2523                           ;main.c: 330: ANSEL = 0;
  2524  00192C  0E00               	movlw	0
  2525  00192E  6E7E               	movwf	126,c	;volatile
  2526                           
  2527                           ;main.c: 331: TRISA = 0;
  2528  001930  0E00               	movlw	0
  2529  001932  6E92               	movwf	146,c	;volatile
  2530  001934                     
  2531                           ;main.c: 335: T1CONbits.TMR1ON = 1;
  2532  001934  80CD               	bsf	205,0,c	;volatile
  2533  001936                     
  2534                           ;main.c: 336: srand(TMR1);
  2535  001936  CFCE F060          	movff	4046,srand@x	;volatile
  2536  00193A  CFCF F061          	movff	4047,srand@x+1	;volatile
  2537  00193E  ECB5  F00D         	call	_srand	;wreg free
  2538  001942                     
  2539                           ;main.c: 339: ANSELbits.ANS7 = 1;
  2540  001942  8E7E               	bsf	126,7,c	;volatile
  2541  001944                     
  2542                           ;main.c: 341: ADCON0bits.ADON = 1;
  2543  001944  80C2               	bsf	194,0,c	;volatile
  2544  001946                     
  2545                           ;main.c: 342: ADCON1 = 0;
  2546  001946  0E00               	movlw	0
  2547  001948  6EC1               	movwf	193,c	;volatile
  2548  00194A                     
  2549                           ;main.c: 344: ADCON2bits.ADFM = 0;
  2550  00194A  9EC0               	bcf	192,7,c	;volatile
  2551  00194C                     
  2552                           ;main.c: 345: ADCON2bits.ACQT = 0;
  2553  00194C  0EC7               	movlw	-57
  2554  00194E  16C0               	andwf	192,f,c	;volatile
  2555  001950                     
  2556                           ;main.c: 346: ADCON2bits.ADCS = 0;
  2557  001950  0EF8               	movlw	-8
  2558  001952  16C0               	andwf	192,f,c	;volatile
  2559  001954                     
  2560                           ;main.c: 350: T0CONbits.TMR0ON = 1;
  2561  001954  8ED5               	bsf	213,7,c	;volatile
  2562  001956                     
  2563                           ;main.c: 351: T0CONbits.T08BIT = 0;
  2564  001956  9CD5               	bcf	213,6,c	;volatile
  2565  001958                     
  2566                           ;main.c: 352: T0CONbits.T0CS = 0;
  2567  001958  9AD5               	bcf	213,5,c	;volatile
  2568  00195A                     
  2569                           ;main.c: 353: T0CONbits.PSA = 0;
  2570  00195A  96D5               	bcf	213,3,c	;volatile
  2571  00195C                     
  2572                           ;main.c: 354: T0CONbits.T0PS = 0b010;
  2573  00195C  50D5               	movf	213,w,c	;volatile
  2574  00195E  0BF8               	andlw	-8
  2575  001960  0902               	iorlw	2
  2576  001962  6ED5               	movwf	213,c	;volatile
  2577  001964                     
  2578                           ;main.c: 355: TMR0 = 0x0BDC;
  2579  001964  0E0B               	movlw	11
  2580  001966  6ED7               	movwf	215,c	;volatile
  2581  001968  0EDC               	movlw	220
  2582  00196A  6ED6               	movwf	214,c	;volatile
  2583  00196C                     
  2584                           ;main.c: 356: INTCONbits.TMR0IE = 1;
  2585  00196C  8AF2               	bsf	242,5,c	;volatile
  2586  00196E                     
  2587                           ;main.c: 357: INTCONbits.TMR0IF = 0;
  2588  00196E  94F2               	bcf	242,2,c	;volatile
  2589  001970                     
  2590                           ;main.c: 358: INTCONbits.PEIE = 1;
  2591  001970  8CF2               	bsf	242,6,c	;volatile
  2592  001972                     
  2593                           ;main.c: 359: INTCONbits.GIE = 1;
  2594  001972  8EF2               	bsf	242,7,c	;volatile
  2595  001974  0012               	return		;funcret
  2596  001976                     __end_of_initialisation:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _srand *****************
  2600 ;; Defined at:
  2601 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  x               2    0[BANK0 ] unsigned int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         0       2       0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0
  2618 ;;      Totals:         0       2       0       0       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_initialisation
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text13
  2630  001B6A                     __ptext13:
  2631                           	opt callstack 0
  2632  001B6A                     _srand:
  2633                           	opt callstack 28
  2634  001B6A  C060  F0EA         	movff	srand@x,_randx
  2635  001B6E  C061  F0EB         	movff	srand@x+1,_randx+1
  2636  001B72  0100               	movlb	0	; () banked
  2637  001B74  6BEC               	clrf	(_randx+2)& (0+255),b
  2638  001B76  6BED               	clrf	(_randx+3)& (0+255),b
  2639  001B78                     
  2640                           ; BSR set to: 0
  2641  001B78  0012               	return		;funcret
  2642  001B7A                     __end_of_srand:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _feu *****************
  2646 ;; Defined at:
  2647 ;;		line 207 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  x               1    wreg     unsigned char 
  2650 ;;  pts             2    6[BANK0 ] PTR int 
  2651 ;;		 -> main@pts(2), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  x               1   15[BANK0 ] unsigned char 
  2654 ;;  i               2   13[BANK0 ] int 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2664 ;;      Params:         0       2       0       0       0       0       0
  2665 ;;      Locals:         0       3       0       0       0       0       0
  2666 ;;      Temps:          0       5       0       0       0       0       0
  2667 ;;      Totals:         0      10       0       0       0       0       0
  2668 ;;Total ram usage:       10 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    5
  2671 ;; This function calls:
  2672 ;;		___wmul
  2673 ;;		_lcd_ecritChar
  2674 ;;		_lcd_gotoXY
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text14
  2681  000654                     __ptext14:
  2682                           	opt callstack 0
  2683  000654                     _feu:
  2684                           	opt callstack 25
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;incstack = 0
  2688                           ;feu@x stored from wreg
  2689  000654  0100               	movlb	0	; force () banked
  2690  000656  6F6F               	movwf	feu@x& (0+255),b
  2691  000658                     
  2692                           ;main.c: 209: int i;;main.c: 210: if(PORTBbits.RB1 == 0)
  2693  000658  B281               	btfsc	129,1,c	;volatile
  2694  00065A  EF31  F003         	goto	u1251
  2695  00065E  EF33  F003         	goto	u1250
  2696  000662                     u1251:
  2697  000662  EFF2  F004         	goto	l127
  2698  000666                     u1250:
  2699  000666                     l121:
  2700  000666  A281               	btfss	129,1,c	;volatile
  2701  000668  EF38  F003         	goto	u1261
  2702  00066C  EF3A  F003         	goto	u1260
  2703  000670                     u1261:
  2704  000670  EF33  F003         	goto	l121
  2705  000674                     u1260:
  2706  000674                     
  2707                           ;main.c: 213: for(i=3;i>0;i--)
  2708  000674  0E00               	movlw	0
  2709  000676  0100               	movlb	0	; force () banked
  2710  000678  6F6E               	movwf	(feu@i+1)& (0+255),b
  2711  00067A  0E03               	movlw	3
  2712  00067C  6F6D               	movwf	feu@i& (0+255),b
  2713  00067E                     
  2714                           ; BSR set to: 0
  2715  00067E  0100               	movlb	0	; force () banked
  2716  000680  BF6E               	btfsc	(feu@i+1)& (0+255),7,b
  2717  000682  EF4D  F003         	goto	u1270
  2718  000686  516E               	movf	(feu@i+1)& (0+255),w,b
  2719  000688  E106               	bnz	u1271
  2720  00068A  056D               	decf	feu@i& (0+255),w,b
  2721  00068C  B0D8               	btfsc	status,0,c
  2722  00068E  EF4B  F003         	goto	u1271
  2723  000692  EF4D  F003         	goto	u1270
  2724  000696                     u1271:
  2725  000696  EF4F  F003         	goto	l2467
  2726  00069A                     u1270:
  2727  00069A  EFF2  F004         	goto	l127
  2728  00069E                     l2467:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;main.c: 214: {;main.c: 215: if(m_aliens[(i-1)][x-1] == 1)
  2732  00069E  C06D  F060         	movff	feu@i,___wmul@multiplier
  2733  0006A2  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2734  0006A6  0E00               	movlw	0
  2735  0006A8  0100               	movlb	0	; force () banked
  2736  0006AA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2737  0006AC  0E15               	movlw	21
  2738  0006AE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2739  0006B0  EC93  F00D         	call	___wmul	;wreg free
  2740  0006B4  0EEA               	movlw	234
  2741  0006B6  0100               	movlb	0	; force () banked
  2742  0006B8  6F68               	movwf	??_feu& (0+255),b
  2743  0006BA  0EFF               	movlw	255
  2744  0006BC  6F69               	movwf	(??_feu+1)& (0+255),b
  2745  0006BE  0E40               	movlw	low _m_aliens
  2746  0006C0  6F6A               	movwf	(??_feu+2)& (0+255),b
  2747  0006C2  0E01               	movlw	high _m_aliens
  2748  0006C4  6F6B               	movwf	(??_feu+3)& (0+255),b
  2749  0006C6  5168               	movf	??_feu& (0+255),w,b
  2750  0006C8  276A               	addwf	(??_feu+2)& (0+255),f,b
  2751  0006CA  5169               	movf	(??_feu+1)& (0+255),w,b
  2752  0006CC  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2753  0006CE  0100               	movlb	0	; force () banked
  2754  0006D0  5160               	movf	?___wmul& (0+255),w,b
  2755  0006D2  0100               	movlb	0	; force () banked
  2756  0006D4  276A               	addwf	(??_feu+2)& (0+255),f,b
  2757  0006D6  0100               	movlb	0	; force () banked
  2758  0006D8  5161               	movf	(?___wmul+1)& (0+255),w,b
  2759  0006DA  0100               	movlb	0	; force () banked
  2760  0006DC  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2761  0006DE  0100               	movlb	0	; force () banked
  2762  0006E0  516F               	movf	feu@x& (0+255),w,b
  2763  0006E2  0100               	movlb	0	; force () banked
  2764  0006E4  256A               	addwf	(??_feu+2)& (0+255),w,b
  2765  0006E6  6ED9               	movwf	fsr2l,c
  2766  0006E8  0100               	movlb	0	; force () banked
  2767  0006EA  0E00               	movlw	0
  2768  0006EC  0100               	movlb	0	; force () banked
  2769  0006EE  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2770  0006F0  6EDA               	movwf	fsr2h,c
  2771  0006F2  04DE               	decf	postinc2,w,c
  2772  0006F4  A4D8               	btfss	status,2,c
  2773  0006F6  EF7F  F003         	goto	u1281
  2774  0006FA  EF81  F003         	goto	u1280
  2775  0006FE                     u1281:
  2776  0006FE  EFD4  F003         	goto	l2481
  2777  000702                     u1280:
  2778  000702                     
  2779                           ; BSR set to: 0
  2780                           ;main.c: 216: {;main.c: 217: m_aliens[(i-1)][x-1] = ' ';
  2781  000702  C06D  F060         	movff	feu@i,___wmul@multiplier
  2782  000706  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2783  00070A  0E00               	movlw	0
  2784  00070C  0100               	movlb	0	; force () banked
  2785  00070E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2786  000710  0E15               	movlw	21
  2787  000712  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2788  000714  EC93  F00D         	call	___wmul	;wreg free
  2789  000718  0EEA               	movlw	234
  2790  00071A  0100               	movlb	0	; force () banked
  2791  00071C  6F68               	movwf	??_feu& (0+255),b
  2792  00071E  0EFF               	movlw	255
  2793  000720  6F69               	movwf	(??_feu+1)& (0+255),b
  2794  000722  0E40               	movlw	low _m_aliens
  2795  000724  6F6A               	movwf	(??_feu+2)& (0+255),b
  2796  000726  0E01               	movlw	high _m_aliens
  2797  000728  6F6B               	movwf	(??_feu+3)& (0+255),b
  2798  00072A  5168               	movf	??_feu& (0+255),w,b
  2799  00072C  276A               	addwf	(??_feu+2)& (0+255),f,b
  2800  00072E  5169               	movf	(??_feu+1)& (0+255),w,b
  2801  000730  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2802  000732  0100               	movlb	0	; force () banked
  2803  000734  5160               	movf	?___wmul& (0+255),w,b
  2804  000736  0100               	movlb	0	; force () banked
  2805  000738  276A               	addwf	(??_feu+2)& (0+255),f,b
  2806  00073A  0100               	movlb	0	; force () banked
  2807  00073C  5161               	movf	(?___wmul+1)& (0+255),w,b
  2808  00073E  0100               	movlb	0	; force () banked
  2809  000740  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2810  000742  0100               	movlb	0	; force () banked
  2811  000744  516F               	movf	feu@x& (0+255),w,b
  2812  000746  0100               	movlb	0	; force () banked
  2813  000748  256A               	addwf	(??_feu+2)& (0+255),w,b
  2814  00074A  6ED9               	movwf	fsr2l,c
  2815  00074C  0100               	movlb	0	; force () banked
  2816  00074E  0E00               	movlw	0
  2817  000750  0100               	movlb	0	; force () banked
  2818  000752  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2819  000754  6EDA               	movwf	fsr2h,c
  2820  000756  0E20               	movlw	32
  2821  000758  6EDF               	movwf	indf2,c
  2822  00075A                     
  2823                           ; BSR set to: 0
  2824                           ;main.c: 218: lcd_gotoXY(x,i);
  2825  00075A  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  2826  00075E  0100               	movlb	0	; force () banked
  2827  000760  516F               	movf	feu@x& (0+255),w,b
  2828  000762  ECF7  F00A         	call	_lcd_gotoXY
  2829  000766                     
  2830                           ;main.c: 219: lcd_ecritChar(' ');
  2831  000766  0E20               	movlw	32
  2832  000768  ECBB  F00C         	call	_lcd_ecritChar
  2833  00076C                     
  2834                           ;main.c: 220: lcd_gotoXY(x,4);
  2835  00076C  0E04               	movlw	4
  2836  00076E  0100               	movlb	0	; force () banked
  2837  000770  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  2838  000772  0100               	movlb	0	; force () banked
  2839  000774  516F               	movf	feu@x& (0+255),w,b
  2840  000776  ECF7  F00A         	call	_lcd_gotoXY
  2841  00077A                     
  2842                           ;main.c: 221: (*pts) = (*pts)+1;
  2843  00077A  C066  FFD9         	movff	feu@pts,fsr2l
  2844  00077E  C067  FFDA         	movff	feu@pts+1,fsr2h
  2845  000782  CFDE F068          	movff	postinc2,??_feu
  2846  000786  CFDD F069          	movff	postdec2,??_feu+1
  2847  00078A  0E01               	movlw	1
  2848  00078C  0100               	movlb	0	; force () banked
  2849  00078E  2768               	addwf	??_feu& (0+255),f,b
  2850  000790  0E00               	movlw	0
  2851  000792  2369               	addwfc	(??_feu+1)& (0+255),f,b
  2852  000794  C066  FFD9         	movff	feu@pts,fsr2l
  2853  000798  C067  FFDA         	movff	feu@pts+1,fsr2h
  2854  00079C  C068  FFDE         	movff	??_feu,postinc2
  2855  0007A0  C069  FFDD         	movff	??_feu+1,postdec2
  2856  0007A4  EFF2  F004         	goto	l127
  2857  0007A8                     l2481:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;main.c: 223: };main.c: 224: if(m_aliens[(i-1)][x-1] == 2)
  2861  0007A8  C06D  F060         	movff	feu@i,___wmul@multiplier
  2862  0007AC  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2863  0007B0  0E00               	movlw	0
  2864  0007B2  0100               	movlb	0	; force () banked
  2865  0007B4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2866  0007B6  0E15               	movlw	21
  2867  0007B8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2868  0007BA  EC93  F00D         	call	___wmul	;wreg free
  2869  0007BE  0EEA               	movlw	234
  2870  0007C0  0100               	movlb	0	; force () banked
  2871  0007C2  6F68               	movwf	??_feu& (0+255),b
  2872  0007C4  0EFF               	movlw	255
  2873  0007C6  6F69               	movwf	(??_feu+1)& (0+255),b
  2874  0007C8  0E40               	movlw	low _m_aliens
  2875  0007CA  6F6A               	movwf	(??_feu+2)& (0+255),b
  2876  0007CC  0E01               	movlw	high _m_aliens
  2877  0007CE  6F6B               	movwf	(??_feu+3)& (0+255),b
  2878  0007D0  5168               	movf	??_feu& (0+255),w,b
  2879  0007D2  276A               	addwf	(??_feu+2)& (0+255),f,b
  2880  0007D4  5169               	movf	(??_feu+1)& (0+255),w,b
  2881  0007D6  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2882  0007D8  0100               	movlb	0	; force () banked
  2883  0007DA  5160               	movf	?___wmul& (0+255),w,b
  2884  0007DC  0100               	movlb	0	; force () banked
  2885  0007DE  276A               	addwf	(??_feu+2)& (0+255),f,b
  2886  0007E0  0100               	movlb	0	; force () banked
  2887  0007E2  5161               	movf	(?___wmul+1)& (0+255),w,b
  2888  0007E4  0100               	movlb	0	; force () banked
  2889  0007E6  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2890  0007E8  0100               	movlb	0	; force () banked
  2891  0007EA  516F               	movf	feu@x& (0+255),w,b
  2892  0007EC  0100               	movlb	0	; force () banked
  2893  0007EE  256A               	addwf	(??_feu+2)& (0+255),w,b
  2894  0007F0  6ED9               	movwf	fsr2l,c
  2895  0007F2  0100               	movlb	0	; force () banked
  2896  0007F4  0E00               	movlw	0
  2897  0007F6  0100               	movlb	0	; force () banked
  2898  0007F8  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2899  0007FA  6EDA               	movwf	fsr2h,c
  2900  0007FC  0E02               	movlw	2
  2901  0007FE  18DE               	xorwf	postinc2,w,c
  2902  000800  A4D8               	btfss	status,2,c
  2903  000802  EF05  F004         	goto	u1291
  2904  000806  EF07  F004         	goto	u1290
  2905  00080A                     u1291:
  2906  00080A  EF5A  F004         	goto	l2495
  2907  00080E                     u1290:
  2908  00080E                     
  2909                           ; BSR set to: 0
  2910                           ;main.c: 225: {;main.c: 226: m_aliens[(i-1)][x-1] = ' ';
  2911  00080E  C06D  F060         	movff	feu@i,___wmul@multiplier
  2912  000812  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2913  000816  0E00               	movlw	0
  2914  000818  0100               	movlb	0	; force () banked
  2915  00081A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2916  00081C  0E15               	movlw	21
  2917  00081E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2918  000820  EC93  F00D         	call	___wmul	;wreg free
  2919  000824  0EEA               	movlw	234
  2920  000826  0100               	movlb	0	; force () banked
  2921  000828  6F68               	movwf	??_feu& (0+255),b
  2922  00082A  0EFF               	movlw	255
  2923  00082C  6F69               	movwf	(??_feu+1)& (0+255),b
  2924  00082E  0E40               	movlw	low _m_aliens
  2925  000830  6F6A               	movwf	(??_feu+2)& (0+255),b
  2926  000832  0E01               	movlw	high _m_aliens
  2927  000834  6F6B               	movwf	(??_feu+3)& (0+255),b
  2928  000836  5168               	movf	??_feu& (0+255),w,b
  2929  000838  276A               	addwf	(??_feu+2)& (0+255),f,b
  2930  00083A  5169               	movf	(??_feu+1)& (0+255),w,b
  2931  00083C  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2932  00083E  0100               	movlb	0	; force () banked
  2933  000840  5160               	movf	?___wmul& (0+255),w,b
  2934  000842  0100               	movlb	0	; force () banked
  2935  000844  276A               	addwf	(??_feu+2)& (0+255),f,b
  2936  000846  0100               	movlb	0	; force () banked
  2937  000848  5161               	movf	(?___wmul+1)& (0+255),w,b
  2938  00084A  0100               	movlb	0	; force () banked
  2939  00084C  236B               	addwfc	(??_feu+3)& (0+255),f,b
  2940  00084E  0100               	movlb	0	; force () banked
  2941  000850  516F               	movf	feu@x& (0+255),w,b
  2942  000852  0100               	movlb	0	; force () banked
  2943  000854  256A               	addwf	(??_feu+2)& (0+255),w,b
  2944  000856  6ED9               	movwf	fsr2l,c
  2945  000858  0100               	movlb	0	; force () banked
  2946  00085A  0E00               	movlw	0
  2947  00085C  0100               	movlb	0	; force () banked
  2948  00085E  216B               	addwfc	(??_feu+3)& (0+255),w,b
  2949  000860  6EDA               	movwf	fsr2h,c
  2950  000862  0E20               	movlw	32
  2951  000864  6EDF               	movwf	indf2,c
  2952  000866                     
  2953                           ; BSR set to: 0
  2954                           ;main.c: 227: lcd_gotoXY(x,i);
  2955  000866  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  2956  00086A  0100               	movlb	0	; force () banked
  2957  00086C  516F               	movf	feu@x& (0+255),w,b
  2958  00086E  ECF7  F00A         	call	_lcd_gotoXY
  2959  000872                     
  2960                           ;main.c: 228: lcd_ecritChar(' ');
  2961  000872  0E20               	movlw	32
  2962  000874  ECBB  F00C         	call	_lcd_ecritChar
  2963  000878                     
  2964                           ;main.c: 229: lcd_gotoXY(x,4);
  2965  000878  0E04               	movlw	4
  2966  00087A  0100               	movlb	0	; force () banked
  2967  00087C  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  2968  00087E  0100               	movlb	0	; force () banked
  2969  000880  516F               	movf	feu@x& (0+255),w,b
  2970  000882  ECF7  F00A         	call	_lcd_gotoXY
  2971  000886                     
  2972                           ;main.c: 230: (*pts) = (*pts)+2;
  2973  000886  C066  FFD9         	movff	feu@pts,fsr2l
  2974  00088A  C067  FFDA         	movff	feu@pts+1,fsr2h
  2975  00088E  CFDE F068          	movff	postinc2,??_feu
  2976  000892  CFDD F069          	movff	postdec2,??_feu+1
  2977  000896  0E02               	movlw	2
  2978  000898  0100               	movlb	0	; force () banked
  2979  00089A  2768               	addwf	??_feu& (0+255),f,b
  2980  00089C  0E00               	movlw	0
  2981  00089E  2369               	addwfc	(??_feu+1)& (0+255),f,b
  2982  0008A0  C066  FFD9         	movff	feu@pts,fsr2l
  2983  0008A4  C067  FFDA         	movff	feu@pts+1,fsr2h
  2984  0008A8  C068  FFDE         	movff	??_feu,postinc2
  2985  0008AC  C069  FFDD         	movff	??_feu+1,postdec2
  2986  0008B0  EFF2  F004         	goto	l127
  2987  0008B4                     l2495:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;main.c: 232: };main.c: 233: if(m_aliens[(i-1)][x-1] == 3)
  2991  0008B4  C06D  F060         	movff	feu@i,___wmul@multiplier
  2992  0008B8  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  2993  0008BC  0E00               	movlw	0
  2994  0008BE  0100               	movlb	0	; force () banked
  2995  0008C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2996  0008C2  0E15               	movlw	21
  2997  0008C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2998  0008C6  EC93  F00D         	call	___wmul	;wreg free
  2999  0008CA  0EEA               	movlw	234
  3000  0008CC  0100               	movlb	0	; force () banked
  3001  0008CE  6F68               	movwf	??_feu& (0+255),b
  3002  0008D0  0EFF               	movlw	255
  3003  0008D2  6F69               	movwf	(??_feu+1)& (0+255),b
  3004  0008D4  0E40               	movlw	low _m_aliens
  3005  0008D6  6F6A               	movwf	(??_feu+2)& (0+255),b
  3006  0008D8  0E01               	movlw	high _m_aliens
  3007  0008DA  6F6B               	movwf	(??_feu+3)& (0+255),b
  3008  0008DC  5168               	movf	??_feu& (0+255),w,b
  3009  0008DE  276A               	addwf	(??_feu+2)& (0+255),f,b
  3010  0008E0  5169               	movf	(??_feu+1)& (0+255),w,b
  3011  0008E2  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3012  0008E4  0100               	movlb	0	; force () banked
  3013  0008E6  5160               	movf	?___wmul& (0+255),w,b
  3014  0008E8  0100               	movlb	0	; force () banked
  3015  0008EA  276A               	addwf	(??_feu+2)& (0+255),f,b
  3016  0008EC  0100               	movlb	0	; force () banked
  3017  0008EE  5161               	movf	(?___wmul+1)& (0+255),w,b
  3018  0008F0  0100               	movlb	0	; force () banked
  3019  0008F2  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3020  0008F4  0100               	movlb	0	; force () banked
  3021  0008F6  516F               	movf	feu@x& (0+255),w,b
  3022  0008F8  0100               	movlb	0	; force () banked
  3023  0008FA  256A               	addwf	(??_feu+2)& (0+255),w,b
  3024  0008FC  6ED9               	movwf	fsr2l,c
  3025  0008FE  0100               	movlb	0	; force () banked
  3026  000900  0E00               	movlw	0
  3027  000902  0100               	movlb	0	; force () banked
  3028  000904  216B               	addwfc	(??_feu+3)& (0+255),w,b
  3029  000906  6EDA               	movwf	fsr2h,c
  3030  000908  0E03               	movlw	3
  3031  00090A  18DE               	xorwf	postinc2,w,c
  3032  00090C  A4D8               	btfss	status,2,c
  3033  00090E  EF8B  F004         	goto	u1301
  3034  000912  EF8D  F004         	goto	u1300
  3035  000916                     u1301:
  3036  000916  EFE0  F004         	goto	l2509
  3037  00091A                     u1300:
  3038  00091A                     
  3039                           ; BSR set to: 0
  3040                           ;main.c: 234: {;main.c: 235: m_aliens[(i-1)][x-1] = ' ';
  3041  00091A  C06D  F060         	movff	feu@i,___wmul@multiplier
  3042  00091E  C06E  F061         	movff	feu@i+1,___wmul@multiplier+1
  3043  000922  0E00               	movlw	0
  3044  000924  0100               	movlb	0	; force () banked
  3045  000926  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3046  000928  0E15               	movlw	21
  3047  00092A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3048  00092C  EC93  F00D         	call	___wmul	;wreg free
  3049  000930  0EEA               	movlw	234
  3050  000932  0100               	movlb	0	; force () banked
  3051  000934  6F68               	movwf	??_feu& (0+255),b
  3052  000936  0EFF               	movlw	255
  3053  000938  6F69               	movwf	(??_feu+1)& (0+255),b
  3054  00093A  0E40               	movlw	low _m_aliens
  3055  00093C  6F6A               	movwf	(??_feu+2)& (0+255),b
  3056  00093E  0E01               	movlw	high _m_aliens
  3057  000940  6F6B               	movwf	(??_feu+3)& (0+255),b
  3058  000942  5168               	movf	??_feu& (0+255),w,b
  3059  000944  276A               	addwf	(??_feu+2)& (0+255),f,b
  3060  000946  5169               	movf	(??_feu+1)& (0+255),w,b
  3061  000948  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3062  00094A  0100               	movlb	0	; force () banked
  3063  00094C  5160               	movf	?___wmul& (0+255),w,b
  3064  00094E  0100               	movlb	0	; force () banked
  3065  000950  276A               	addwf	(??_feu+2)& (0+255),f,b
  3066  000952  0100               	movlb	0	; force () banked
  3067  000954  5161               	movf	(?___wmul+1)& (0+255),w,b
  3068  000956  0100               	movlb	0	; force () banked
  3069  000958  236B               	addwfc	(??_feu+3)& (0+255),f,b
  3070  00095A  0100               	movlb	0	; force () banked
  3071  00095C  516F               	movf	feu@x& (0+255),w,b
  3072  00095E  0100               	movlb	0	; force () banked
  3073  000960  256A               	addwf	(??_feu+2)& (0+255),w,b
  3074  000962  6ED9               	movwf	fsr2l,c
  3075  000964  0100               	movlb	0	; force () banked
  3076  000966  0E00               	movlw	0
  3077  000968  0100               	movlb	0	; force () banked
  3078  00096A  216B               	addwfc	(??_feu+3)& (0+255),w,b
  3079  00096C  6EDA               	movwf	fsr2h,c
  3080  00096E  0E20               	movlw	32
  3081  000970  6EDF               	movwf	indf2,c
  3082  000972                     
  3083                           ; BSR set to: 0
  3084                           ;main.c: 236: lcd_gotoXY(x,i);
  3085  000972  C06D  F063         	movff	feu@i,lcd_gotoXY@y
  3086  000976  0100               	movlb	0	; force () banked
  3087  000978  516F               	movf	feu@x& (0+255),w,b
  3088  00097A  ECF7  F00A         	call	_lcd_gotoXY
  3089  00097E                     
  3090                           ;main.c: 237: lcd_ecritChar(' ');
  3091  00097E  0E20               	movlw	32
  3092  000980  ECBB  F00C         	call	_lcd_ecritChar
  3093  000984                     
  3094                           ;main.c: 238: lcd_gotoXY(x,4);
  3095  000984  0E04               	movlw	4
  3096  000986  0100               	movlb	0	; force () banked
  3097  000988  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3098  00098A  0100               	movlb	0	; force () banked
  3099  00098C  516F               	movf	feu@x& (0+255),w,b
  3100  00098E  ECF7  F00A         	call	_lcd_gotoXY
  3101  000992                     
  3102                           ;main.c: 239: (*pts) = (*pts)+3;
  3103  000992  C066  FFD9         	movff	feu@pts,fsr2l
  3104  000996  C067  FFDA         	movff	feu@pts+1,fsr2h
  3105  00099A  CFDE F068          	movff	postinc2,??_feu
  3106  00099E  CFDD F069          	movff	postdec2,??_feu+1
  3107  0009A2  0E03               	movlw	3
  3108  0009A4  0100               	movlb	0	; force () banked
  3109  0009A6  2768               	addwf	??_feu& (0+255),f,b
  3110  0009A8  0E00               	movlw	0
  3111  0009AA  2369               	addwfc	(??_feu+1)& (0+255),f,b
  3112  0009AC  C066  FFD9         	movff	feu@pts,fsr2l
  3113  0009B0  C067  FFDA         	movff	feu@pts+1,fsr2h
  3114  0009B4  C068  FFDE         	movff	??_feu,postinc2
  3115  0009B8  C069  FFDD         	movff	??_feu+1,postdec2
  3116  0009BC  EFF2  F004         	goto	l127
  3117  0009C0                     l2509:
  3118                           
  3119                           ; BSR set to: 0
  3120  0009C0  0100               	movlb	0	; force () banked
  3121  0009C2  076D               	decf	feu@i& (0+255),f,b
  3122  0009C4  A0D8               	btfss	status,0,c
  3123  0009C6  076E               	decf	(feu@i+1)& (0+255),f,b
  3124  0009C8                     
  3125                           ; BSR set to: 0
  3126  0009C8  0100               	movlb	0	; force () banked
  3127  0009CA  BF6E               	btfsc	(feu@i+1)& (0+255),7,b
  3128  0009CC  EFF2  F004         	goto	u1310
  3129  0009D0  516E               	movf	(feu@i+1)& (0+255),w,b
  3130  0009D2  E106               	bnz	u1311
  3131  0009D4  056D               	decf	feu@i& (0+255),w,b
  3132  0009D6  B0D8               	btfsc	status,0,c
  3133  0009D8  EFF0  F004         	goto	u1311
  3134  0009DC  EFF2  F004         	goto	u1310
  3135  0009E0                     u1311:
  3136  0009E0  EF4F  F003         	goto	l2467
  3137  0009E4                     u1310:
  3138  0009E4                     l127:
  3139  0009E4  0012               	return		;funcret
  3140  0009E6                     __end_of_feu:
  3141                           	opt callstack 0
  3142                           
  3143 ;; *************** function ___wmul *****************
  3144 ;; Defined at:
  3145 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3148 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  product         2    4[BANK0 ] unsigned int 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  2    0[BANK0 ] unsigned int 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, prodl, prodh
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3160 ;;      Params:         0       4       0       0       0       0       0
  3161 ;;      Locals:         0       2       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0
  3163 ;;      Totals:         0       6       0       0       0       0       0
  3164 ;;Total ram usage:        6 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_feu
  3171 ;;		_videAliens
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text15
  3176  001B26                     __ptext15:
  3177                           	opt callstack 0
  3178  001B26                     ___wmul:
  3179                           	opt callstack 28
  3180  001B26  0100               	movlb	0	; () banked
  3181  001B28  5160               	movf	___wmul@multiplier& (0+255),w,b
  3182  001B2A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3183  001B2C  CFF3 F064          	movff	prodl,___wmul@product
  3184  001B30  CFF4 F065          	movff	prodh,___wmul@product+1
  3185  001B34  5160               	movf	___wmul@multiplier& (0+255),w,b
  3186  001B36  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3187  001B38  50F3               	movf	243,w,c
  3188  001B3A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3189  001B3C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3190  001B3E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3191  001B40  50F3               	movf	243,w,c
  3192  001B42  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3193  001B44                     
  3194                           ; BSR set to: 0
  3195  001B44  C064  F060         	movff	___wmul@product,?___wmul
  3196  001B48  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3197  001B4C                     
  3198                           ; BSR set to: 0
  3199  001B4C  0012               	return		;funcret
  3200  001B4E                     __end_of___wmul:
  3201                           	opt callstack 0
  3202                           
  3203 ;; *************** function _deplace *****************
  3204 ;; Defined at:
  3205 ;;		line 172 in file "main.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3208 ;;		 -> main@posX(2), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         0       2       0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0
  3222 ;;      Temps:          0       1       0       0       0       0       0
  3223 ;;      Totals:         0       3       0       0       0       0       0
  3224 ;;Total ram usage:        3 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    5
  3227 ;; This function calls:
  3228 ;;		_getAnalog
  3229 ;;		_lcd_ecritChar
  3230 ;;		_lcd_gotoXY
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text16
  3237  00104A                     __ptext16:
  3238                           	opt callstack 0
  3239  00104A                     _deplace:
  3240                           	opt callstack 25
  3241  00104A                     
  3242                           ;main.c: 175: if((getAnalog(7) > 200))
  3243  00104A  0E07               	movlw	7
  3244  00104C  EC69  F00D         	call	_getAnalog
  3245  001050  0100               	movlb	0	; force () banked
  3246  001052  6F67               	movwf	??_deplace& (0+255),b
  3247  001054  0EC8               	movlw	200
  3248  001056  6567               	cpfsgt	??_deplace& (0+255),b
  3249  001058  EF30  F008         	goto	u1211
  3250  00105C  EF32  F008         	goto	u1210
  3251  001060                     u1211:
  3252  001060  EF5E  F008         	goto	l2441
  3253  001064                     u1210:
  3254  001064                     
  3255                           ; BSR set to: 0
  3256                           ;main.c: 176: {;main.c: 177: lcd_gotoXY(((*x)),4);
  3257  001064  0E04               	movlw	4
  3258  001066  0100               	movlb	0	; force () banked
  3259  001068  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3260  00106A  C065  FFD9         	movff	deplace@x,fsr2l
  3261  00106E  C066  FFDA         	movff	deplace@x+1,fsr2h
  3262  001072  50DF               	movf	indf2,w,c
  3263  001074  ECF7  F00A         	call	_lcd_gotoXY
  3264  001078                     
  3265                           ;main.c: 178: lcd_ecritChar(' ');
  3266  001078  0E20               	movlw	32
  3267  00107A  ECBB  F00C         	call	_lcd_ecritChar
  3268  00107E                     
  3269                           ;main.c: 179: (*x) = (*x) +1;
  3270  00107E  C065  FFD9         	movff	deplace@x,fsr2l
  3271  001082  C066  FFDA         	movff	deplace@x+1,fsr2h
  3272  001086  50DF               	movf	indf2,w,c
  3273  001088  0100               	movlb	0	; force () banked
  3274  00108A  6F67               	movwf	??_deplace& (0+255),b
  3275  00108C  2967               	incf	??_deplace& (0+255),w,b
  3276  00108E  C065  FFD9         	movff	deplace@x,fsr2l
  3277  001092  C066  FFDA         	movff	deplace@x+1,fsr2h
  3278  001096  6EDF               	movwf	indf2,c
  3279  001098                     
  3280                           ; BSR set to: 0
  3281                           ;main.c: 180: if(*x > 20)
  3282  001098  C065  FFD9         	movff	deplace@x,fsr2l
  3283  00109C  C066  FFDA         	movff	deplace@x+1,fsr2h
  3284  0010A0  0E14               	movlw	20
  3285  0010A2  64DF               	cpfsgt	indf2,c
  3286  0010A4  EF56  F008         	goto	u1221
  3287  0010A8  EF58  F008         	goto	u1220
  3288  0010AC                     u1221:
  3289  0010AC  EF5E  F008         	goto	l2441
  3290  0010B0                     u1220:
  3291  0010B0                     
  3292                           ; BSR set to: 0
  3293                           ;main.c: 181: {;main.c: 182: *x=1;
  3294  0010B0  C065  FFD9         	movff	deplace@x,fsr2l
  3295  0010B4  C066  FFDA         	movff	deplace@x+1,fsr2h
  3296  0010B8  0E01               	movlw	1
  3297  0010BA  6EDF               	movwf	indf2,c
  3298  0010BC                     l2441:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;main.c: 183: };main.c: 186: };main.c: 187: if(getAnalog(7) < 100)
  3302  0010BC  0E07               	movlw	7
  3303  0010BE  EC69  F00D         	call	_getAnalog
  3304  0010C2  0100               	movlb	0	; force () banked
  3305  0010C4  6F67               	movwf	??_deplace& (0+255),b
  3306  0010C6  0E64               	movlw	100
  3307  0010C8  6167               	cpfslt	??_deplace& (0+255),b
  3308  0010CA  EF69  F008         	goto	u1231
  3309  0010CE  EF6B  F008         	goto	u1230
  3310  0010D2                     u1231:
  3311  0010D2  EF97  F008         	goto	l2453
  3312  0010D6                     u1230:
  3313  0010D6                     
  3314                           ; BSR set to: 0
  3315                           ;main.c: 188: {;main.c: 189: lcd_gotoXY(((*x)),4);
  3316  0010D6  0E04               	movlw	4
  3317  0010D8  0100               	movlb	0	; force () banked
  3318  0010DA  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3319  0010DC  C065  FFD9         	movff	deplace@x,fsr2l
  3320  0010E0  C066  FFDA         	movff	deplace@x+1,fsr2h
  3321  0010E4  50DF               	movf	indf2,w,c
  3322  0010E6  ECF7  F00A         	call	_lcd_gotoXY
  3323  0010EA                     
  3324                           ;main.c: 190: lcd_ecritChar(' ');
  3325  0010EA  0E20               	movlw	32
  3326  0010EC  ECBB  F00C         	call	_lcd_ecritChar
  3327  0010F0                     
  3328                           ;main.c: 191: (*x) = (*x) -1;
  3329  0010F0  C065  FFD9         	movff	deplace@x,fsr2l
  3330  0010F4  C066  FFDA         	movff	deplace@x+1,fsr2h
  3331  0010F8  50DF               	movf	indf2,w,c
  3332  0010FA  0100               	movlb	0	; force () banked
  3333  0010FC  6F67               	movwf	??_deplace& (0+255),b
  3334  0010FE  0567               	decf	??_deplace& (0+255),w,b
  3335  001100  C065  FFD9         	movff	deplace@x,fsr2l
  3336  001104  C066  FFDA         	movff	deplace@x+1,fsr2h
  3337  001108  6EDF               	movwf	indf2,c
  3338  00110A                     
  3339                           ; BSR set to: 0
  3340                           ;main.c: 192: if(*x < 1)
  3341  00110A  C065  FFD9         	movff	deplace@x,fsr2l
  3342  00110E  C066  FFDA         	movff	deplace@x+1,fsr2h
  3343  001112  50DF               	movf	indf2,w,c
  3344  001114  A4D8               	btfss	status,2,c
  3345  001116  EF8F  F008         	goto	u1241
  3346  00111A  EF91  F008         	goto	u1240
  3347  00111E                     u1241:
  3348  00111E  EF97  F008         	goto	l2453
  3349  001122                     u1240:
  3350  001122                     
  3351                           ; BSR set to: 0
  3352                           ;main.c: 193: {;main.c: 194: *x=20;
  3353  001122  C065  FFD9         	movff	deplace@x,fsr2l
  3354  001126  C066  FFDA         	movff	deplace@x+1,fsr2h
  3355  00112A  0E14               	movlw	20
  3356  00112C  6EDF               	movwf	indf2,c
  3357  00112E                     l2453:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 195: };main.c: 196: };main.c: 197: lcd_gotoXY((*x),4);
  3361  00112E  0E04               	movlw	4
  3362  001130  0100               	movlb	0	; force () banked
  3363  001132  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3364  001134  C065  FFD9         	movff	deplace@x,fsr2l
  3365  001138  C066  FFDA         	movff	deplace@x+1,fsr2h
  3366  00113C  50DF               	movf	indf2,w,c
  3367  00113E  ECF7  F00A         	call	_lcd_gotoXY
  3368  001142                     
  3369                           ;main.c: 198: lcd_ecritChar(0);
  3370  001142  0E00               	movlw	0
  3371  001144  ECBB  F00C         	call	_lcd_ecritChar
  3372  001148  0012               	return		;funcret
  3373  00114A                     __end_of_deplace:
  3374                           	opt callstack 0
  3375                           
  3376 ;; *************** function _getAnalog *****************
  3377 ;; Defined at:
  3378 ;;		line 309 in file "main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  canal           1    wreg     unsigned char 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  canal           1    1[BANK0 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3392 ;;      Params:         0       0       0       0       0       0       0
  3393 ;;      Locals:         0       1       0       0       0       0       0
  3394 ;;      Temps:          0       1       0       0       0       0       0
  3395 ;;      Totals:         0       2       0       0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    1
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_deplace
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text17
  3407  001AD2                     __ptext17:
  3408                           	opt callstack 0
  3409  001AD2                     _getAnalog:
  3410                           	opt callstack 28
  3411                           
  3412                           ;incstack = 0
  3413                           ;getAnalog@canal stored from wreg
  3414  001AD2  0100               	movlb	0	; force () banked
  3415  001AD4  6F61               	movwf	getAnalog@canal& (0+255),b
  3416  001AD6                     
  3417                           ;main.c: 311: ADCON0bits.CHS = canal;
  3418  001AD6  C061  F060         	movff	getAnalog@canal,??_getAnalog
  3419  001ADA  0100               	movlb	0	; force () banked
  3420  001ADC  4760               	rlncf	??_getAnalog& (0+255),f,b
  3421  001ADE  4760               	rlncf	??_getAnalog& (0+255),f,b
  3422  001AE0  50C2               	movf	194,w,c	;volatile
  3423  001AE2  1960               	xorwf	??_getAnalog& (0+255),w,b
  3424  001AE4  0BC3               	andlw	-61
  3425  001AE6  1960               	xorwf	??_getAnalog& (0+255),w,b
  3426  001AE8  6EC2               	movwf	194,c	;volatile
  3427  001AEA                     
  3428                           ;main.c: 313: ADCON0bits.GO_DONE = 1;
  3429  001AEA  82C2               	bsf	194,1,c	;volatile
  3430  001AEC                     l150:
  3431  001AEC  B2C2               	btfsc	194,1,c	;volatile
  3432  001AEE  EF7B  F00D         	goto	u241
  3433  001AF2  EF7D  F00D         	goto	u240
  3434  001AF6                     u241:
  3435  001AF6  EF76  F00D         	goto	l150
  3436  001AFA                     u240:
  3437  001AFA                     
  3438                           ;main.c: 316: return ADRESH;
  3439  001AFA  50C4               	movf	196,w,c	;volatile
  3440  001AFC  0012               	return		;funcret
  3441  001AFE                     __end_of_getAnalog:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _affichePerdu *****************
  3445 ;; Defined at:
  3446 ;;		line 281 in file "main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  pts             2   26[BANK0 ] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  buffer         50   30[BANK0 ] unsigned char [50]
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3460 ;;      Params:         0       2       0       0       0       0       0
  3461 ;;      Locals:         0      50       0       0       0       0       0
  3462 ;;      Temps:          0       2       0       0       0       0       0
  3463 ;;      Totals:         0      54       0       0       0       0       0
  3464 ;;Total ram usage:       54 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    6
  3467 ;; This function calls:
  3468 ;;		_lcd_cacheCurseur
  3469 ;;		_lcd_effaceAffichage
  3470 ;;		_lcd_putMessage
  3471 ;;		_sprintf
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text18
  3478  00186E                     __ptext18:
  3479                           	opt callstack 0
  3480  00186E                     _affichePerdu:
  3481                           	opt callstack 24
  3482  00186E                     
  3483                           ;main.c: 283: char buffer[50];;main.c: 284: lcd_cacheCurseur();
  3484  00186E  ECC8  F00D         	call	_lcd_cacheCurseur	;wreg free
  3485                           
  3486                           ;main.c: 285: lcd_effaceAffichage();
  3487  001872  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
  3488  001876                     
  3489                           ;main.c: 286: sprintf(buffer, "Perdu... score: %d", pts);
  3490  001876  0E7E               	movlw	low affichePerdu@buffer
  3491  001878  0100               	movlb	0	; force () banked
  3492  00187A  6F6C               	movwf	sprintf@sp& (0+255),b
  3493  00187C  0E00               	movlw	high affichePerdu@buffer
  3494  00187E  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3495  001880  0E34               	movlw	low STR_2
  3496  001882  0100               	movlb	0	; force () banked
  3497  001884  6F6E               	movwf	sprintf@f& (0+255),b
  3498  001886  0E06               	movlw	high STR_2
  3499  001888  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3500  00188A  C07A  F070         	movff	affichePerdu@pts,?_sprintf+4
  3501  00188E  C07B  F071         	movff	affichePerdu@pts+1,?_sprintf+5
  3502  001892  ECFA  F005         	call	_sprintf	;wreg free
  3503  001896                     
  3504                           ;main.c: 287: lcd_putMessage(buffer);
  3505  001896  0E7E               	movlw	low affichePerdu@buffer
  3506  001898  0100               	movlb	0	; force () banked
  3507  00189A  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  3508  00189C  0E00               	movlw	high affichePerdu@buffer
  3509  00189E  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3510  0018A0  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  3511  0018A2  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3512  0018A4  A4D8               	btfss	status,2,c
  3513  0018A6  0E20               	movlw	32
  3514  0018A8  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3515  0018AA  EC6E  F009         	call	_lcd_putMessage	;wreg free
  3516  0018AE                     
  3517                           ;main.c: 288: _delay((unsigned long)((4000)*(1000000/4000.0)));
  3518  0018AE  0E06               	movlw	6
  3519  0018B0  0100               	movlb	0	; force () banked
  3520  0018B2  6F7D               	movwf	(??_affichePerdu+1)& (0+255),b
  3521  0018B4  0E13               	movlw	19
  3522  0018B6  6F7C               	movwf	??_affichePerdu& (0+255),b
  3523  0018B8  0EAD               	movlw	173
  3524  0018BA                     u1517:
  3525  0018BA  2EE8               	decfsz	wreg,f,c
  3526  0018BC  D7FE               	bra	u1517
  3527  0018BE  2F7C               	decfsz	??_affichePerdu& (0+255),f,b
  3528  0018C0  D7FC               	bra	u1517
  3529  0018C2  2F7D               	decfsz	(??_affichePerdu+1)& (0+255),f,b
  3530  0018C4  D7FA               	bra	u1517
  3531  0018C6  F000 F000          	nop2	
  3532  0018CA  0012               	return		;funcret
  3533  0018CC                     __end_of_affichePerdu:
  3534                           	opt callstack 0
  3535                           
  3536 ;; *************** function _sprintf *****************
  3537 ;; Defined at:
  3538 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3541 ;;		 -> affichePerdu@buffer(50), main@bufferNiveau(50), 
  3542 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3543 ;;		 -> STR_2(19), STR_1(11), 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  tmpval          4    0        struct .
  3546 ;;  cp              3    0        PTR const unsigned char 
  3547 ;;  val             2   23[BANK0 ] unsigned int 
  3548 ;;  ap              2   19[BANK0 ] PTR void [1]
  3549 ;;		 -> ?_sprintf(2), 
  3550 ;;  len             2    0        unsigned int 
  3551 ;;  c               1   25[BANK0 ] unsigned char 
  3552 ;;  prec            1   22[BANK0 ] char 
  3553 ;;  flag            1   21[BANK0 ] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2   12[BANK0 ] int 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         0       6       0       0       0       0       0
  3564 ;;      Locals:         0       7       0       0       0       0       0
  3565 ;;      Temps:          0       1       0       0       0       0       0
  3566 ;;      Totals:         0      14       0       0       0       0       0
  3567 ;;Total ram usage:       14 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    2
  3570 ;; This function calls:
  3571 ;;		___lwdiv
  3572 ;;		___lwmod
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;;		_affichePerdu
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text19
  3580  000BF4                     __ptext19:
  3581                           	opt callstack 0
  3582  000BF4                     _sprintf:
  3583                           	opt callstack 28
  3584  000BF4                     
  3585                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3586  000BF4  0E70               	movlw	low (?_sprintf+4)
  3587  000BF6  0100               	movlb	0	; force () banked
  3588  000BF8  6F73               	movwf	sprintf@ap& (0+255),b
  3589  000BFA  0E00               	movlw	high (?_sprintf+4)
  3590  000BFC  6F74               	movwf	(sprintf@ap+1)& (0+255),b
  3591                           
  3592                           ;doprnt.c: 553: while((c = *f++)) {
  3593  000BFE  EFDC  F006         	goto	l2149
  3594  000C02                     l2097:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;doprnt.c: 555: if(c != '%')
  3598  000C02  0E25               	movlw	37
  3599  000C04  0100               	movlb	0	; force () banked
  3600  000C06  1979               	xorwf	sprintf@c& (0+255),w,b
  3601  000C08  B4D8               	btfsc	status,2,c
  3602  000C0A  EF09  F006         	goto	u891
  3603  000C0E  EF0B  F006         	goto	u890
  3604  000C12                     u891:
  3605  000C12  EF16  F006         	goto	l2103
  3606  000C16                     u890:
  3607  000C16                     
  3608                           ; BSR set to: 0
  3609                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3610  000C16  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3611  000C1A  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3612  000C1E  C079  FFDF         	movff	sprintf@c,indf2
  3613  000C22                     
  3614                           ; BSR set to: 0
  3615  000C22  0100               	movlb	0	; force () banked
  3616  000C24  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3617  000C26  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3618                           
  3619                           ;doprnt.c: 559: continue;
  3620  000C28  EFDC  F006         	goto	l2149
  3621  000C2C                     l2103:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3625  000C2C  0E00               	movlw	0
  3626  000C2E  0100               	movlb	0	; force () banked
  3627  000C30  6F75               	movwf	sprintf@flag& (0+255),b
  3628  000C32                     
  3629                           ; BSR set to: 0
  3630  000C32  C06E  FFF6         	movff	sprintf@f,tblptrl
  3631  000C36  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3632  000C3A  0100               	movlb	0	; force () banked
  3633  000C3C  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3634  000C3E  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3635  000C40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3636  000C40  6AF8               	clrf	tblptru,c
  3637  000C42                     	endif
  3638  000C42                     	if	0	;tblptru may be non-zero
  3639  000C42                     	endif
  3640  000C42  0008               	tblrd		*
  3641  000C44  CFF5 F079          	movff	tablat,sprintf@c
  3642  000C48  0100               	movlb	0	; force () banked
  3643  000C4A  5179               	movf	sprintf@c& (0+255),w,b
  3644                           
  3645                           ; Switch size 1, requested type "simple"
  3646                           ; Number of cases is 3, Range of values is 0 to 105
  3647                           ; switch strategies available:
  3648                           ; Name         Instructions Cycles
  3649                           ; simple_byte           10     6 (average)
  3650                           ;	Chosen strategy is simple_byte
  3651  000C4C  0A00               	xorlw	0	; case 0
  3652  000C4E  B4D8               	btfsc	status,2,c
  3653  000C50  EFF0  F006         	goto	l2151
  3654  000C54  0A64               	xorlw	100	; case 100
  3655  000C56  B4D8               	btfsc	status,2,c
  3656  000C58  EF34  F006         	goto	l2109
  3657  000C5C  0A0D               	xorlw	13	; case 105
  3658  000C5E  B4D8               	btfsc	status,2,c
  3659  000C60  EF34  F006         	goto	l2109
  3660  000C64  EFDC  F006         	goto	l2149
  3661  000C68                     l2109:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3665  000C68  C073  FFD9         	movff	sprintf@ap,fsr2l
  3666  000C6C  C074  FFDA         	movff	sprintf@ap+1,fsr2h
  3667  000C70  CFDE F077          	movff	postinc2,sprintf@val
  3668  000C74  CFDD F078          	movff	postdec2,sprintf@val+1
  3669  000C78                     
  3670                           ; BSR set to: 0
  3671  000C78  0E02               	movlw	2
  3672  000C7A  0100               	movlb	0	; force () banked
  3673  000C7C  2773               	addwf	sprintf@ap& (0+255),f,b
  3674  000C7E  0E00               	movlw	0
  3675  000C80  2374               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3676  000C82                     
  3677                           ; BSR set to: 0
  3678                           ;doprnt.c: 1287: if((int)val < 0) {
  3679  000C82  0100               	movlb	0	; force () banked
  3680  000C84  BF78               	btfsc	(sprintf@val+1)& (0+255),7,b
  3681  000C86  EF49  F006         	goto	u900
  3682  000C8A  EF47  F006         	goto	u901
  3683  000C8E                     u901:
  3684  000C8E  EF51  F006         	goto	l2119
  3685  000C92                     u900:
  3686  000C92                     
  3687                           ; BSR set to: 0
  3688                           ;doprnt.c: 1288: flag |= 0x03;
  3689  000C92  0E03               	movlw	3
  3690  000C94  0100               	movlb	0	; force () banked
  3691  000C96  1375               	iorwf	sprintf@flag& (0+255),f,b
  3692  000C98                     
  3693                           ; BSR set to: 0
  3694                           ;doprnt.c: 1289: val = -val;
  3695  000C98  0100               	movlb	0	; force () banked
  3696  000C9A  6D77               	negf	sprintf@val& (0+255),b
  3697  000C9C  1F78               	comf	(sprintf@val+1)& (0+255),f,b
  3698  000C9E  B0D8               	btfsc	status,0,c
  3699  000CA0  2B78               	incf	(sprintf@val+1)& (0+255),f,b
  3700  000CA2                     l2119:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3704  000CA2  0E01               	movlw	1
  3705  000CA4  0100               	movlb	0	; force () banked
  3706  000CA6  6F79               	movwf	sprintf@c& (0+255),b
  3707  000CA8                     
  3708                           ; BSR set to: 0
  3709  000CA8  0E05               	movlw	5
  3710  000CAA  0100               	movlb	0	; force () banked
  3711  000CAC  1979               	xorwf	sprintf@c& (0+255),w,b
  3712  000CAE  A4D8               	btfss	status,2,c
  3713  000CB0  EF5C  F006         	goto	u911
  3714  000CB4  EF5E  F006         	goto	u910
  3715  000CB8                     u911:
  3716  000CB8  EF60  F006         	goto	l2125
  3717  000CBC                     u910:
  3718  000CBC  EF88  F006         	goto	l2133
  3719  000CC0                     l2125:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;doprnt.c: 1332: if(val < dpowers[c])
  3723  000CC0  0100               	movlb	0	; force () banked
  3724  000CC2  5179               	movf	sprintf@c& (0+255),w,b
  3725  000CC4  0D02               	mullw	2
  3726  000CC6  0E11               	movlw	low _dpowers
  3727  000CC8  24F3               	addwf	243,w,c
  3728  000CCA  6EF6               	movwf	tblptrl,c
  3729  000CCC  0E06               	movlw	high _dpowers
  3730  000CCE  20F4               	addwfc	244,w,c
  3731  000CD0  6EF7               	movwf	tblptrh,c
  3732  000CD2                     	if	1	;There are 3 active tblptr bytes
  3733  000CD2  6AF8               	clrf	tblptru,c
  3734  000CD4  0E00               	movlw	low (__mediumconst shr (0+16))
  3735  000CD6  22F8               	addwfc	tblptru,f,c
  3736  000CD8                     	endif
  3737  000CD8  0009               	tblrd		*+
  3738  000CDA  50F5               	movf	tablat,w,c
  3739  000CDC  0100               	movlb	0	; force () banked
  3740  000CDE  5D77               	subwf	sprintf@val& (0+255),w,b
  3741  000CE0  0009               	tblrd		*+
  3742  000CE2  50F5               	movf	tablat,w,c
  3743  000CE4  5978               	subwfb	(sprintf@val+1)& (0+255),w,b
  3744  000CE6  B0D8               	btfsc	status,0,c
  3745  000CE8  EF78  F006         	goto	u921
  3746  000CEC  EF7A  F006         	goto	u920
  3747  000CF0                     u921:
  3748  000CF0  EF7C  F006         	goto	l2129
  3749  000CF4                     u920:
  3750  000CF4  EF88  F006         	goto	l2133
  3751  000CF8                     l2129:
  3752                           
  3753                           ; BSR set to: 0
  3754  000CF8  0100               	movlb	0	; force () banked
  3755  000CFA  2B79               	incf	sprintf@c& (0+255),f,b
  3756  000CFC                     
  3757                           ; BSR set to: 0
  3758  000CFC  0E05               	movlw	5
  3759  000CFE  0100               	movlb	0	; force () banked
  3760  000D00  1979               	xorwf	sprintf@c& (0+255),w,b
  3761  000D02  A4D8               	btfss	status,2,c
  3762  000D04  EF86  F006         	goto	u931
  3763  000D08  EF88  F006         	goto	u930
  3764  000D0C                     u931:
  3765  000D0C  EF60  F006         	goto	l2125
  3766  000D10                     u930:
  3767  000D10                     l2133:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3771  000D10  C075  F072         	movff	sprintf@flag,??_sprintf
  3772  000D14  0E03               	movlw	3
  3773  000D16  0100               	movlb	0	; force () banked
  3774  000D18  1772               	andwf	??_sprintf& (0+255),f,b
  3775  000D1A  B4D8               	btfsc	status,2,c
  3776  000D1C  EF92  F006         	goto	u941
  3777  000D20  EF94  F006         	goto	u940
  3778  000D24                     u941:
  3779  000D24  EF9D  F006         	goto	l2139
  3780  000D28                     u940:
  3781  000D28                     
  3782                           ; BSR set to: 0
  3783                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3784  000D28  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3785  000D2C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3786  000D30  0E2D               	movlw	45
  3787  000D32  6EDF               	movwf	indf2,c
  3788  000D34                     
  3789                           ; BSR set to: 0
  3790  000D34  0100               	movlb	0	; force () banked
  3791  000D36  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3792  000D38  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3793  000D3A                     l2139:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3797  000D3A  C079  F076         	movff	sprintf@c,sprintf@prec
  3798                           
  3799                           ;doprnt.c: 1500: while(prec--) {
  3800  000D3E  EFD2  F006         	goto	l2147
  3801  000D42                     l2141:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3805  000D42  0100               	movlb	0	; force () banked
  3806  000D44  5176               	movf	sprintf@prec& (0+255),w,b
  3807  000D46  0D02               	mullw	2
  3808  000D48  0E11               	movlw	low _dpowers
  3809  000D4A  24F3               	addwf	243,w,c
  3810  000D4C  6EF6               	movwf	tblptrl,c
  3811  000D4E  0E06               	movlw	high _dpowers
  3812  000D50  20F4               	addwfc	244,w,c
  3813  000D52  6EF7               	movwf	tblptrh,c
  3814  000D54                     	if	1	;There are 3 active tblptr bytes
  3815  000D54  6AF8               	clrf	tblptru,c
  3816  000D56  0E00               	movlw	low (__mediumconst shr (0+16))
  3817  000D58  22F8               	addwfc	tblptru,f,c
  3818  000D5A                     	endif
  3819  000D5A  0009               	tblrd		*+
  3820  000D5C  CFF5 F062          	movff	tablat,___lwdiv@divisor
  3821  000D60  000A               	tblrd		*-
  3822  000D62  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  3823  000D66  C077  F060         	movff	sprintf@val,___lwdiv@dividend
  3824  000D6A  C078  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  3825  000D6E  ECBC  F00A         	call	___lwdiv	;wreg free
  3826  000D72  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  3827  000D76  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  3828  000D7A  0E00               	movlw	0
  3829  000D7C  0100               	movlb	0	; force () banked
  3830  000D7E  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  3831  000D80  0E0A               	movlw	10
  3832  000D82  6F69               	movwf	___lwmod@divisor& (0+255),b
  3833  000D84  ECD1  F00B         	call	___lwmod	;wreg free
  3834  000D88  0100               	movlb	0	; force () banked
  3835  000D8A  5167               	movf	?___lwmod& (0+255),w,b
  3836  000D8C  0F30               	addlw	48
  3837  000D8E  0100               	movlb	0	; force () banked
  3838  000D90  6F79               	movwf	sprintf@c& (0+255),b
  3839  000D92                     
  3840                           ; BSR set to: 0
  3841                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3842  000D92  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3843  000D96  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3844  000D9A  C079  FFDF         	movff	sprintf@c,indf2
  3845  000D9E                     
  3846                           ; BSR set to: 0
  3847  000D9E  0100               	movlb	0	; force () banked
  3848  000DA0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3849  000DA2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3850  000DA4                     l2147:
  3851                           
  3852                           ; BSR set to: 0
  3853  000DA4  0100               	movlb	0	; force () banked
  3854  000DA6  0776               	decf	sprintf@prec& (0+255),f,b
  3855  000DA8  2976               	incf	sprintf@prec& (0+255),w,b
  3856  000DAA  A4D8               	btfss	status,2,c
  3857  000DAC  EFDA  F006         	goto	u951
  3858  000DB0  EFDC  F006         	goto	u950
  3859  000DB4                     u951:
  3860  000DB4  EFA1  F006         	goto	l2141
  3861  000DB8                     u950:
  3862  000DB8                     l2149:
  3863                           
  3864                           ; BSR set to: 0
  3865  000DB8  C06E  FFF6         	movff	sprintf@f,tblptrl
  3866  000DBC  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3867  000DC0  0100               	movlb	0	; force () banked
  3868  000DC2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3869  000DC4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3870  000DC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3871  000DC6  6AF8               	clrf	tblptru,c
  3872  000DC8                     	endif
  3873  000DC8                     	if	0	;tblptru may be non-zero
  3874  000DC8                     	endif
  3875  000DC8  0008               	tblrd		*
  3876  000DCA  CFF5 F079          	movff	tablat,sprintf@c
  3877  000DCE  0100               	movlb	0	; force () banked
  3878  000DD0  5179               	movf	sprintf@c& (0+255),w,b
  3879  000DD2  A4D8               	btfss	status,2,c
  3880  000DD4  EFEE  F006         	goto	u961
  3881  000DD8  EFF0  F006         	goto	u960
  3882  000DDC                     u961:
  3883  000DDC  EF01  F006         	goto	l2097
  3884  000DE0                     u960:
  3885  000DE0                     l2151:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;doprnt.c: 1564: *sp = 0;
  3889  000DE0  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3890  000DE4  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3891  000DE8  0E00               	movlw	0
  3892  000DEA  6EDF               	movwf	indf2,c
  3893  000DEC                     
  3894                           ; BSR set to: 0
  3895                           ;doprnt.c: 1566: return 0;
  3896  000DEC  0E00               	movlw	0
  3897  000DEE  0100               	movlb	0	; force () banked
  3898  000DF0  6F6D               	movwf	(?_sprintf+1)& (0+255),b
  3899  000DF2  0E00               	movlw	0
  3900  000DF4  6F6C               	movwf	?_sprintf& (0+255),b
  3901  000DF6                     
  3902                           ; BSR set to: 0
  3903  000DF6  0012               	return		;funcret
  3904  000DF8                     __end_of_sprintf:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function ___lwmod *****************
  3908 ;; Defined at:
  3909 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  dividend        2    7[BANK0 ] unsigned int 
  3912 ;;  divisor         2    9[BANK0 ] unsigned int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  counter         1   11[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    7[BANK0 ] unsigned int 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3924 ;;      Params:         0       4       0       0       0       0       0
  3925 ;;      Locals:         0       1       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0
  3927 ;;      Totals:         0       5       0       0       0       0       0
  3928 ;;Total ram usage:        5 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_sprintf
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text20
  3939  0017A2                     __ptext20:
  3940                           	opt callstack 0
  3941  0017A2                     ___lwmod:
  3942                           	opt callstack 28
  3943  0017A2  0100               	movlb	0	; () banked
  3944  0017A4  5169               	movf	___lwmod@divisor& (0+255),w,b
  3945  0017A6  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3946  0017A8  B4D8               	btfsc	status,2,c
  3947  0017AA  EFD9  F00B         	goto	u831
  3948  0017AE  EFDB  F00B         	goto	u830
  3949  0017B2                     u831:
  3950  0017B2  EFFF  F00B         	goto	l825
  3951  0017B6                     u830:
  3952  0017B6                     
  3953                           ; BSR set to: 0
  3954  0017B6  0E01               	movlw	1
  3955  0017B8  6F6B               	movwf	___lwmod@counter& (0+255),b
  3956  0017BA  EFE3  F00B         	goto	l2059
  3957  0017BE                     l2057:
  3958                           
  3959                           ; BSR set to: 0
  3960  0017BE  90D8               	bcf	status,0,c
  3961  0017C0  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  3962  0017C2  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3963  0017C4  2B6B               	incf	___lwmod@counter& (0+255),f,b
  3964  0017C6                     l2059:
  3965                           
  3966                           ; BSR set to: 0
  3967  0017C6  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3968  0017C8  EFE8  F00B         	goto	u841
  3969  0017CC  EFEA  F00B         	goto	u840
  3970  0017D0                     u841:
  3971  0017D0  EFDF  F00B         	goto	l2057
  3972  0017D4                     u840:
  3973  0017D4                     l2061:
  3974                           
  3975                           ; BSR set to: 0
  3976  0017D4  5169               	movf	___lwmod@divisor& (0+255),w,b
  3977  0017D6  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  3978  0017D8  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3979  0017DA  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3980  0017DC  A0D8               	btfss	status,0,c
  3981  0017DE  EFF3  F00B         	goto	u851
  3982  0017E2  EFF5  F00B         	goto	u850
  3983  0017E6                     u851:
  3984  0017E6  EFF9  F00B         	goto	l2065
  3985  0017EA                     u850:
  3986  0017EA                     
  3987                           ; BSR set to: 0
  3988  0017EA  5169               	movf	___lwmod@divisor& (0+255),w,b
  3989  0017EC  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  3990  0017EE  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3991  0017F0  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3992  0017F2                     l2065:
  3993                           
  3994                           ; BSR set to: 0
  3995  0017F2  90D8               	bcf	status,0,c
  3996  0017F4  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3997  0017F6  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  3998  0017F8                     
  3999                           ; BSR set to: 0
  4000  0017F8  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  4001  0017FA  EFEA  F00B         	goto	l2061
  4002  0017FE                     l825:
  4003                           
  4004                           ; BSR set to: 0
  4005  0017FE  C067  F067         	movff	___lwmod@dividend,?___lwmod
  4006  001802  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  4007  001806                     
  4008                           ; BSR set to: 0
  4009  001806  0012               	return		;funcret
  4010  001808                     __end_of___lwmod:
  4011                           	opt callstack 0
  4012                           
  4013 ;; *************** function ___lwdiv *****************
  4014 ;; Defined at:
  4015 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  dividend        2    0[BANK0 ] unsigned int 
  4018 ;;  divisor         2    2[BANK0 ] unsigned int 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  quotient        2    4[BANK0 ] unsigned int 
  4021 ;;  counter         1    6[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2    0[BANK0 ] unsigned int 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4031 ;;      Params:         0       4       0       0       0       0       0
  4032 ;;      Locals:         0       3       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0
  4034 ;;      Totals:         0       7       0       0       0       0       0
  4035 ;;Total ram usage:        7 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    1
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_sprintf
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text21
  4046  001578                     __ptext21:
  4047                           	opt callstack 0
  4048  001578                     ___lwdiv:
  4049                           	opt callstack 28
  4050  001578  0E00               	movlw	0
  4051  00157A  0100               	movlb	0	; () banked
  4052  00157C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4053  00157E  0E00               	movlw	0
  4054  001580  6F64               	movwf	___lwdiv@quotient& (0+255),b
  4055  001582                     
  4056                           ; BSR set to: 0
  4057  001582  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4058  001584  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4059  001586  B4D8               	btfsc	status,2,c
  4060  001588  EFC8  F00A         	goto	u801
  4061  00158C  EFCA  F00A         	goto	u800
  4062  001590                     u801:
  4063  001590  EFF2  F00A         	goto	l815
  4064  001594                     u800:
  4065  001594                     
  4066                           ; BSR set to: 0
  4067  001594  0E01               	movlw	1
  4068  001596  6F66               	movwf	___lwdiv@counter& (0+255),b
  4069  001598  EFD2  F00A         	goto	l2039
  4070  00159C                     l2037:
  4071                           
  4072                           ; BSR set to: 0
  4073  00159C  90D8               	bcf	status,0,c
  4074  00159E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  4075  0015A0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4076  0015A2  2B66               	incf	___lwdiv@counter& (0+255),f,b
  4077  0015A4                     l2039:
  4078                           
  4079                           ; BSR set to: 0
  4080  0015A4  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4081  0015A6  EFD7  F00A         	goto	u811
  4082  0015AA  EFD9  F00A         	goto	u810
  4083  0015AE                     u811:
  4084  0015AE  EFCE  F00A         	goto	l2037
  4085  0015B2                     u810:
  4086  0015B2                     l2041:
  4087                           
  4088                           ; BSR set to: 0
  4089  0015B2  90D8               	bcf	status,0,c
  4090  0015B4  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  4091  0015B6  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4092  0015B8                     
  4093                           ; BSR set to: 0
  4094  0015B8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4095  0015BA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  4096  0015BC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4097  0015BE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4098  0015C0  A0D8               	btfss	status,0,c
  4099  0015C2  EFE5  F00A         	goto	u821
  4100  0015C6  EFE7  F00A         	goto	u820
  4101  0015CA                     u821:
  4102  0015CA  EFEC  F00A         	goto	l2049
  4103  0015CE                     u820:
  4104  0015CE                     
  4105                           ; BSR set to: 0
  4106  0015CE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4107  0015D0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  4108  0015D2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4109  0015D4  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4110  0015D6                     
  4111                           ; BSR set to: 0
  4112  0015D6  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  4113  0015D8                     l2049:
  4114                           
  4115                           ; BSR set to: 0
  4116  0015D8  90D8               	bcf	status,0,c
  4117  0015DA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4118  0015DC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  4119  0015DE                     
  4120                           ; BSR set to: 0
  4121  0015DE  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  4122  0015E0  EFD9  F00A         	goto	l2041
  4123  0015E4                     l815:
  4124                           
  4125                           ; BSR set to: 0
  4126  0015E4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  4127  0015E8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4128  0015EC                     
  4129                           ; BSR set to: 0
  4130  0015EC  0012               	return		;funcret
  4131  0015EE                     __end_of___lwdiv:
  4132                           	opt callstack 0
  4133                           
  4134 ;; *************** function _lcd_cacheCurseur *****************
  4135 ;; Defined at:
  4136 ;;		line 401 in file "Lcd4Lignes.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4150 ;;      Params:         0       0       0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    4
  4157 ;; This function calls:
  4158 ;;		_lcd_wrCom
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;;		_affichePerdu
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text22
  4166  001B90                     __ptext22:
  4167                           	opt callstack 0
  4168  001B90                     _lcd_cacheCurseur:
  4169                           	opt callstack 26
  4170  001B90                     
  4171                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  4172  001B90  0E0C               	movlw	12
  4173  001B92  EC66  F00B         	call	_lcd_wrCom
  4174  001B96  0012               	return		;funcret
  4175  001B98                     __end_of_lcd_cacheCurseur:
  4176                           	opt callstack 0
  4177                           
  4178 ;; *************** function _afficheAliens *****************
  4179 ;; Defined at:
  4180 ;;		line 123 in file "main.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4194 ;;      Params:         0       0       0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    6
  4201 ;; This function calls:
  4202 ;;		_lcd_effaceAffichage
  4203 ;;		_lcd_gotoXY
  4204 ;;		_lcd_putMessage
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text23
  4211  001808                     __ptext23:
  4212                           	opt callstack 0
  4213  001808                     _afficheAliens:
  4214                           	opt callstack 24
  4215  001808                     
  4216                           ;main.c: 125: lcd_effaceAffichage();
  4217  001808  ECBD  F00D         	call	_lcd_effaceAffichage	;wreg free
  4218  00180C                     
  4219                           ;main.c: 126: lcd_putMessage(m_aliens[0]);
  4220  00180C  0E40               	movlw	low _m_aliens
  4221  00180E  0100               	movlb	0	; force () banked
  4222  001810  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4223  001812  0E01               	movlw	high _m_aliens
  4224  001814  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4225  001816  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4226  001818  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4227  00181A  A4D8               	btfss	status,2,c
  4228  00181C  0E20               	movlw	32
  4229  00181E  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4230  001820  EC6E  F009         	call	_lcd_putMessage	;wreg free
  4231  001824                     
  4232                           ;main.c: 127: lcd_gotoXY(1,2);
  4233  001824  0E02               	movlw	2
  4234  001826  0100               	movlb	0	; force () banked
  4235  001828  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4236  00182A  0E01               	movlw	1
  4237  00182C  ECF7  F00A         	call	_lcd_gotoXY
  4238                           
  4239                           ;main.c: 128: lcd_putMessage(m_aliens[1]);
  4240  001830  0E55               	movlw	low (_m_aliens+21)
  4241  001832  0100               	movlb	0	; force () banked
  4242  001834  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4243  001836  0E01               	movlw	high (_m_aliens+21)
  4244  001838  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4245  00183A  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4246  00183C  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4247  00183E  A4D8               	btfss	status,2,c
  4248  001840  0E20               	movlw	32
  4249  001842  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4250  001844  EC6E  F009         	call	_lcd_putMessage	;wreg free
  4251  001848                     
  4252                           ;main.c: 129: lcd_gotoXY(1,3);
  4253  001848  0E03               	movlw	3
  4254  00184A  0100               	movlb	0	; force () banked
  4255  00184C  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4256  00184E  0E01               	movlw	1
  4257  001850  ECF7  F00A         	call	_lcd_gotoXY
  4258  001854                     
  4259                           ;main.c: 130: lcd_putMessage(m_aliens[2]);
  4260  001854  0E6A               	movlw	low (_m_aliens+42)
  4261  001856  0100               	movlb	0	; force () banked
  4262  001858  6F65               	movwf	lcd_putMessage@chaine& (0+255),b
  4263  00185A  0E01               	movlw	high (_m_aliens+42)
  4264  00185C  6F66               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4265  00185E  5165               	movf	lcd_putMessage@chaine& (0+255),w,b
  4266  001860  1166               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4267  001862  A4D8               	btfss	status,2,c
  4268  001864  0E20               	movlw	32
  4269  001866  6F67               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4270  001868  EC6E  F009         	call	_lcd_putMessage	;wreg free
  4271  00186C  0012               	return		;funcret
  4272  00186E                     __end_of_afficheAliens:
  4273                           	opt callstack 0
  4274                           
  4275 ;; *************** function _lcd_putMessage *****************
  4276 ;; Defined at:
  4277 ;;		line 387 in file "Lcd4Lignes.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  4280 ;;		 -> affichePerdu@buffer(50), m_aliens(84), main@bufferNiveau(50), niveau1(10), 
  4281 ;;		 -> accueil(15), 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  j               1   13[BANK0 ] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4293 ;;      Params:         0       3       0       0       0       0       0
  4294 ;;      Locals:         0       1       0       0       0       0       0
  4295 ;;      Temps:          0       5       0       0       0       0       0
  4296 ;;      Totals:         0       9       0       0       0       0       0
  4297 ;;Total ram usage:        9 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    5
  4300 ;; This function calls:
  4301 ;;		_lcd_ecritChar
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;;		_afficheAliens
  4305 ;;		_affichePerdu
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text24
  4310  0012DC                     __ptext24:
  4311                           	opt callstack 0
  4312  0012DC                     _lcd_putMessage:
  4313                           	opt callstack 25
  4314  0012DC                     
  4315                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4316  0012DC  0E00               	movlw	0
  4317  0012DE  0100               	movlb	0	; force () banked
  4318  0012E0  6F6D               	movwf	lcd_putMessage@j& (0+255),b
  4319  0012E2  EF9B  F009         	goto	l2093
  4320  0012E6                     l2089:
  4321                           
  4322                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4323  0012E6  0100               	movlb	0	; force () banked
  4324  0012E8  516D               	movf	lcd_putMessage@j& (0+255),w,b
  4325  0012EA  0100               	movlb	0	; force () banked
  4326  0012EC  6F68               	movwf	??_lcd_putMessage& (0+255),b
  4327  0012EE  6B69               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4328  0012F0  5168               	movf	??_lcd_putMessage& (0+255),w,b
  4329  0012F2  0100               	movlb	0	; force () banked
  4330  0012F4  2565               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4331  0012F6  0100               	movlb	0	; force () banked
  4332  0012F8  6F6A               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4333  0012FA  5169               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4334  0012FC  0100               	movlb	0	; force () banked
  4335  0012FE  2166               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4336  001300  0100               	movlb	0	; force () banked
  4337  001302  6F6B               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4338  001304  0E00               	movlw	0
  4339  001306  0100               	movlb	0	; force () banked
  4340  001308  2167               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4341  00130A  0100               	movlb	0	; force () banked
  4342  00130C  6F6C               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4343  00130E  C06A  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4344  001312  C06B  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4345  001316  C06C  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4346  00131A  BAF8               	btfsc	tblptru,5,c
  4347  00131C  D003               	bra	u867
  4348  00131E  0008               	tblrd		*
  4349  001320  50F5               	movf	tablat,w,c
  4350  001322  D005               	bra	u860
  4351  001324                     u867:
  4352  001324  CFF6 FFE9          	movff	tblptrl,fsr0l
  4353  001328  CFF7 FFEA          	movff	tblptrh,fsr0h
  4354  00132C  50EF               	movf	indf0,w,c
  4355  00132E                     u860:
  4356  00132E  ECBB  F00C         	call	_lcd_ecritChar
  4357  001332  0100               	movlb	0	; force () banked
  4358  001334  2B6D               	incf	lcd_putMessage@j& (0+255),f,b
  4359  001336                     l2093:
  4360                           
  4361                           ; BSR set to: 0
  4362  001336  0100               	movlb	0	; force () banked
  4363  001338  516D               	movf	lcd_putMessage@j& (0+255),w,b
  4364  00133A  0100               	movlb	0	; force () banked
  4365  00133C  6F68               	movwf	??_lcd_putMessage& (0+255),b
  4366  00133E  6B69               	clrf	(??_lcd_putMessage+1)& (0+255),b
  4367  001340  5168               	movf	??_lcd_putMessage& (0+255),w,b
  4368  001342  0100               	movlb	0	; force () banked
  4369  001344  2565               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4370  001346  0100               	movlb	0	; force () banked
  4371  001348  6F6A               	movwf	(??_lcd_putMessage+2)& (0+255),b
  4372  00134A  5169               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  4373  00134C  0100               	movlb	0	; force () banked
  4374  00134E  2166               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4375  001350  0100               	movlb	0	; force () banked
  4376  001352  6F6B               	movwf	(??_lcd_putMessage+3)& (0+255),b
  4377  001354  0E00               	movlw	0
  4378  001356  0100               	movlb	0	; force () banked
  4379  001358  2167               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  4380  00135A  0100               	movlb	0	; force () banked
  4381  00135C  6F6C               	movwf	(??_lcd_putMessage+4)& (0+255),b
  4382  00135E  C06A  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  4383  001362  C06B  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  4384  001366  C06C  FFF8         	movff	??_lcd_putMessage+4,tblptru
  4385  00136A  BAF8               	btfsc	tblptru,5,c
  4386  00136C  D003               	bra	u877
  4387  00136E  0008               	tblrd		*
  4388  001370  50F5               	movf	tablat,w,c
  4389  001372  D005               	bra	u870
  4390  001374                     u877:
  4391  001374  CFF6 FFE9          	movff	tblptrl,fsr0l
  4392  001378  CFF7 FFEA          	movff	tblptrh,fsr0h
  4393  00137C  50EF               	movf	indf0,w,c
  4394  00137E                     u870:
  4395  00137E  0900               	iorlw	0
  4396  001380  A4D8               	btfss	status,2,c
  4397  001382  EFC5  F009         	goto	u881
  4398  001386  EFC7  F009         	goto	u880
  4399  00138A                     u881:
  4400  00138A  EF73  F009         	goto	l2089
  4401  00138E                     u880:
  4402  00138E  0012               	return		;funcret
  4403  001390                     __end_of_lcd_putMessage:
  4404                           	opt callstack 0
  4405                           
  4406 ;; *************** function _lcd_ecritChar *****************
  4407 ;; Defined at:
  4408 ;;		line 359 in file "Lcd4Lignes.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  car             1    wreg     unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  car             1    3[BANK0 ] unsigned char 
  4413 ;;  posRam          1    4[BANK0 ] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4423 ;;      Params:         0       0       0       0       0       0       0
  4424 ;;      Locals:         0       2       0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0
  4426 ;;      Totals:         0       2       0       0       0       0       0
  4427 ;;Total ram usage:        2 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    4
  4430 ;; This function calls:
  4431 ;;		_lcd_wrCom
  4432 ;;		_lcd_wrData
  4433 ;; This function is called by:
  4434 ;;		_deplace
  4435 ;;		_feu
  4436 ;;		_lcd_putMessage
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text25
  4441  001976                     __ptext25:
  4442                           	opt callstack 0
  4443  001976                     _lcd_ecritChar:
  4444                           	opt callstack 25
  4445                           
  4446                           ;incstack = 0
  4447                           ;lcd_ecritChar@car stored from wreg
  4448  001976  0100               	movlb	0	; force () banked
  4449  001978  6F63               	movwf	lcd_ecritChar@car& (0+255),b
  4450  00197A                     
  4451                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4452  00197A  0100               	movlb	0	; force () banked
  4453  00197C  5163               	movf	lcd_ecritChar@car& (0+255),w,b
  4454  00197E  EC4F  F00D         	call	_lcd_wrData
  4455  001982  0100               	movlb	0	; force () banked
  4456  001984  6F64               	movwf	lcd_ecritChar@posRam& (0+255),b
  4457                           
  4458                           ;Lcd4Lignes.c: 364: switch(posRam)
  4459  001986  EFD4  F00C         	goto	l2017
  4460  00198A                     l2009:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4464  00198A  0EC0               	movlw	192
  4465  00198C  EC66  F00B         	call	_lcd_wrCom
  4466                           
  4467                           ;Lcd4Lignes.c: 368: break;
  4468  001990  EFE4  F00C         	goto	l283
  4469  001994                     l2011:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4473  001994  0E94               	movlw	148
  4474  001996  EC66  F00B         	call	_lcd_wrCom
  4475                           
  4476                           ;Lcd4Lignes.c: 371: break;
  4477  00199A  EFE4  F00C         	goto	l283
  4478  00199E                     l2013:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4482  00199E  0ED4               	movlw	212
  4483  0019A0  EC66  F00B         	call	_lcd_wrCom
  4484                           
  4485                           ;Lcd4Lignes.c: 374: break;
  4486  0019A4  EFE4  F00C         	goto	l283
  4487  0019A8                     l2017:
  4488                           
  4489                           ; BSR set to: 0
  4490  0019A8  0100               	movlb	0	; force () banked
  4491  0019AA  5164               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4492                           
  4493                           ; Switch size 1, requested type "simple"
  4494                           ; Number of cases is 3, Range of values is 148 to 212
  4495                           ; switch strategies available:
  4496                           ; Name         Instructions Cycles
  4497                           ; simple_byte           10     6 (average)
  4498                           ;	Chosen strategy is simple_byte
  4499  0019AC  0A94               	xorlw	148	; case 148
  4500  0019AE  B4D8               	btfsc	status,2,c
  4501  0019B0  EFC5  F00C         	goto	l2009
  4502  0019B4  0A54               	xorlw	84	; case 192
  4503  0019B6  B4D8               	btfsc	status,2,c
  4504  0019B8  EFCF  F00C         	goto	l2013
  4505  0019BC  0A14               	xorlw	20	; case 212
  4506  0019BE  B4D8               	btfsc	status,2,c
  4507  0019C0  EFCA  F00C         	goto	l2011
  4508  0019C4  EFE4  F00C         	goto	l283
  4509  0019C8                     l283:
  4510  0019C8  0012               	return		;funcret
  4511  0019CA                     __end_of_lcd_ecritChar:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function _lcd_wrData *****************
  4515 ;; Defined at:
  4516 ;;		line 188 in file "Lcd4Lignes.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  caractere       1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  caractere       1    2[BANK0 ] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      unsigned char 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4530 ;;      Params:         0       0       0       0       0       0       0
  4531 ;;      Locals:         0       1       0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0
  4533 ;;      Totals:         0       1       0       0       0       0       0
  4534 ;;Total ram usage:        1 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		_lcd_busy
  4539 ;;		_lcd_ecrireDonnees
  4540 ;;		_lcd_strobeEnableBit
  4541 ;; This function is called by:
  4542 ;;		_lcd_ecritChar
  4543 ;;		_lcd_initCGRam
  4544 ;;		_lcd_effaceChar
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text26
  4549  001A9E                     __ptext26:
  4550                           	opt callstack 0
  4551  001A9E                     _lcd_wrData:
  4552                           	opt callstack 25
  4553                           
  4554                           ;incstack = 0
  4555                           ;lcd_wrData@caractere stored from wreg
  4556  001A9E  0100               	movlb	0	; force () banked
  4557  001AA0  6F62               	movwf	lcd_wrData@caractere& (0+255),b
  4558  001AA2                     
  4559                           ;Lcd4Lignes.c: 190: lcd_busy();
  4560  001AA2  EC2E  F00D         	call	_lcd_busy	;wreg free
  4561  001AA6                     
  4562                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4563  001AA6  0E00               	movlw	0
  4564  001AA8  6E95               	movwf	149,c	;volatile
  4565  001AAA                     
  4566                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4567  001AAA  8080               	bsf	128,0,c	;volatile
  4568  001AAC                     
  4569                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4570  001AAC  9280               	bcf	128,1,c	;volatile
  4571  001AAE                     
  4572                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4573  001AAE  0100               	movlb	0	; force () banked
  4574  001AB0  3962               	swapf	lcd_wrData@caractere& (0+255),w,b
  4575  001AB2  0B0F               	andlw	15
  4576  001AB4  ECA7  F00D         	call	_lcd_ecrireDonnees
  4577  001AB8                     
  4578                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4579  001AB8  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4580  001ABC                     
  4581                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4582  001ABC  0100               	movlb	0	; force () banked
  4583  001ABE  5162               	movf	lcd_wrData@caractere& (0+255),w,b
  4584  001AC0  ECA7  F00D         	call	_lcd_ecrireDonnees
  4585  001AC4                     
  4586                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4587  001AC4  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4588  001AC8                     
  4589                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4590  001AC8  0E0F               	movlw	15
  4591  001ACA  6E95               	movwf	149,c	;volatile
  4592  001ACC                     
  4593                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4594                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4595  001ACC  EC2E  F00D         	call	_lcd_busy	;wreg free
  4596  001AD0  0012               	return		;funcret
  4597  001AD2                     __end_of_lcd_wrData:
  4598                           	opt callstack 0
  4599                           
  4600 ;; *************** function _lcd_gotoXY *****************
  4601 ;; Defined at:
  4602 ;;		line 314 in file "Lcd4Lignes.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  x               1    wreg     unsigned char 
  4605 ;;  y               1    3[BANK0 ] unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  x               1    4[BANK0 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4617 ;;      Params:         0       1       0       0       0       0       0
  4618 ;;      Locals:         0       1       0       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0
  4620 ;;      Totals:         0       2       0       0       0       0       0
  4621 ;;Total ram usage:        2 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    4
  4624 ;; This function calls:
  4625 ;;		_lcd_wrCom
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;;		_afficheAliens
  4629 ;;		_deplace
  4630 ;;		_feu
  4631 ;;		_lcd_effaceLigne
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text27
  4636  0015EE                     __ptext27:
  4637                           	opt callstack 0
  4638  0015EE                     _lcd_gotoXY:
  4639                           	opt callstack 26
  4640                           
  4641                           ;incstack = 0
  4642                           ;lcd_gotoXY@x stored from wreg
  4643  0015EE  0100               	movlb	0	; force () banked
  4644  0015F0  6F64               	movwf	lcd_gotoXY@x& (0+255),b
  4645  0015F2                     
  4646                           ;Lcd4Lignes.c: 316: switch(y)
  4647  0015F2  EF1B  F00B         	goto	l2085
  4648  0015F6                     l2075:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4652  0015F6  0100               	movlb	0	; force () banked
  4653  0015F8  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4654  0015FA  0F7F               	addlw	127
  4655  0015FC  0980               	iorlw	128
  4656  0015FE  EC66  F00B         	call	_lcd_wrCom
  4657                           
  4658                           ;Lcd4Lignes.c: 320: break;
  4659  001602  EF2F  F00B         	goto	l272
  4660  001606                     l2077:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4664  001606  0100               	movlb	0	; force () banked
  4665  001608  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4666  00160A  0FBF               	addlw	191
  4667  00160C  0980               	iorlw	128
  4668  00160E  EC66  F00B         	call	_lcd_wrCom
  4669                           
  4670                           ;Lcd4Lignes.c: 323: break;
  4671  001612  EF2F  F00B         	goto	l272
  4672  001616                     l2079:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4676  001616  0100               	movlb	0	; force () banked
  4677  001618  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4678  00161A  0F93               	addlw	147
  4679  00161C  0980               	iorlw	128
  4680  00161E  EC66  F00B         	call	_lcd_wrCom
  4681                           
  4682                           ;Lcd4Lignes.c: 326: break;
  4683  001622  EF2F  F00B         	goto	l272
  4684  001626                     l2081:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4688  001626  0100               	movlb	0	; force () banked
  4689  001628  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4690  00162A  0FD3               	addlw	211
  4691  00162C  0980               	iorlw	128
  4692  00162E  EC66  F00B         	call	_lcd_wrCom
  4693                           
  4694                           ;Lcd4Lignes.c: 329: break;
  4695  001632  EF2F  F00B         	goto	l272
  4696  001636                     l2085:
  4697  001636  0100               	movlb	0	; force () banked
  4698  001638  5163               	movf	lcd_gotoXY@y& (0+255),w,b
  4699                           
  4700                           ; Switch size 1, requested type "simple"
  4701                           ; Number of cases is 4, Range of values is 1 to 4
  4702                           ; switch strategies available:
  4703                           ; Name         Instructions Cycles
  4704                           ; simple_byte           13     7 (average)
  4705                           ;	Chosen strategy is simple_byte
  4706  00163A  0A01               	xorlw	1	; case 1
  4707  00163C  B4D8               	btfsc	status,2,c
  4708  00163E  EFFB  F00A         	goto	l2075
  4709  001642  0A03               	xorlw	3	; case 2
  4710  001644  B4D8               	btfsc	status,2,c
  4711  001646  EF03  F00B         	goto	l2077
  4712  00164A  0A01               	xorlw	1	; case 3
  4713  00164C  B4D8               	btfsc	status,2,c
  4714  00164E  EF0B  F00B         	goto	l2079
  4715  001652  0A07               	xorlw	7	; case 4
  4716  001654  B4D8               	btfsc	status,2,c
  4717  001656  EF13  F00B         	goto	l2081
  4718  00165A  EF2F  F00B         	goto	l272
  4719  00165E                     l272:
  4720  00165E  0012               	return		;funcret
  4721  001660                     __end_of_lcd_gotoXY:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _lcd_effaceAffichage *****************
  4725 ;; Defined at:
  4726 ;;		line 276 in file "Lcd4Lignes.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4740 ;;      Params:         0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    4
  4747 ;; This function calls:
  4748 ;;		_lcd_wrCom
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;;		_afficheAliens
  4752 ;;		_affichePerdu
  4753 ;;		_videAliens
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text28
  4758  001B7A                     __ptext28:
  4759                           	opt callstack 0
  4760  001B7A                     _lcd_effaceAffichage:
  4761                           	opt callstack 25
  4762  001B7A                     
  4763                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4764  001B7A  0E01               	movlw	1
  4765  001B7C  EC66  F00B         	call	_lcd_wrCom
  4766                           
  4767                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4768  001B80  0E80               	movlw	128
  4769  001B82  EC66  F00B         	call	_lcd_wrCom
  4770  001B86  0012               	return		;funcret
  4771  001B88                     __end_of_lcd_effaceAffichage:
  4772                           	opt callstack 0
  4773                           
  4774 ;; *************** function _lcd_wrCom *****************
  4775 ;; Defined at:
  4776 ;;		line 156 in file "Lcd4Lignes.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  commande        1    wreg     unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  commande        1    2[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      unsigned char 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4790 ;;      Params:         0       0       0       0       0       0       0
  4791 ;;      Locals:         0       1       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0
  4793 ;;      Totals:         0       1       0       0       0       0       0
  4794 ;;Total ram usage:        1 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    3
  4797 ;; This function calls:
  4798 ;;		_lcd_busy
  4799 ;;		_lcd_ecrireDonnees
  4800 ;;		_lcd_strobeEnableBit
  4801 ;; This function is called by:
  4802 ;;		_lcd_init
  4803 ;;		_lcd_effaceAffichage
  4804 ;;		_lcd_curseurHome
  4805 ;;		_lcd_gotoXY
  4806 ;;		_lcd_ecritChar
  4807 ;;		_lcd_cacheCurseur
  4808 ;;		_lcd_initCGRam
  4809 ;;		_lcd_montreCurseur
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text29
  4814  0016CC                     __ptext29:
  4815                           	opt callstack 0
  4816  0016CC                     _lcd_wrCom:
  4817                           	opt callstack 25
  4818                           
  4819                           ;incstack = 0
  4820                           ;lcd_wrCom@commande stored from wreg
  4821  0016CC  0100               	movlb	0	; force () banked
  4822  0016CE  6F62               	movwf	lcd_wrCom@commande& (0+255),b
  4823  0016D0                     
  4824                           ;Lcd4Lignes.c: 158: lcd_busy();
  4825  0016D0  EC2E  F00D         	call	_lcd_busy	;wreg free
  4826  0016D4                     
  4827                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4828  0016D4  0E00               	movlw	0
  4829  0016D6  6E95               	movwf	149,c	;volatile
  4830  0016D8                     
  4831                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4832  0016D8  9080               	bcf	128,0,c	;volatile
  4833  0016DA                     
  4834                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4835  0016DA  9280               	bcf	128,1,c	;volatile
  4836  0016DC                     
  4837                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4838  0016DC  0100               	movlb	0	; force () banked
  4839  0016DE  3962               	swapf	lcd_wrCom@commande& (0+255),w,b
  4840  0016E0  0B0F               	andlw	15
  4841  0016E2  ECA7  F00D         	call	_lcd_ecrireDonnees
  4842  0016E6                     
  4843                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4844  0016E6  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4845  0016EA                     
  4846                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4847  0016EA  0100               	movlb	0	; force () banked
  4848  0016EC  5162               	movf	lcd_wrCom@commande& (0+255),w,b
  4849  0016EE  ECA7  F00D         	call	_lcd_ecrireDonnees
  4850  0016F2                     
  4851                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4852  0016F2  ECCC  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4853  0016F6                     
  4854                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4855  0016F6  0E03               	movlw	3
  4856  0016F8                     u1527:
  4857  0016F8  2EE8               	decfsz	wreg,f,c
  4858  0016FA  D7FE               	bra	u1527
  4859  0016FC  F000               	nop	
  4860  0016FE                     
  4861                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4862  0016FE  0100               	movlb	0	; force () banked
  4863  001700  0562               	decf	lcd_wrCom@commande& (0+255),w,b
  4864  001702  B4D8               	btfsc	status,2,c
  4865  001704  EF86  F00B         	goto	u761
  4866  001708  EF88  F00B         	goto	u760
  4867  00170C                     u761:
  4868  00170C  EF92  F00B         	goto	l1969
  4869  001710                     u760:
  4870  001710                     
  4871                           ; BSR set to: 0
  4872  001710  0E02               	movlw	2
  4873  001712  0100               	movlb	0	; force () banked
  4874  001714  1962               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4875  001716  A4D8               	btfss	status,2,c
  4876  001718  EF90  F00B         	goto	u771
  4877  00171C  EF92  F00B         	goto	u770
  4878  001720                     u771:
  4879  001720  EF97  F00B         	goto	l1971
  4880  001724                     u770:
  4881  001724                     l1969:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4885  001724  0EA6               	movlw	166
  4886  001726                     u1537:
  4887  001726  2EE8               	decfsz	wreg,f,c
  4888  001728  D7FE               	bra	u1537
  4889  00172A  F000 F000          	nop2	
  4890  00172E                     l1971:
  4891                           
  4892                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4893  00172E  0E0F               	movlw	15
  4894  001730  6E95               	movwf	149,c	;volatile
  4895  001732                     
  4896                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4897  001732  EC2E  F00D         	call	_lcd_busy	;wreg free
  4898  001736  0012               	return		;funcret
  4899  001738                     __end_of_lcd_wrCom:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function _lcd_strobeEnableBit *****************
  4903 ;; Defined at:
  4904 ;;		line 431 in file "Lcd4Lignes.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		None
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4918 ;;      Params:         0       0       0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_lcd_wrCom
  4929 ;;		_lcd_wrData
  4930 ;;		_lcd_resetSequence
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text30
  4935  001B98                     __ptext30:
  4936                           	opt callstack 0
  4937  001B98                     _lcd_strobeEnableBit:
  4938                           	opt callstack 26
  4939  001B98                     
  4940                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4941  001B98  8480               	bsf	128,2,c	;volatile
  4942                           
  4943                           ;Lcd4Lignes.c: 434: __nop();
  4944  001B9A  F000               	nop	
  4945                           
  4946                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4947  001B9C  9480               	bcf	128,2,c	;volatile
  4948  001B9E  0012               	return		;funcret
  4949  001BA0                     __end_of_lcd_strobeEnableBit:
  4950                           	opt callstack 0
  4951                           
  4952 ;; *************** function _lcd_ecrireDonnees *****************
  4953 ;; Defined at:
  4954 ;;		line 107 in file "Lcd4Lignes.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  donnee          1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  donnee          1    1[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4968 ;;      Params:         0       0       0       0       0       0       0
  4969 ;;      Locals:         0       1       0       0       0       0       0
  4970 ;;      Temps:          0       1       0       0       0       0       0
  4971 ;;      Totals:         0       2       0       0       0       0       0
  4972 ;;Total ram usage:        2 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_lcd_wrCom
  4979 ;;		_lcd_wrData
  4980 ;;		_lcd_resetSequence
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text31
  4985  001B4E                     __ptext31:
  4986                           	opt callstack 0
  4987  001B4E                     _lcd_ecrireDonnees:
  4988                           	opt callstack 26
  4989                           
  4990                           ;incstack = 0
  4991                           ;lcd_ecrireDonnees@donnee stored from wreg
  4992  001B4E  0100               	movlb	0	; force () banked
  4993  001B50  6F61               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4994  001B52                     
  4995                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4996  001B52  CF83 F060          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4997  001B56  0EF0               	movlw	240
  4998  001B58  0100               	movlb	0	; force () banked
  4999  001B5A  1760               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5000  001B5C  0100               	movlb	0	; force () banked
  5001  001B5E  5161               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5002  001B60  0B0F               	andlw	15
  5003  001B62  0100               	movlb	0	; force () banked
  5004  001B64  1160               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5005  001B66  6E83               	movwf	131,c	;volatile
  5006  001B68                     
  5007                           ; BSR set to: 0
  5008  001B68  0012               	return		;funcret
  5009  001B6A                     __end_of_lcd_ecrireDonnees:
  5010                           	opt callstack 0
  5011                           
  5012 ;; *************** function _lcd_busy *****************
  5013 ;; Defined at:
  5014 ;;		line 124 in file "Lcd4Lignes.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  adresse         1    1[BANK0 ] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      unsigned char 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5028 ;;      Params:         0       0       0       0       0       0       0
  5029 ;;      Locals:         0       1       0       0       0       0       0
  5030 ;;      Temps:          0       1       0       0       0       0       0
  5031 ;;      Totals:         0       2       0       0       0       0       0
  5032 ;;Total ram usage:        2 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    2
  5035 ;; This function calls:
  5036 ;;		_lcd_lireDonnees
  5037 ;; This function is called by:
  5038 ;;		_lcd_wrCom
  5039 ;;		_lcd_wrData
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text32
  5044  001A5C                     __ptext32:
  5045                           	opt callstack 0
  5046  001A5C                     _lcd_busy:
  5047                           	opt callstack 25
  5048  001A5C                     
  5049                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  5050  001A5C  9080               	bcf	128,0,c	;volatile
  5051                           
  5052                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  5053  001A5E  8280               	bsf	128,1,c	;volatile
  5054  001A60                     l234:
  5055                           
  5056                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  5057  001A60  8480               	bsf	128,2,c	;volatile
  5058                           
  5059                           ;Lcd4Lignes.c: 134: __nop();
  5060  001A62  F000               	nop	
  5061  001A64                     
  5062                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  5063  001A64  ECD3  F00D         	call	_lcd_lireDonnees	;wreg free
  5064  001A68  0100               	movlb	0	; force () banked
  5065  001A6A  6F60               	movwf	??_lcd_busy& (0+255),b
  5066  001A6C  3960               	swapf	??_lcd_busy& (0+255),w,b
  5067  001A6E  0BF0               	andlw	240
  5068  001A70  0100               	movlb	0	; force () banked
  5069  001A72  6F61               	movwf	lcd_busy@adresse& (0+255),b
  5070  001A74                     
  5071                           ; BSR set to: 0
  5072                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  5073  001A74  9480               	bcf	128,2,c	;volatile
  5074  001A76                     
  5075                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  5076  001A76  8480               	bsf	128,2,c	;volatile
  5077  001A78                     
  5078                           ;Lcd4Lignes.c: 139: __nop();
  5079  001A78  F000               	nop	
  5080                           
  5081                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  5082  001A7A  ECD3  F00D         	call	_lcd_lireDonnees	;wreg free
  5083  001A7E  0100               	movlb	0	; force () banked
  5084  001A80  1361               	iorwf	lcd_busy@adresse& (0+255),f,b
  5085  001A82                     
  5086                           ; BSR set to: 0
  5087                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  5088  001A82  9480               	bcf	128,2,c	;volatile
  5089  001A84                     
  5090                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  5091  001A84  0100               	movlb	0	; force () banked
  5092  001A86  BF61               	btfsc	lcd_busy@adresse& (0+255),7,b
  5093  001A88  EF48  F00D         	goto	u751
  5094  001A8C  EF4A  F00D         	goto	u750
  5095  001A90                     u751:
  5096  001A90  EF30  F00D         	goto	l234
  5097  001A94                     u750:
  5098  001A94                     
  5099                           ; BSR set to: 0
  5100                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  5101  001A94  9280               	bcf	128,1,c	;volatile
  5102  001A96                     
  5103                           ; BSR set to: 0
  5104                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  5105  001A96  0100               	movlb	0	; force () banked
  5106  001A98  5161               	movf	lcd_busy@adresse& (0+255),w,b
  5107  001A9A  0B7F               	andlw	127
  5108  001A9C                     
  5109                           ; BSR set to: 0
  5110  001A9C  0012               	return		;funcret
  5111  001A9E                     __end_of_lcd_busy:
  5112                           	opt callstack 0
  5113                           
  5114 ;; *************** function _lcd_lireDonnees *****************
  5115 ;; Defined at:
  5116 ;;		line 93 in file "Lcd4Lignes.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      unsigned char 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5130 ;;      Params:         0       0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    1
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_lcd_busy
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text33
  5145  001BA6                     __ptext33:
  5146                           	opt callstack 0
  5147  001BA6                     _lcd_lireDonnees:
  5148                           	opt callstack 25
  5149  001BA6                     
  5150                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  5151  001BA6  5083               	movf	131,w,c	;volatile
  5152  001BA8  0B0F               	andlw	15
  5153  001BAA  0012               	return		;funcret
  5154  001BAC                     __end_of_lcd_lireDonnees:
  5155                           	opt callstack 0
  5156                           
  5157 ;; *************** function ___awdiv *****************
  5158 ;; Defined at:
  5159 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  dividend        2    0[BANK0 ] int 
  5162 ;;  divisor         2    2[BANK0 ] int 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  quotient        2    6[BANK0 ] int 
  5165 ;;  sign            1    5[BANK0 ] unsigned char 
  5166 ;;  counter         1    4[BANK0 ] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2    0[BANK0 ] int 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5176 ;;      Params:         0       4       0       0       0       0       0
  5177 ;;      Locals:         0       4       0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0
  5179 ;;      Totals:         0       8       0       0       0       0       0
  5180 ;;Total ram usage:        8 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    1
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text34
  5191  001216                     __ptext34:
  5192                           	opt callstack 0
  5193  001216                     ___awdiv:
  5194                           	opt callstack 29
  5195  001216  0E00               	movlw	0
  5196  001218  0100               	movlb	0	; () banked
  5197  00121A  6F65               	movwf	___awdiv@sign& (0+255),b
  5198  00121C                     
  5199                           ; BSR set to: 0
  5200  00121C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5201  00121E  EF15  F009         	goto	u1330
  5202  001222  EF13  F009         	goto	u1331
  5203  001226                     u1331:
  5204  001226  EF1B  F009         	goto	l2529
  5205  00122A                     u1330:
  5206  00122A                     
  5207                           ; BSR set to: 0
  5208  00122A  6D62               	negf	___awdiv@divisor& (0+255),b
  5209  00122C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5210  00122E  B0D8               	btfsc	status,0,c
  5211  001230  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5212  001232                     
  5213                           ; BSR set to: 0
  5214  001232  0E01               	movlw	1
  5215  001234  6F65               	movwf	___awdiv@sign& (0+255),b
  5216  001236                     l2529:
  5217                           
  5218                           ; BSR set to: 0
  5219  001236  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5220  001238  EF22  F009         	goto	u1340
  5221  00123C  EF20  F009         	goto	u1341
  5222  001240                     u1341:
  5223  001240  EF28  F009         	goto	l2535
  5224  001244                     u1340:
  5225  001244                     
  5226                           ; BSR set to: 0
  5227  001244  6D60               	negf	___awdiv@dividend& (0+255),b
  5228  001246  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5229  001248  B0D8               	btfsc	status,0,c
  5230  00124A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5231  00124C                     
  5232                           ; BSR set to: 0
  5233  00124C  0E01               	movlw	1
  5234  00124E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  5235  001250                     l2535:
  5236                           
  5237                           ; BSR set to: 0
  5238  001250  0E00               	movlw	0
  5239  001252  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  5240  001254  0E00               	movlw	0
  5241  001256  6F66               	movwf	___awdiv@quotient& (0+255),b
  5242  001258                     
  5243                           ; BSR set to: 0
  5244  001258  5162               	movf	___awdiv@divisor& (0+255),w,b
  5245  00125A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5246  00125C  B4D8               	btfsc	status,2,c
  5247  00125E  EF33  F009         	goto	u1351
  5248  001262  EF35  F009         	goto	u1350
  5249  001266                     u1351:
  5250  001266  EF5D  F009         	goto	l2557
  5251  00126A                     u1350:
  5252  00126A                     
  5253                           ; BSR set to: 0
  5254  00126A  0E01               	movlw	1
  5255  00126C  6F64               	movwf	___awdiv@counter& (0+255),b
  5256  00126E  EF3D  F009         	goto	l2543
  5257  001272                     l2541:
  5258                           
  5259                           ; BSR set to: 0
  5260  001272  90D8               	bcf	status,0,c
  5261  001274  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  5262  001276  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5263  001278  2B64               	incf	___awdiv@counter& (0+255),f,b
  5264  00127A                     l2543:
  5265                           
  5266                           ; BSR set to: 0
  5267  00127A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5268  00127C  EF42  F009         	goto	u1361
  5269  001280  EF44  F009         	goto	u1360
  5270  001284                     u1361:
  5271  001284  EF39  F009         	goto	l2541
  5272  001288                     u1360:
  5273  001288                     l2545:
  5274                           
  5275                           ; BSR set to: 0
  5276  001288  90D8               	bcf	status,0,c
  5277  00128A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  5278  00128C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5279  00128E                     
  5280                           ; BSR set to: 0
  5281  00128E  5162               	movf	___awdiv@divisor& (0+255),w,b
  5282  001290  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  5283  001292  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5284  001294  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5285  001296  A0D8               	btfss	status,0,c
  5286  001298  EF50  F009         	goto	u1371
  5287  00129C  EF52  F009         	goto	u1370
  5288  0012A0                     u1371:
  5289  0012A0  EF57  F009         	goto	l2553
  5290  0012A4                     u1370:
  5291  0012A4                     
  5292                           ; BSR set to: 0
  5293  0012A4  5162               	movf	___awdiv@divisor& (0+255),w,b
  5294  0012A6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  5295  0012A8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5296  0012AA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5297  0012AC                     
  5298                           ; BSR set to: 0
  5299  0012AC  8166               	bsf	___awdiv@quotient& (0+255),0,b
  5300  0012AE                     l2553:
  5301                           
  5302                           ; BSR set to: 0
  5303  0012AE  90D8               	bcf	status,0,c
  5304  0012B0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5305  0012B2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  5306  0012B4                     
  5307                           ; BSR set to: 0
  5308  0012B4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  5309  0012B6  EF44  F009         	goto	l2545
  5310  0012BA                     l2557:
  5311                           
  5312                           ; BSR set to: 0
  5313  0012BA  5165               	movf	___awdiv@sign& (0+255),w,b
  5314  0012BC  B4D8               	btfsc	status,2,c
  5315  0012BE  EF63  F009         	goto	u1381
  5316  0012C2  EF65  F009         	goto	u1380
  5317  0012C6                     u1381:
  5318  0012C6  EF69  F009         	goto	l2561
  5319  0012CA                     u1380:
  5320  0012CA                     
  5321                           ; BSR set to: 0
  5322  0012CA  6D66               	negf	___awdiv@quotient& (0+255),b
  5323  0012CC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5324  0012CE  B0D8               	btfsc	status,0,c
  5325  0012D0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5326  0012D2                     l2561:
  5327                           
  5328                           ; BSR set to: 0
  5329  0012D2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  5330  0012D6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  5331  0012DA                     
  5332                           ; BSR set to: 0
  5333  0012DA  0012               	return		;funcret
  5334  0012DC                     __end_of___awdiv:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _high_isr *****************
  5338 ;; Defined at:
  5339 ;;		line 361 in file "main.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		Interrupt level 2
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	intcode
  5367  000008                     __pintcode:
  5368                           	opt callstack 0
  5369  000008                     _high_isr:
  5370                           	opt callstack 24
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;incstack = 0
  5374  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5375  00000A                     
  5376                           ;main.c: 363: if (INTCONbits.TMR0IF)
  5377  00000A  A4F2               	btfss	242,2,c	;volatile
  5378  00000C  EF0A  F000         	goto	i2u69_41
  5379  000010  EF0C  F000         	goto	i2u69_40
  5380  000014                     i2u69_41:
  5381  000014  EF14  F000         	goto	i2l162
  5382  000018                     i2u69_40:
  5383  000018                     
  5384                           ;main.c: 364: {;main.c: 365: INTCONbits.TMR0IF = 0;
  5385  000018  94F2               	bcf	242,2,c	;volatile
  5386  00001A                     
  5387                           ;main.c: 367: TMR0 = 0x0BDC;
  5388  00001A  0E0B               	movlw	11
  5389  00001C  6ED7               	movwf	215,c	;volatile
  5390  00001E  0EDC               	movlw	220
  5391  000020  6ED6               	movwf	214,c	;volatile
  5392                           
  5393                           ;main.c: 368: m_tempsDAfficher = 1;
  5394  000022  0E01               	movlw	1
  5395  000024  0100               	movlb	0	; force () banked
  5396  000026  6FF0               	movwf	_m_tempsDAfficher& (0+255),b
  5397  000028                     i2l162:
  5398  000028  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5399  00002A  0011               	retfie		f
  5400  00002C                     __end_of_high_isr:
  5401                           	opt callstack 0
  5402                           
  5403                           	psect	param0
  5404  0000                     
  5405                           	psect	temp
  5406  000001                     btemp:
  5407                           	opt callstack 0
  5408  000001                     	ds	1
  5409  0000                     int$flags	set	btemp
  5410  0000                     wtemp8	set	btemp+1
  5411  0000                     ttemp5	set	btemp+1
  5412  0000                     ttemp6	set	btemp+4
  5413  0000                     ttemp7	set	btemp+8
  5414                           tosu	equ	0xFFF
  5415                           tosh	equ	0xFFE
  5416                           tosl	equ	0xFFD
  5417                           stkptr	equ	0xFFC
  5418                           pclatu	equ	0xFFB
  5419                           pclath	equ	0xFFA
  5420                           pcl	equ	0xFF9
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           indf0	equ	0xFEF
  5428                           postinc0	equ	0xFEE
  5429                           postdec0	equ	0xFED
  5430                           preinc0	equ	0xFEC
  5431                           plusw0	equ	0xFEB
  5432                           fsr0h	equ	0xFEA
  5433                           fsr0l	equ	0xFE9
  5434                           wreg	equ	0xFE8
  5435                           indf1	equ	0xFE7
  5436                           postinc1	equ	0xFE6
  5437                           postdec1	equ	0xFE5
  5438                           preinc1	equ	0xFE4
  5439                           plusw1	equ	0xFE3
  5440                           fsr1h	equ	0xFE2
  5441                           fsr1l	equ	0xFE1
  5442                           bsr	equ	0xFE0
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           preinc2	equ	0xFDC
  5447                           plusw2	equ	0xFDB
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    51
    Data        154
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160    138     145
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[19]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> affichePerdu@buffer(BANK0[50]), main@bufferNiveau(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> affichePerdu@buffer(BANK0[50]), m_aliens(BANK1[84]), main@bufferNiveau(BANK0[50]), niveau1(CODE[10]), 
		 -> accueil(CODE[15]), 

    feu@pts	PTR int  size(2) Largest target is 2
		 -> main@pts(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK1[84]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_affichePerdu
    _videAliens->___wmul
    _nouveauxAliens->___awmod
    _rand->___lmul
    ___awmod->_rand
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _feu->___wmul
    _deplace->_lcd_ecritChar
    _deplace->_lcd_gotoXY
    _affichePerdu->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_cacheCurseur->_lcd_wrCom
    _afficheAliens->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   20530
                                             80 BANK0     58    58      0
                            ___awdiv
                            ___awmod
                      _afficheAliens
                       _affichePerdu
                            _deplace
                                _feu
                     _initialisation
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                     _nouveauxAliens
                              _perdu
                            _sprintf
                         _videAliens
 ---------------------------------------------------------------------------------
 (1) _videAliens                                           6     6      0    1517
                                              6 BANK0      6     6      0
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (1) _perdu                                                3     3      0     113
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                       7     7      0    1702
                                             20 BANK0      7     7      0
                            ___awmod
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     547
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _feu                                                 10     8      2    3658
                                              6 BANK0     10     8      2
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _deplace                                              3     1      2    2052
                                              5 BANK0      3     1      2
                          _getAnalog
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _affichePerdu                                        54    52      2    2805
                                             26 BANK0     54    52      2
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                     _lcd_putMessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1406
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _afficheAliens                                        0     0      0    2497
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     935
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1406
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
     _rand (ARG)
       ___lmul
   _afficheAliens
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _affichePerdu
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _deplace
     _getAnalog
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _feu
     ___wmul
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _nouveauxAliens
     ___awmod
       ___awdiv (ARG)
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _strcpy
   _perdu
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _videAliens
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     8A      91       4       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125      14        0.0%
DATA                 0      0     125      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 19 19:32:20 2019

                          l98 186C                  ___awdiv@sign 0065           ___wmul@multiplicand 0062  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l110 0F46  
                         l121 0666                           l140 18CA                           l117 1148  
                         l150 1AEC                           l302 14E2                           l231 1B68  
                         l127 09E4                           l135 1214                           l305 1B9E  
                         l153 1AFC                           l234 1A60                           l242 1736  
                         l235 1A94                           l251 1B24                           l147 1048  
                         l228 1BAA                           l236 1A9C                           l156 1974  
                         l245 1AD0                           l333 0DF6                           l254 1B86  
                         l272 165E                           l336 1B4C                           l248 17A0  
                         l257 1B8E                           l283 19C8                           l347 16BA  
                         l292 1B96                           l348 16CA                           l289 138E  
                         l580 1440                           l822 15EC                           l567 12DA  
                         l815 15E4                           l832 1806                           l825 17FE  
                __CFG_CPB$OFF 000000                           u240 1AFA                           u241 1AF6  
                __CFG_CPD$OFF 000000                           u800 1594                           u801 1590  
                         u810 15B2                           u811 15AE                           u820 15CE  
                         u900 0C92                           u821 15CA                           u901 0C8E  
                         u750 1A94                           u830 17B6                           u910 0CBC  
                         u751 1A90                           u831 17B2                           u911 0CB8  
                         u760 1710                           u840 17D4                           u920 0CF4  
                         u761 170C                           u841 17D0                           u921 0CF0  
                         u770 1724                           u850 17EA                           u930 0D10  
                         u771 1720                           u851 17E6                           u931 0D0C  
                         u860 132E                           u940 0D28                           u780 1680  
                         u941 0D24                           u781 167C                           u870 137E  
                         u950 0DB8                           u790 16BA                           u951 0DB4  
                         u791 16B6                           u880 138E                           u960 0DE0  
                         u881 138A                           u961 0DDC                           u890 0C16  
                         u970 1A52                           u867 1324                           u891 0C12  
                         u971 1A4E                           u980 1460                           u877 1374  
                         u981 145C                           u990 147C                           u991 1478  
                         _feu 0654                  __CFG_BORV$18 000000                  ___awmod@sign 0073  
                 lcd_gotoXY@x 0064                           wreg 000FE8                   lcd_gotoXY@y 0063  
__size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000                   main@dizaine 00E4  
                        l1000 1B78                          l1003 1920                          l2001 1AC8  
                        l1009 1A5A                          l2003 1ACC                          l2011 1994  
                        l2013 199E                          l2101 0C22                          l2021 1660  
                        l2007 197A                          l2031 1578                          l2111 0C78  
                        l2103 0C2C                          l2023 1672                          l2009 198A  
                        l2017 19A8                          l2041 15B2                          l2033 1582  
                        l2121 0CA8                          l2113 0C82                          l1401 1AEA  
                        l2201 1782                          l2025 1680                          l2051 15DE  
                        l2043 15B8                          l2035 1594                          l2131 0CFC  
                        l2115 0C92                          l2107 0C32                          l1403 1AFA  
                        l2019 1B88                          l2211 1442                          l2203 178A  
                        l2027 1690                          l2045 15CE                          l2037 159C  
                        l2061 17D4                          l2053 17A2                          l2141 0D42  
                        l2133 0D10                          l2125 0CC0                          l2117 0C98  
                        l2109 0C68                          l2301 1956                          l2221 146A  
                        l2213 1448                          l2205 1790                          l2029 169A  
                        l2071 1B90                          l2047 15D6                          l2039 15A4  
                        l2063 17EA                          l2055 17B6                          l2143 0D92  
                        l2135 0D28                          l2119 0CA2                          l2151 0DE0  
                        l2311 196C                          l2303 1958                          l2231 14C8  
                        l2215 144E                          l2207 1794                          l2081 1626  
                        l2073 15F2                          l2049 15D8                          l2065 17F2  
                        l2057 17BE                          l2153 0DEC                          l2145 0D9E  
                        l2137 0D34                          l2129 0CF8                          l2401 18AE  
                        l2313 196E                          l2305 195A                          l2233 14CC  
                        l2225 1480                          l2209 179C                          l2321 1B20  
                        l2161 1A2E                          l2075 15F6                          l2091 1332  
                        l2067 17F8                          l2059 17C6                          l2147 0DA4  
                        l2139 0D3A                          l2315 1970                          l2307 195C  
                        l2227 14B2                          l2235 14DE                          l2219 1464  
                        l2251 13B0                          l2243 1390                          l2171 1914  
                        l2163 1A52                          l2331 0E64                          l2323 0DF8  
                        l2403 0F48                          l2069 1B7A                          l2077 1606  
                        l2085 1636                          l2093 1336                          l2149 0DB8  
                        l2237 1B26                          l2501 097E                          l2317 1972  
                        l2309 1964                          l2229 14B6                          l2181 1750  
                        l2261 13E8                          l2253 13BE                          l2245 1396  
                        l2157 1A18                          l2341 0EE0                          l2333 0E76  
                        l2325 0E18                          l2421 1000                          l2413 0F8C  
                        l2405 0F5C                          l2079 1616                          l2087 12DC  
                        l2095 0BF4                          l2431 1064                          l2239 1B44  
                        l2511 09C8                          l2503 0984                          l2175 1B6A  
                        l2191 1766                          l2183 1752                          l2319 1AFE  
                        l2263 13F6                          l2271 1420                          l2255 13C6  
                        l2247 13A4                          l2167 18CC                          l2159 1A24  
                        l2343 0EEE                          l2351 0F1E                          l2335 0E7C  
                        l2327 0E30                          l2423 1006                          l2415 0F96  
                        l2407 0F60                          l2521 1216                          l2089 12E6  
                        l2361 1854                          l2353 1808                          l2097 0C02  
                        l2433 1078                          l2441 10BC                          l2505 0992  
                        l2281 192A                          l2193 176C                          l2185 1754  
                        l2177 1738                          l2273 1430                          l2265 140C  
                        l2257 13D8                          l2249 13AC                          l2169 1902  
                        l2345 0F00                          l2337 0E9E                          l2329 0E48  
                        l2425 1024                          l2409 0F6A                          l2601 0AB4  
                        l2531 1244                          l2523 121C                          l2355 180C  
                        l2099 0C16                          l2451 1122                          l2443 10D6  
                        l2435 107E                          l2291 1946                          l2283 1934  
                        l2195 1770                          l2187 175A                          l2179 173C  
                        l2275 1438                          l2267 1414                          l2259 13E0  
                        l2347 0F06                          l2339 0EC0                          l2371 119C  
                        l2363 114A                          l2427 102A                          l2419 0FB8  
                        l2603 0ABE                          l2611 0B06                          l2541 1272  
                        l2533 124C                          l2525 122A                          l2357 1824  
                        l1397 1AD6                          l2445 10EA                          l2453 112E  
                        l2437 1098                          l2429 104A                          l2509 09C0  
                        l2461 0674                          l2293 194A                          l2285 1936  
                        l2197 1778                          l2189 175E                          l2269 141A  
                        l2349 0F18                          l2381 11C8                          l2365 115C  
                        l2621 0B82                          l2613 0B14                          l2605 0AD6  
                        l2551 12AC                          l2543 127A                          l2535 1250  
                        l2527 1232                          l2359 1848                          l1399 1AEA  
                        l2455 1142                          l2447 10F0                          l2439 10B0  
                        l2471 075A                          l2463 067E                          l2295 194C  
                        l2287 1942                          l2279 1922                          l2199 177E  
                        l2383 11E8                          l2375 11A2                          l2391 1212  
                        l2623 0BA2                          l2615 0B26                          l2607 0AF2  
                        ?_feu 0066                          l2561 12D2                          l2553 12AE  
                        l2545 1288                          l2537 1258                          l2529 1236  
                        l1913 1BA6                          l1921 1A64                          l2449 110A  
                        l2473 0766                          l2481 07A8                          l2457 0658  
                        l2297 1950                          l2289 1944                          l2377 11C2  
                        l2369 117E                          l2625 0BBA                          l2617 0B72  
                        l2609 0B00                          l2555 12B4                          l2547 128E  
                        l2539 126A                          l1931 1A82                          l1923 1A74  
                        l2395 186E                          l2491 0886                          l2483 080E  
                        l2475 076C                          l2467 069E                          l2299 1954  
                        l2387 11EE                          l2627 0BD6                          l2619 0B7E  
                        l2571 0A0C                          l2549 12A4                          l2557 12BA  
                        l1933 1A84                          l1925 1A76                          l1917 1B52  
                        l1941 1B98                          l2397 1876                          l2485 0866  
                        l2477 077A                          l2469 0702                          l2389 11F4  
                        l2629 0BDA                          l2581 0A54                          l2573 0A10  
                        l2565 09E6                          l2559 12CA                          l1935 1A84  
                        l1927 1A76                          l1919 1A5C                          l1951 16DA  
                        l1943 16D0                          l2399 1896                          l2487 0872  
                        l2495 08B4                          l2591 0A86                          l2583 0A58  
                        l2575 0A14                          l2567 0A04                          l1937 1A96  
                        l1929 1A78                          l1961 16F2                          l1953 16DC  
                        l1945 16D4                          l2497 091A                          l2489 0878  
                        l2593 0A92                          l2585 0A6A                          l2577 0A20  
                        l2569 0A08                          l1971 172E                          l1963 16F6  
                        l1955 16E6                          l1947 16D8                          l2499 0972  
                        l2595 0A9C                          l2587 0A6E                          l2579 0A38  
                        l1973 1732                          l1965 16FE                          l1957 16EA  
                        l1949 16D8                          l1981 1AA6                          l2597 0AA0  
                        l2589 0A72                          l1975 1732                          l1967 1710  
                        l1959 16EA                          l1991 1AB8                          l1983 1AAA  
                        l2599 0AAA                          l1969 1724                          l1993 1ABC  
                        l1985 1AAA                          l1995 1ABC                          l1987 1AAC  
                        l1979 1AA2                          l1997 1AC4                          l1989 1AAE  
                        l1999 1AC8                          STR_1 0647                          STR_2 0634  
                        u1000 14C8                          u1001 14C4                          u1010 14DE  
                        u1011 14DA                          u1020 13A4                          u1100 0F00  
                        u1021 13A0                          u1101 0EFC                          u1030 13BE  
                        u1110 0F46                          u1031 13BA                          u1111 0F42  
                        u1040 13D8                          u1120 117A                          u1200 1048  
                        u1041 13D4                          u1121 1176                          u1201 1044  
                        u1210 1064                          u1050 13F6                          u1130 119C  
                        u1211 1060                          u1051 13F2                          u1131 1198  
                        u1220 10B0                          u1300 091A                          u1060 140C  
                        u1140 11C2                          u1221 10AC                          u1301 0916  
                        u1061 1408                          u1141 11BE                          u1230 10D6  
                        u1310 09E4                          u1070 1430                          u1150 11E8  
                        u1231 10D2                          u1311 09E0                          u1071 142C  
                        u1151 11E4                          u1240 1122                          u1080 0E9A  
                        u1160 1212                          u1400 0A86                          u1241 111E  
                        u1081 0E96                          u1161 120E                          u1401 0A82  
                        u1330 122A                          u1250 0666                          u1090 0EE0  
                        u1170 0F88                          u1410 0B72                          u1331 1226  
                        u1251 0662                          u1091 0EDC                          u1171 0F84  
                        u1411 0B6E                          u1340 1244                          u1260 0674  
                        u1180 0FB4                          u1341 1240                          u1261 0670  
                        u1181 0FB0                          u1350 126A                          u1270 069A  
                        u1190 1024                          u1351 1266                          u1271 0696  
                        u1191 1020                          u1360 1288                          u1280 0702  
                        u1361 1284                          u1281 06FE                          u1370 12A4  
                        u1290 080E                          u1371 12A0                          u1291 080A  
                        u1507 1796                          u1427 0A44                          u1380 12CA  
                        u1381 12C6                          u1517 18BA                          u1437 0AE2  
                        u1390 0A6A                          u1527 16F8                          u1447 0BC6  
                        u1391 0A66                          u1537 1726                          u1457 0BE2  
                        u1467 1744                          u1477 1760                          u1487 1772  
                        u1497 1784                          _RCIF 007CF5                          _TMR0 000FD6  
                        _TMR1 000FCE              ??_initialisation 0062                          _main 09E6  
                        _rand 18CC                          feu@i 006D                          feu@x 006F  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0001                          prodh 000FF4                          prodl 000FF3  
                        start 002C               ?_lcd_putMessage 0065                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000   nouveauxAliens@endroitAliens 0079  
                       ??_feu 0068               ??_lcd_ecritChar 0063                         ?_main 0060  
                       ?_rand 006C               __end_of___awdiv 12DC               __end_of___awmod 1442  
                       _ANSEL 000F7E               ___awdiv@divisor 0062               __end_of___lwdiv 15EE  
             __end_of___lwmod 1808                         i2l162 0028               ___awdiv@counter 0064  
                       _RCREG 000FAE               __end_of_accueil 062A                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 114A           ___lmul@multiplicand 0064                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 0063               __end_of_dpowers 061B                         _randx 00EA  
                       _perdu 114A                         _srand 1B6A               __end_of_niveau1 0634  
                       tablat 000FF5                         ttemp5 0002                         ttemp6 0005  
                       ttemp7 0009                         status 000FD8                         wtemp8 0002  
             __end_of_sprintf 0DF8      __end_of_lcd_cacheCurseur 1B98                __CFG_HFOFST$ON 000000  
       __size_of_affichePerdu 005E                __CFG_PBADEN$ON 000000               __initialization 19CA  
                __end_of_main 0BF4                  __end_of_rand 1922          lcd_putMessage@chaine 0065  
                      ??_main 00B0                        ??_rand 006E                 __activetblptr 000003  
                      _ADCON1 000FC1                  _affichePerdu 186E                        _ADRESH 000FC4  
                      ?_perdu 0060              ___awdiv@dividend 0060                        ?_srand 0060  
                      _ANSELH 000F7F                __CFG_WDTEN$OFF 000000                        i2l1863 000A  
                      i2l1865 0018                        i2l1867 001A                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 0065                lcd_initCGRam@j 0066  
              getAnalog@canal 0061              __end_of_lcd_busy 1A9E              __end_of_lcd_init 1B26  
            __end_of_high_isr 002C              __end_of_jeuPerdu 0611                        ___lmul 1660  
                      ___wmul 1B26                     ??___awdiv 0064                __CFG_STVREN$ON 000000  
                   ??___awmod 0072              ??_nouveauxAliens 0074                     ??___lwdiv 0064  
                   ??___lwmod 006B              ___awdiv@quotient 0066                        feu@pts 0066  
             ___awmod@divisor 0070                     ??_deplace 0067               ___awmod@counter 0072  
                      _strcpy 1A18                        perdu@i 0061                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 0060        __size_of_afficheAliens 0066                     ??_sprintf 0072  
           _lcd_resetSequence 1738                    __accesstop 0060       __end_of__initialization 1A0E  
   nouveauxAliens@sorteAliens 007A           _lcd_strobeEnableBit 1B98            ?_lcd_resetSequence 0060  
               ___rparam_used 000000           _lcd_effaceAffichage 1B7A                  __pidataBANK0 1BA0  
                __pidataBANK1 14E4           ??_lcd_resetSequence 0062                 __end_of_perdu 1216  
               __end_of_srand 1B7A          ?_lcd_strobeEnableBit 0060            __size_of_getAnalog 002C  
        ?_lcd_effaceAffichage 0060            __size_of_lcd_wrCom 006C                       ??_perdu 0060  
   __end_of_lcd_resetSequence 17A2                       ??_srand 0062      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 1B4E                    __pbssBANK0 00F0              ??_lcd_putMessage 0068  
          ?_lcd_ecrireDonnees 0060              main@bufferNiveau 00B2      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 0060                 _afficheAliens 1808                       ?___lmul 0060  
                     ?___wmul 0060                ___lmul@product 0068         ??_lcd_strobeEnableBit 0060  
                     ?_strcpy 0060                    _lcd_gotoXY 15EE         ??_lcd_effaceAffichage 0063  
                  _lcd_wrData 1A9E                       i2u69_40 0018                       i2u69_41 0014  
   __end_of_lcd_ecrireDonnees 1B6A                     ?_lcd_busy 0060                     ?_lcd_init 0060  
     lcd_ecrireDonnees@donnee 0061                     ?_high_isr 0060             __end_of_getAnalog 1AFE  
           ?_lcd_cacheCurseur 0060                       __Hparam 0000                       __Lparam 0000  
          ??_lcd_cacheCurseur 0063                ?_afficheAliens 0060               nouveauxAliens@i 0075  
             nouveauxAliens@j 0077             __end_of_lcd_wrCom 1738                       ___awdiv 1216  
             __size_of___lmul 006C                       ___awmod 1390                   videAliens@i 0068  
                 videAliens@j 006A               __size_of___wmul 0028                       ___lwdiv 1578  
                     ___lwmod 17A2                       _accueil 061B                  __psmallconst 0600  
                     __pcinit 19CA                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 104A                       __ptext0 09E6                       __ptext1 0F48  
                     __ptext2 114A                       __ptext3 0DF8                       __ptext4 1A18  
                     __ptext5 18CC                       __ptext6 1660                       __ptext7 1390  
                     __ptext8 1AFE                       __ptext9 1738         __end_of_lcd_ecritChar 19CA  
                   _T0CONbits 000FD5               lcd_busy@adresse 0061               __size_of_strcpy 0044  
                   _T1CONbits 000FCD                       _dpowers 0611                  __size_of_feu 0392  
            ___awmod@dividend 006E                       _niveau1 062A              lcd_ecritChar@car 0063  
                     _sprintf 0BF4                    ??_lcd_busy 0060                       main@pts 00E6  
                  ??_lcd_init 0067    __size_of_lcd_resetSequence 006A                    ??_high_isr 0060  
            _m_tempsDAfficher 00F0          end_of_initialization 1A0E         __end_of_lcd_initCGRam 14E4  
                  _videAliens 0F48             ??_lcd_lireDonnees 0060                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0054             ??_lcd_curseurHome 0063  
         lcd_ecritChar@posRam 0064                     _PORTAbits 000F80                     _PORTBbits 000F81  
                 ?_lcd_gotoXY 0063                     _TRISCbits 000F94                   ?_lcd_wrData 0060  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheAliens 006E  
              __end_of___lmul 16CC                __end_of___wmul 1B4E                   _BAUDCONbits 000FB8  
              __end_of_strcpy 1A5C           start_initialization 19CA                   __end_of_feu 09E6  
                 ?_videAliens 0060           __size_of_lcd_gotoXY 0072                      ??___lmul 0068  
                    ??___wmul 0064           __size_of_lcd_wrData 0034                   __pdataBANK0 00EA  
                 __pdataBANK1 0100              __CFG_LPT1OSC$OFF 000000                      ??_strcpy 0064  
               __pcstackBANK0 0060       __size_of_nouveauxAliens 0150             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __size_of_high_isr 0024                   sprintf@flag 0075  
                 sprintf@prec 0076              ___lwdiv@dividend 0060             __CFG_CCP2MX$PORTC 000000  
                   _getAnalog 1AD2   __end_of_lcd_strobeEnableBit 1BA0                     __pintcode 0008  
              _initialisation 1922                      ?___awdiv 0060                      ?___awmod 006E  
                    ?___lwdiv 0060                      ?___lwmod 0067                      ?_deplace 0065  
 __end_of_lcd_effaceAffichage 1B88                     _lcd_wrCom 16CC     __size_of_lcd_cacheCurseur 0008  
                 __smallconst 0600           __size_of_videAliens 0102            affichePerdu@buffer 007E  
               ?_affichePerdu 007A              ___lwdiv@quotient 0064               _lcd_lireDonnees 1BA6  
                    ?_sprintf 006C           lcd_wrData@caractere 0062                __size_of_perdu 00CC  
              __size_of_srand 0010               _lcd_curseurHome 1B88                ___wmul@product 0064  
      __end_of_initialisation 1976                    ?_getAnalog 0060              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 0060                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0060                  ??_lcd_gotoXY 0064  
              ??_affichePerdu 007C                  ??_lcd_wrData 0062             lcd_wrCom@commande 0062  
           ___lmul@multiplier 0060                     copy_data0 19DE                     copy_data1 19FE  
                    __Hparam0 0000        __size_of_lcd_ecritChar 0054                      __Lparam0 0000  
             ?_initialisation 0060            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoXY 1660  
          __end_of_lcd_wrData 1AD2              __size_of___awdiv 00C6              __size_of___awmod 00B2  
            __size_of___lwdiv 0076              __size_of___lwmod 0066        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 006D              __size_of_deplace 0100       __end_of_lcd_lireDonnees 1BAC  
                  sprintf@val 0077                _nouveauxAliens 0DF8               ___lwdiv@divisor 0062  
                    _matCGRAM 0100               ___lwdiv@counter 0066       __end_of_lcd_curseurHome 1B90  
                    __ptext10 1442                      __ptext11 1B88                      __ptext20 17A2  
                    __ptext12 1922                      __ptext21 1578                      __ptext13 1B6A  
                    __ptext30 1B98                      __ptext22 1B90                      __ptext14 0654  
                    __ptext31 1B4E                      __ptext23 1808                      __ptext15 1B26  
                    __ptext32 1A5C                      __ptext24 12DC                      __ptext16 104A  
                    __ptext33 1BA6                      __ptext25 1976                      __ptext17 1AD2  
                    __ptext34 1216                      __ptext26 1A9E                      __ptext18 186E  
                    __ptext27 15EE                      __ptext19 0BF4                      __ptext28 1B7A  
                    __ptext29 16CC               affichePerdu@pts 007A                      _m_aliens 0140  
                    _lcd_busy 1A5C                      _lcd_init 1AFE                      _high_isr 0008  
                    _jeuPerdu 0601              __size_of_sprintf 0204                    strcpy@from 0062  
                    _m_niveau 00EE                 __size_of_main 020E                 __size_of_rand 0056  
                ??_videAliens 0066                      deplace@x 0065                   ??_getAnalog 0060  
       __end_of_afficheAliens 186E                      int$flags 0001                      main@posX 00E8  
                 ??_lcd_wrCom 0062              _lcd_cacheCurseur 1B90        __end_of_nouveauxAliens 0F48  
               _lcd_ecritChar 1976                    _INTCONbits 000FF2            __end_of_videAliens 104A  
                    intlevel2 0000                     sprintf@ap 0073                     sprintf@sp 006C  
               _lcd_initCGRam 1442              ___lwmod@dividend 0067                _lcd_putMessage 12DC  
        __end_of_affichePerdu 18CC                ?_lcd_ecritChar 0060                      sprintf@c 0079  
                    sprintf@f 006E               ?_nouveauxAliens 0060              ?_lcd_lireDonnees 0060  
             ___lwmod@divisor 0069                      strcpy@cp 0064                      strcpy@to 0060  
             ___lwmod@counter 006B              ?_lcd_curseurHome 0060                ?_lcd_initCGRam 0060  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 1390  
